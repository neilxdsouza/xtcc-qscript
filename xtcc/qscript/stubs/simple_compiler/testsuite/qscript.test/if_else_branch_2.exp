set test "qscript oper_string test"
set timeout 7
global QSCRIPT
global QSCRIPT_HOME
spawn rm qscript_stdout.log
wait
spawn $QSCRIPT -f inputs/inp_if_else_branches_2
wait

spawn inputs/inp_if_else_branches_2.exe
expect {
	"Enter Serial No (0) to exit:" {
		send_user "got Serial prompt\n";
		send "1\r" ;
	}
	default { send_user "failed\n"; }
}

expect {
	"q1. Q1. \r\n" {
		send_user "Reached q1\n";
	}
	default { send_user "failed\n"; }
}

expect {
	"1\r\n2\r\n3\r\n4\r\n" {
		send_user "Got stubs for q1\n";
		send "1\r";
	}
	default { send_user "failed\n"; }
}

expect {
	"q2. Q2. \r\n" {
		send_user "Reached q2\n";
	}
	default { send_user "failed\n"; }
}

expect {
	"5\r\n6\r\n" {
		send_user "Got stubs for q2\n";
		send "5\r";
	}
	default { send_user "failed\n"; }
}

expect {
	"q4. Q4. \r\n" {
		send_user "Reached q4\n";
	}
	default { send_user "failed\n"; }
}

expect {
	"1\r\n2\r\n3\r\n4\r\n" {
		send_user "Got stubs for q4\n";
		send "p\r";
	}
	default { send_user "failed\n"; }
}

expect {
	"target question: q2target question Index: 0q2. Q2. " {
		send_user "Jumped back to q2\n";
	}
	default { send_user "failed\n"; }
}

expect {
	"5\r\n6\r\n" {
		send_user "Got stubs for q2\n";
		send "p\r";
	}
	default { send_user "failed\n"; }
}

expect {
	"target question: q1target question Index: 0q1. Q1. " {
		send_user "Jumped back to q1\n";
	}
	default { send_user "failed\n"; }
}

expect {
	"1\r\n2\r\n3\r\n4\r\n" {
		send_user "Got stubs for q1\n";
		send "3\r";
	}
	default { send_user "failed\n"; }
}

expect {
	"q3. Q3. " {
		send_user "reached q3\n";
	}
	default { send_user "failed\n"; }
}

expect {
	"5\r\n6\r\n" {
		send_user "Got stubs for q3\n";
		send "6\r";
	}
	default { send_user "failed\n"; }
}


expect {
	"q4. Q4. \r\n" {
		send_user "reached q4\n";
	}
	default { send_user "failed\n"; }
}

expect {
	"1\r\n2\r\n3\r\n4\r\n" {
		send_user "Got stubs for q4\n";
		send "1\r";
	}
	default { send_user "failed\n"; }
}

expect {
	"q5. Q5. " {
		send_user "reached q5\n";
	}
	default { send_user "failed\n"; }
}

expect {
	"7\r\n8\r\n" {
		send_user "Got stubs for q5\n";
		send "7\r";
	}
	default { send_user "failed\n"; }
}


expect {
	"q6. Q6. " {
		send_user "reached q6\n";
	}
	default { send_user "failed\n"; }
}

expect {
	"21\r\n22\r\n" {
		send_user "Got stubs for q6\n";
		send "21\r";
		send_user "sent response 21\n";
	}
	default { send_user "failed\n"; }
}

expect {
	-ex "q5_1. Q5_1. " {
		send_user "reached q5_1\n";
	}
	default { send_user "failed\n"; }
}

expect {
	"9\r\n10\r\n" {
		send_user "Got stubs for q5_1\n";
		send "9\r";
	}
	default { send_user "failed\n"; }
}


expect {
	"q5_2. Q5_2. " {
		send_user "reached q5_2\n";
	}
	default { send_user "failed\n"; }
}

expect {
	"11\r\n12\r\n" {
		send_user "Got stubs for q5_2\n";
		send "p\r";
	}
	default { send_user "failed\n"; }
}


expect {
	"q5_1. Q5_1. " {
		send_user "reached q5_1\n";
	}
	default { send_user "failed\n"; }
}

expect {
	"9\r\n10\r\n" {
		send_user "Got stubs for q5_1\n";
		send "p\r";
	}
	default { send_user "failed\n"; }
}

expect {
	"q6. Q6. " {
		send_user "reached q6\n";
	}
	default { send_user "failed\n"; }
}

expect {
	"21\r\n22\r\n" {
		send_user "Got stubs for q6\n";
		send "p\r";
	}
	default { send_user "failed\n"; }
}

expect {
	"q5. Q5. " {
		send_user "reached q5\n";
	}
	default { send_user "failed\n"; }
}

expect {
	"7\r\n8\r\n" {
		send_user "Got stubs for q5\n";
		send "8\r";
	}
	default { send_user "failed\n"; }
}

expect {
	"q5_3. Q5_3. " {
		send_user "reached q5_3\n";
	}
	default { send_user "failed\n"; }
}

expect {
	"13\r\n14\r\n" {
		send_user "Got stubs for q5_3\n";
		send "13\r";
	}
	default { send_user "failed\n"; }
}


expect {
	"q5_4. Q5_4. " {
		send_user "reached q5_4\n";
	}
	default { send_user "failed\n"; }
}

expect {
	"15\r\n16\r\n" {
		send_user "Got stubs for q5_4\n";
		send "j\r";
	}
	default { send_user "failed\n"; }
}

expect "q1 q3 q4 q5 q6 q5_3\r\n";
send "q4\r";

expect {
	"q4. Q4. \r\n" {
		send_user "Reached q4\n";
	}
	default { send_user "failed\n"; }
}

expect {
	"1\r\n2\r\n3\r\n4\r\n" {
		send_user "Got stubs for q4\n";
		send "3\r";
	}
	default { send_user "failed\n"; }
}


expect {
	"q7. Q7. \r\n" {
		send_user "Reached q7\n";
	}
	default { send_user "failed\n"; }
}

expect {
	"7\r\n8\r\n" {
		send_user "Got stubs for q7\n";
		send "7\r";
	}
	default { send_user "failed\n"; }
}


expect {
	"q8. Q8. \r\n" {
		send_user "Reached q8\n";
	}
	default { send_user "failed\n"; }
}

expect {
	"7\r\n8\r\n" {
		send_user "Got stubs for q8\n";
		send "8\r";
	}
	default { send_user "failed\n"; }
}

expect {
	-ex "End of Questionnaire: (s to save, p = previous question, j = question jump list)"  {
		send_user "reached end of questionnaire\n";
		send "s\r";
	}
	default { send_user "failed\n"; }
}

expect {
	-ex "Enter Serial No (0) to exit: " {
		send "0\r";
		pass $test;
	}
	default { send_user "failed\n"; }
}



