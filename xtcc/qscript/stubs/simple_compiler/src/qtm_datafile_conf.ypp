
%{
#include <sys/types.h>
#include "qtm_datafile_conf_parser.h"
#include <iostream>
	void qtm_datafile_conf_error(const char * s);
	int qtm_datafile_conf_lex();
%}

%union {
	int32_t ival;
}

%token SER_NO_COLS
%token CARD_NO_COLS
%token <ival> INUMBER
%token READ_EQ
%token AUTO
%token DATA_START_COL_NO
%token DATA_END_COL_NO

%%


config_file: statement_list
	;

statement_list: statement
	| statement_list statement
	;

statement:
	CARD_NO_COLS '=' INUMBER ',' INUMBER ';' {
		qtm_datafile_conf_parser_ns::crd_start = $3;
		qtm_datafile_conf_parser_ns::crd_end = $5;
	}
	| SER_NO_COLS '=' INUMBER ',' INUMBER ';' {
		qtm_datafile_conf_parser_ns::ser_start = $3;
		qtm_datafile_conf_parser_ns::ser_end = $5;
	}
	| DATA_START_COL_NO '=' INUMBER ';' {
		qtm_datafile_conf_parser_ns::data_start_col = $3;
	}
	| DATA_START_COL_NO '=' AUTO ';' {
		qtm_datafile_conf_parser_ns::auto_determine_data_start_col = true;
	}
	| DATA_END_COL_NO '=' INUMBER ';' {
		qtm_datafile_conf_parser_ns::data_end_col = $3;
	}
	| READ_EQ '=' INUMBER ';' {
		if (! ($3 == 0 || $3 == 1 || $3 == 2) ) {
			std::cerr << "READ_EQ mode can be 0, 1 or 2 only\n";
			exit(1);
		} else {
			if ($3 == 0) {
				qtm_datafile_conf_parser_ns::qtm_file_mode = qtm_data_file_ns::READ_EQ_0;
			} else if ($3 == 1) {
				qtm_datafile_conf_parser_ns::qtm_file_mode = qtm_data_file_ns::READ_EQ_1;
			} else if ($3 == 2) {
				qtm_datafile_conf_parser_ns::qtm_file_mode = qtm_data_file_ns::READ_EQ_2;
			}
		}
	}
	;

%%
