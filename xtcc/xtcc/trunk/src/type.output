Terminals unused in grammar

   CONVERT
   CODELIST


State 240 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog $end

    1 $@1: /* empty */

    2 prog: DATA_STRUCT ';' REC_LEN '=' INUMBER ';' $@1 ED_START top_level_item_list ED_END
    3     | AXSTART '{' ax_list '}'
    4     | TABSTART '{' tab_list '}'

    5 top_level_item_list: top_level_item
    6                    | top_level_item_list top_level_item

    7 top_level_item: decl
    8               | func_defn

    9 xtcc_type: VOID_T
   10          | INT8_T
   11          | INT16_T
   12          | INT32_T
   13          | FLOAT_T
   14          | DOUBLE_T

   15 $@2: /* empty */

   16 func_defn: xtcc_type NAME '(' decl_comma_list ')' $@2 compound_stmt

   17 decl: xtcc_type NAME ';'
   18     | xtcc_type NAME '=' expression ';'
   19     | xtcc_type NAME '[' INUMBER ']' ';'
   20     | DEFINELIST NAME '=' range_list ';'
   21     | func_decl

   22 func_decl: xtcc_type NAME '(' decl_comma_list ')' ';'

   23 decl_comma_list: var_decl
   24                | decl_comma_list ',' var_decl

   25 var_decl: xtcc_type NAME
   26         | xtcc_type NAME '[' INUMBER ']'
   27         | xtcc_type '&' NAME
   28         | /* empty */

   29 statement_list: statement
   30               | statement_list statement
   31               | attributes

   32 $@3: /* empty */

   33 statement: FOR '(' expression ';' expression ';' expression ')' $@3 statement
   34          | if_stmt
   35          | expression ';'
   36          | compound_stmt
   37          | decl
   38          | ListStatement
   39          | BREAK ';'
   40          | CONTINUE ';'
   41          | FieldStatement
   42          | error ';'

   43 ListStatement: LISTA NAME TEXT ';'
   44              | LISTA NAME '[' expression ']' TEXT ';'
   45              | LISTA NAME '[' expression ',' expression ']' TEXT ';'

   46 if_stmt: IF '(' expression ')' statement
   47        | IF '(' expression ')' statement ELSE statement

   48 FieldStatement: FLD NAME '=' NAME '(' expression ',' expression ')' ':' INUMBER ';'

   49 compound_stmt: open_curly statement_list '}'

   50 open_curly: '{'

   51 expr_list: expression
   52          | expr_list ',' expression

   53 expression: expression '+' expression
   54           | expression '-' expression
   55           | expression '*' expression
   56           | expression '/' expression
   57           | expression '%' expression
   58           | '-' expression
   59           | expression '<' expression
   60           | expression '>' expression
   61           | expression LEQ expression
   62           | expression GEQ expression
   63           | expression ISEQ expression
   64           | expression NOEQ expression
   65           | expression LOGOR expression
   66           | expression LOGAND expression
   67           | expression '=' expression
   68           | NOT expression
   69           | INUMBER
   70           | FNUMBER
   71           | NAME
   72           | NAME '[' expression ']'
   73           | NAME '[' expression ',' expression ']'
   74           | NAME '(' expr_list ')'
   75           | TEXT
   76           | '(' expression ')'
   77           | expression IN '(' range_list ')'

   78 range_list: range
   79           | range_list ',' range

   80 range: INUMBER '-' INUMBER
   81      | INUMBER

   82 tab_list: tab_defn
   83         | tab_list tab_defn

   84 tab_defn: TAB NAME NAME ';'
   85         | TAB NAME NAME ';' COND_START expression ';'
   86         | error ';'

   87 ax_list: ax_defn
   88        | ax_list ax_defn

   89 ax_defn: AX NAME ';' ttl_ax_stmt_list count_ax_stmt_list
   90        | AX NAME ';' COND_START expression ';' ttl_ax_stmt_list count_ax_stmt_list
   91        | error ';'

   92 $@4: /* empty */

   93 attributes: ATTRIBUTE_LIST NAME '=' $@4 text_list ';'

   94 text_list: TEXT ';'
   95          | text_list TEXT ';'

   96 stub_list: stub
   97          | stub_list stub

   98 stub: TEXT '=' INUMBER ';'

   99 ttl_ax_stmt_list: ttl_ax_stmt
  100                 | ttl_ax_stmt_list ttl_ax_stmt

  101 ttl_ax_stmt: TTL ';' TEXT ';'

  102 count_ax_stmt_list: count_ax_stmt
  103                   | count_ax_stmt_list count_ax_stmt

  104 count_ax_stmt: TOT ';' TEXT ';'
  105              | TOT ';' TEXT ';' COND_START expression ';'
  106              | CNT ';' TEXT ';' COND_START expression ';'
  107              | INC ';' expression ';' COND_START expression ';'
  108              | bit_list

  109 bit_list: BIT NAME ';' stub_list ';'


Terminals, with rules where they appear

$end (0) 0
'%' (37) 57
'&' (38) 27
'(' (40) 16 22 33 46 47 48 74 76 77
')' (41) 16 22 33 46 47 48 74 76 77
'*' (42) 55
'+' (43) 53
',' (44) 24 45 48 52 73 79
'-' (45) 54 58 80
'/' (47) 56
':' (58) 48
';' (59) 2 17 18 19 20 22 33 35 39 40 42 43 44 45 48 84 85 86 89 90
    91 93 94 95 98 101 104 105 106 107 109
'<' (60) 59
'=' (61) 2 18 20 48 67 93 98
'>' (62) 60
'[' (91) 19 26 44 45 72 73
']' (93) 19 26 44 45 72 73
'{' (123) 3 4 50
'}' (125) 3 4 49
error (256) 42 86 91
CONVERT (258)
TOT (259) 104 105
AX (260) 89 90
CNT (261) 106
TTL (262) 101
FOR (263) 33
FLD (264) 48
BIT (265) 109
TEXT (266) 43 44 45 75 94 95 98 101 104 105 106
NAME (267) 16 17 18 19 20 22 25 26 27 43 44 45 48 71 72 73 74 84 85
    89 90 93 109
DEFINELIST (268) 20
FNUMBER (269) 70
INUMBER (270) 2 19 26 48 69 80 81 98
CODELIST (271)
LISTA (272) 43 44 45
IF (273) 46 47
ELSE (274) 47
IN (275) 77
VOID_T (276) 9
INT8_T (277) 10
INT16_T (278) 11
INT32_T (279) 12
FLOAT_T (280) 13
DOUBLE_T (281) 14
ATTRIBUTE_LIST (282) 93
AXSTART (283) 3
TABSTART (284) 4
ED_START (285) 2
DATA_STRUCT (286) 2
REC_LEN (287) 2
ED_END (288) 2
TAB (289) 84 85
COND_START (290) 85 90 105 106 107
CONTINUE (291) 40
BREAK (292) 39
INC (293) 107
LOGOR (294) 65
LOGAND (295) 66
NOEQ (296) 64
ISEQ (297) 63
GEQ (298) 62
LEQ (299) 61
NOT (300) 68
UMINUS (301)
FUNC_CALL (302)


Nonterminals, with rules where they appear

$accept (66)
    on left: 0
prog (67)
    on left: 2 3 4, on right: 0
$@1 (68)
    on left: 1, on right: 2
top_level_item_list (69)
    on left: 5 6, on right: 2 6
top_level_item (70)
    on left: 7 8, on right: 5 6
xtcc_type (71)
    on left: 9 10 11 12 13 14, on right: 16 17 18 19 22 25 26 27
func_defn (72)
    on left: 16, on right: 8
$@2 (73)
    on left: 15, on right: 16
decl (74)
    on left: 17 18 19 20 21, on right: 7 37
func_decl (75)
    on left: 22, on right: 21
decl_comma_list (76)
    on left: 23 24, on right: 16 22 24
var_decl (77)
    on left: 25 26 27 28, on right: 23 24
statement_list (78)
    on left: 29 30 31, on right: 30 49
statement (79)
    on left: 33 34 35 36 37 38 39 40 41 42, on right: 29 30 33 46 47
$@3 (80)
    on left: 32, on right: 33
ListStatement (81)
    on left: 43 44 45, on right: 38
if_stmt (82)
    on left: 46 47, on right: 34
FieldStatement (83)
    on left: 48, on right: 41
compound_stmt (84)
    on left: 49, on right: 16 36
open_curly (85)
    on left: 50, on right: 49
expr_list (86)
    on left: 51 52, on right: 52 74
expression (87)
    on left: 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
    71 72 73 74 75 76 77, on right: 18 33 35 44 45 46 47 48 51 52 53
    54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 72 73 76 77 85 90
    105 106 107
range_list (88)
    on left: 78 79, on right: 20 77 79
range (89)
    on left: 80 81, on right: 78 79
tab_list (90)
    on left: 82 83, on right: 4 83
tab_defn (91)
    on left: 84 85 86, on right: 82 83
ax_list (92)
    on left: 87 88, on right: 3 88
ax_defn (93)
    on left: 89 90 91, on right: 87 88
attributes (94)
    on left: 93, on right: 31
$@4 (95)
    on left: 92, on right: 93
text_list (96)
    on left: 94 95, on right: 93 95
stub_list (97)
    on left: 96 97, on right: 97 109
stub (98)
    on left: 98, on right: 96 97
ttl_ax_stmt_list (99)
    on left: 99 100, on right: 89 90 100
ttl_ax_stmt (100)
    on left: 101, on right: 99 100
count_ax_stmt_list (101)
    on left: 102 103, on right: 89 90 103
count_ax_stmt (102)
    on left: 104 105 106 107 108, on right: 102 103
bit_list (103)
    on left: 109, on right: 108


state 0

    0 $accept: . prog $end

    AXSTART      shift, and go to state 1
    TABSTART     shift, and go to state 2
    DATA_STRUCT  shift, and go to state 3

    prog  go to state 4


state 1

    3 prog: AXSTART . '{' ax_list '}'

    '{'  shift, and go to state 5


state 2

    4 prog: TABSTART . '{' tab_list '}'

    '{'  shift, and go to state 6


state 3

    2 prog: DATA_STRUCT . ';' REC_LEN '=' INUMBER ';' $@1 ED_START top_level_item_list ED_END

    ';'  shift, and go to state 7


state 4

    0 $accept: prog . $end

    $end  shift, and go to state 8


state 5

    3 prog: AXSTART '{' . ax_list '}'

    error  shift, and go to state 9
    AX     shift, and go to state 10

    ax_list  go to state 11
    ax_defn  go to state 12


state 6

    4 prog: TABSTART '{' . tab_list '}'

    error  shift, and go to state 13
    TAB    shift, and go to state 14

    tab_list  go to state 15
    tab_defn  go to state 16


state 7

    2 prog: DATA_STRUCT ';' . REC_LEN '=' INUMBER ';' $@1 ED_START top_level_item_list ED_END

    REC_LEN  shift, and go to state 17


state 8

    0 $accept: prog $end .

    $default  accept


state 9

   91 ax_defn: error . ';'

    ';'  shift, and go to state 18


state 10

   89 ax_defn: AX . NAME ';' ttl_ax_stmt_list count_ax_stmt_list
   90        | AX . NAME ';' COND_START expression ';' ttl_ax_stmt_list count_ax_stmt_list

    NAME  shift, and go to state 19


state 11

    3 prog: AXSTART '{' ax_list . '}'
   88 ax_list: ax_list . ax_defn

    error  shift, and go to state 9
    AX     shift, and go to state 10
    '}'    shift, and go to state 20

    ax_defn  go to state 21


state 12

   87 ax_list: ax_defn .

    $default  reduce using rule 87 (ax_list)


state 13

   86 tab_defn: error . ';'

    ';'  shift, and go to state 22


state 14

   84 tab_defn: TAB . NAME NAME ';'
   85         | TAB . NAME NAME ';' COND_START expression ';'

    NAME  shift, and go to state 23


state 15

    4 prog: TABSTART '{' tab_list . '}'
   83 tab_list: tab_list . tab_defn

    error  shift, and go to state 13
    '}'    shift, and go to state 24
    TAB    shift, and go to state 14

    tab_defn  go to state 25


state 16

   82 tab_list: tab_defn .

    $default  reduce using rule 82 (tab_list)


state 17

    2 prog: DATA_STRUCT ';' REC_LEN . '=' INUMBER ';' $@1 ED_START top_level_item_list ED_END

    '='  shift, and go to state 26


state 18

   91 ax_defn: error ';' .

    $default  reduce using rule 91 (ax_defn)


state 19

   89 ax_defn: AX NAME . ';' ttl_ax_stmt_list count_ax_stmt_list
   90        | AX NAME . ';' COND_START expression ';' ttl_ax_stmt_list count_ax_stmt_list

    ';'  shift, and go to state 27


state 20

    3 prog: AXSTART '{' ax_list '}' .

    $default  reduce using rule 3 (prog)


state 21

   88 ax_list: ax_list ax_defn .

    $default  reduce using rule 88 (ax_list)


state 22

   86 tab_defn: error ';' .

    $default  reduce using rule 86 (tab_defn)


state 23

   84 tab_defn: TAB NAME . NAME ';'
   85         | TAB NAME . NAME ';' COND_START expression ';'

    NAME  shift, and go to state 28


state 24

    4 prog: TABSTART '{' tab_list '}' .

    $default  reduce using rule 4 (prog)


state 25

   83 tab_list: tab_list tab_defn .

    $default  reduce using rule 83 (tab_list)


state 26

    2 prog: DATA_STRUCT ';' REC_LEN '=' . INUMBER ';' $@1 ED_START top_level_item_list ED_END

    INUMBER  shift, and go to state 29


state 27

   89 ax_defn: AX NAME ';' . ttl_ax_stmt_list count_ax_stmt_list
   90        | AX NAME ';' . COND_START expression ';' ttl_ax_stmt_list count_ax_stmt_list

    TTL         shift, and go to state 30
    COND_START  shift, and go to state 31

    ttl_ax_stmt_list  go to state 32
    ttl_ax_stmt       go to state 33


state 28

   84 tab_defn: TAB NAME NAME . ';'
   85         | TAB NAME NAME . ';' COND_START expression ';'

    ';'  shift, and go to state 34


state 29

    2 prog: DATA_STRUCT ';' REC_LEN '=' INUMBER . ';' $@1 ED_START top_level_item_list ED_END

    ';'  shift, and go to state 35


state 30

  101 ttl_ax_stmt: TTL . ';' TEXT ';'

    ';'  shift, and go to state 36


state 31

   90 ax_defn: AX NAME ';' COND_START . expression ';' ttl_ax_stmt_list count_ax_stmt_list

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 44


state 32

   89 ax_defn: AX NAME ';' ttl_ax_stmt_list . count_ax_stmt_list
  100 ttl_ax_stmt_list: ttl_ax_stmt_list . ttl_ax_stmt

    TOT  shift, and go to state 45
    CNT  shift, and go to state 46
    TTL  shift, and go to state 30
    BIT  shift, and go to state 47
    INC  shift, and go to state 48

    ttl_ax_stmt         go to state 49
    count_ax_stmt_list  go to state 50
    count_ax_stmt       go to state 51
    bit_list            go to state 52


state 33

   99 ttl_ax_stmt_list: ttl_ax_stmt .

    $default  reduce using rule 99 (ttl_ax_stmt_list)


state 34

   84 tab_defn: TAB NAME NAME ';' .
   85         | TAB NAME NAME ';' . COND_START expression ';'

    COND_START  shift, and go to state 53

    $default  reduce using rule 84 (tab_defn)


state 35

    2 prog: DATA_STRUCT ';' REC_LEN '=' INUMBER ';' . $@1 ED_START top_level_item_list ED_END

    $default  reduce using rule 1 ($@1)

    $@1  go to state 54


state 36

  101 ttl_ax_stmt: TTL ';' . TEXT ';'

    TEXT  shift, and go to state 55


state 37

   75 expression: TEXT .

    $default  reduce using rule 75 (expression)


state 38

   71 expression: NAME .
   72           | NAME . '[' expression ']'
   73           | NAME . '[' expression ',' expression ']'
   74           | NAME . '(' expr_list ')'

    '['  shift, and go to state 56
    '('  shift, and go to state 57

    $default  reduce using rule 71 (expression)


state 39

   70 expression: FNUMBER .

    $default  reduce using rule 70 (expression)


state 40

   69 expression: INUMBER .

    $default  reduce using rule 69 (expression)


state 41

   76 expression: '(' . expression ')'

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 58


state 42

   58 expression: '-' . expression

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 59


state 43

   68 expression: NOT . expression

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 60


state 44

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'
   90 ax_defn: AX NAME ';' COND_START expression . ';' ttl_ax_stmt_list count_ax_stmt_list

    ';'     shift, and go to state 61
    IN      shift, and go to state 62
    '='     shift, and go to state 63
    LOGOR   shift, and go to state 64
    LOGAND  shift, and go to state 65
    NOEQ    shift, and go to state 66
    ISEQ    shift, and go to state 67
    '<'     shift, and go to state 68
    '>'     shift, and go to state 69
    GEQ     shift, and go to state 70
    LEQ     shift, and go to state 71
    '-'     shift, and go to state 72
    '+'     shift, and go to state 73
    '*'     shift, and go to state 74
    '/'     shift, and go to state 75
    '%'     shift, and go to state 76


state 45

  104 count_ax_stmt: TOT . ';' TEXT ';'
  105              | TOT . ';' TEXT ';' COND_START expression ';'

    ';'  shift, and go to state 77


state 46

  106 count_ax_stmt: CNT . ';' TEXT ';' COND_START expression ';'

    ';'  shift, and go to state 78


state 47

  109 bit_list: BIT . NAME ';' stub_list ';'

    NAME  shift, and go to state 79


state 48

  107 count_ax_stmt: INC . ';' expression ';' COND_START expression ';'

    ';'  shift, and go to state 80


state 49

  100 ttl_ax_stmt_list: ttl_ax_stmt_list ttl_ax_stmt .

    $default  reduce using rule 100 (ttl_ax_stmt_list)


state 50

   89 ax_defn: AX NAME ';' ttl_ax_stmt_list count_ax_stmt_list .
  103 count_ax_stmt_list: count_ax_stmt_list . count_ax_stmt

    TOT  shift, and go to state 45
    CNT  shift, and go to state 46
    BIT  shift, and go to state 47
    INC  shift, and go to state 48

    $default  reduce using rule 89 (ax_defn)

    count_ax_stmt  go to state 81
    bit_list       go to state 52


state 51

  102 count_ax_stmt_list: count_ax_stmt .

    $default  reduce using rule 102 (count_ax_stmt_list)


state 52

  108 count_ax_stmt: bit_list .

    $default  reduce using rule 108 (count_ax_stmt)


state 53

   85 tab_defn: TAB NAME NAME ';' COND_START . expression ';'

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 82


state 54

    2 prog: DATA_STRUCT ';' REC_LEN '=' INUMBER ';' $@1 . ED_START top_level_item_list ED_END

    ED_START  shift, and go to state 83


state 55

  101 ttl_ax_stmt: TTL ';' TEXT . ';'

    ';'  shift, and go to state 84


state 56

   72 expression: NAME '[' . expression ']'
   73           | NAME '[' . expression ',' expression ']'

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 85


state 57

   74 expression: NAME '(' . expr_list ')'

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expr_list   go to state 86
    expression  go to state 87


state 58

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   76           | '(' expression . ')'
   77           | expression . IN '(' range_list ')'

    IN      shift, and go to state 62
    ')'     shift, and go to state 88
    '='     shift, and go to state 63
    LOGOR   shift, and go to state 64
    LOGAND  shift, and go to state 65
    NOEQ    shift, and go to state 66
    ISEQ    shift, and go to state 67
    '<'     shift, and go to state 68
    '>'     shift, and go to state 69
    GEQ     shift, and go to state 70
    LEQ     shift, and go to state 71
    '-'     shift, and go to state 72
    '+'     shift, and go to state 73
    '*'     shift, and go to state 74
    '/'     shift, and go to state 75
    '%'     shift, and go to state 76


state 59

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   58           | '-' expression .
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    $default  reduce using rule 58 (expression)


state 60

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   68           | NOT expression .
   77           | expression . IN '(' range_list ')'

    $default  reduce using rule 68 (expression)


state 61

   90 ax_defn: AX NAME ';' COND_START expression ';' . ttl_ax_stmt_list count_ax_stmt_list

    TTL  shift, and go to state 30

    ttl_ax_stmt_list  go to state 89
    ttl_ax_stmt       go to state 33


state 62

   77 expression: expression IN . '(' range_list ')'

    '('  shift, and go to state 90


state 63

   67 expression: expression '=' . expression

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 91


state 64

   65 expression: expression LOGOR . expression

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 92


state 65

   66 expression: expression LOGAND . expression

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 93


state 66

   64 expression: expression NOEQ . expression

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 94


state 67

   63 expression: expression ISEQ . expression

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 95


state 68

   59 expression: expression '<' . expression

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 96


state 69

   60 expression: expression '>' . expression

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 97


state 70

   62 expression: expression GEQ . expression

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 98


state 71

   61 expression: expression LEQ . expression

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 99


state 72

   54 expression: expression '-' . expression

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 100


state 73

   53 expression: expression '+' . expression

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 101


state 74

   55 expression: expression '*' . expression

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 102


state 75

   56 expression: expression '/' . expression

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 103


state 76

   57 expression: expression '%' . expression

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 104


state 77

  104 count_ax_stmt: TOT ';' . TEXT ';'
  105              | TOT ';' . TEXT ';' COND_START expression ';'

    TEXT  shift, and go to state 105


state 78

  106 count_ax_stmt: CNT ';' . TEXT ';' COND_START expression ';'

    TEXT  shift, and go to state 106


state 79

  109 bit_list: BIT NAME . ';' stub_list ';'

    ';'  shift, and go to state 107


state 80

  107 count_ax_stmt: INC ';' . expression ';' COND_START expression ';'

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 108


state 81

  103 count_ax_stmt_list: count_ax_stmt_list count_ax_stmt .

    $default  reduce using rule 103 (count_ax_stmt_list)


state 82

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'
   85 tab_defn: TAB NAME NAME ';' COND_START expression . ';'

    ';'     shift, and go to state 109
    IN      shift, and go to state 62
    '='     shift, and go to state 63
    LOGOR   shift, and go to state 64
    LOGAND  shift, and go to state 65
    NOEQ    shift, and go to state 66
    ISEQ    shift, and go to state 67
    '<'     shift, and go to state 68
    '>'     shift, and go to state 69
    GEQ     shift, and go to state 70
    LEQ     shift, and go to state 71
    '-'     shift, and go to state 72
    '+'     shift, and go to state 73
    '*'     shift, and go to state 74
    '/'     shift, and go to state 75
    '%'     shift, and go to state 76


state 83

    2 prog: DATA_STRUCT ';' REC_LEN '=' INUMBER ';' $@1 ED_START . top_level_item_list ED_END

    DEFINELIST  shift, and go to state 110
    VOID_T      shift, and go to state 111
    INT8_T      shift, and go to state 112
    INT16_T     shift, and go to state 113
    INT32_T     shift, and go to state 114
    FLOAT_T     shift, and go to state 115
    DOUBLE_T    shift, and go to state 116

    top_level_item_list  go to state 117
    top_level_item       go to state 118
    xtcc_type            go to state 119
    func_defn            go to state 120
    decl                 go to state 121
    func_decl            go to state 122


state 84

  101 ttl_ax_stmt: TTL ';' TEXT ';' .

    $default  reduce using rule 101 (ttl_ax_stmt)


state 85

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   72           | NAME '[' expression . ']'
   73           | NAME '[' expression . ',' expression ']'
   77           | expression . IN '(' range_list ')'

    IN      shift, and go to state 62
    ']'     shift, and go to state 123
    '='     shift, and go to state 63
    ','     shift, and go to state 124
    LOGOR   shift, and go to state 64
    LOGAND  shift, and go to state 65
    NOEQ    shift, and go to state 66
    ISEQ    shift, and go to state 67
    '<'     shift, and go to state 68
    '>'     shift, and go to state 69
    GEQ     shift, and go to state 70
    LEQ     shift, and go to state 71
    '-'     shift, and go to state 72
    '+'     shift, and go to state 73
    '*'     shift, and go to state 74
    '/'     shift, and go to state 75
    '%'     shift, and go to state 76


state 86

   52 expr_list: expr_list . ',' expression
   74 expression: NAME '(' expr_list . ')'

    ')'  shift, and go to state 125
    ','  shift, and go to state 126


state 87

   51 expr_list: expression .
   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    IN      shift, and go to state 62
    '='     shift, and go to state 63
    LOGOR   shift, and go to state 64
    LOGAND  shift, and go to state 65
    NOEQ    shift, and go to state 66
    ISEQ    shift, and go to state 67
    '<'     shift, and go to state 68
    '>'     shift, and go to state 69
    GEQ     shift, and go to state 70
    LEQ     shift, and go to state 71
    '-'     shift, and go to state 72
    '+'     shift, and go to state 73
    '*'     shift, and go to state 74
    '/'     shift, and go to state 75
    '%'     shift, and go to state 76

    $default  reduce using rule 51 (expr_list)


state 88

   76 expression: '(' expression ')' .

    $default  reduce using rule 76 (expression)


state 89

   90 ax_defn: AX NAME ';' COND_START expression ';' ttl_ax_stmt_list . count_ax_stmt_list
  100 ttl_ax_stmt_list: ttl_ax_stmt_list . ttl_ax_stmt

    TOT  shift, and go to state 45
    CNT  shift, and go to state 46
    TTL  shift, and go to state 30
    BIT  shift, and go to state 47
    INC  shift, and go to state 48

    ttl_ax_stmt         go to state 49
    count_ax_stmt_list  go to state 127
    count_ax_stmt       go to state 51
    bit_list            go to state 52


state 90

   77 expression: expression IN '(' . range_list ')'

    INUMBER  shift, and go to state 128

    range_list  go to state 129
    range       go to state 130


state 91

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   67           | expression '=' expression .
   77           | expression . IN '(' range_list ')'

    IN      shift, and go to state 62
    '='     shift, and go to state 63
    LOGOR   shift, and go to state 64
    LOGAND  shift, and go to state 65
    NOEQ    shift, and go to state 66
    ISEQ    shift, and go to state 67
    '<'     shift, and go to state 68
    '>'     shift, and go to state 69
    GEQ     shift, and go to state 70
    LEQ     shift, and go to state 71
    '-'     shift, and go to state 72
    '+'     shift, and go to state 73
    '*'     shift, and go to state 74
    '/'     shift, and go to state 75
    '%'     shift, and go to state 76

    $default  reduce using rule 67 (expression)


state 92

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   65           | expression LOGOR expression .
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    IN      shift, and go to state 62
    LOGAND  shift, and go to state 65
    NOEQ    shift, and go to state 66
    ISEQ    shift, and go to state 67
    '<'     shift, and go to state 68
    '>'     shift, and go to state 69
    GEQ     shift, and go to state 70
    LEQ     shift, and go to state 71
    '-'     shift, and go to state 72
    '+'     shift, and go to state 73
    '*'     shift, and go to state 74
    '/'     shift, and go to state 75
    '%'     shift, and go to state 76

    $default  reduce using rule 65 (expression)


state 93

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   66           | expression LOGAND expression .
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    IN    shift, and go to state 62
    NOEQ  shift, and go to state 66
    ISEQ  shift, and go to state 67
    '<'   shift, and go to state 68
    '>'   shift, and go to state 69
    GEQ   shift, and go to state 70
    LEQ   shift, and go to state 71
    '-'   shift, and go to state 72
    '+'   shift, and go to state 73
    '*'   shift, and go to state 74
    '/'   shift, and go to state 75
    '%'   shift, and go to state 76

    $default  reduce using rule 66 (expression)


state 94

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   64           | expression NOEQ expression .
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    IN   shift, and go to state 62
    '<'  shift, and go to state 68
    '>'  shift, and go to state 69
    GEQ  shift, and go to state 70
    LEQ  shift, and go to state 71
    '-'  shift, and go to state 72
    '+'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '%'  shift, and go to state 76

    $default  reduce using rule 64 (expression)


state 95

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   63           | expression ISEQ expression .
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    IN   shift, and go to state 62
    '<'  shift, and go to state 68
    '>'  shift, and go to state 69
    GEQ  shift, and go to state 70
    LEQ  shift, and go to state 71
    '-'  shift, and go to state 72
    '+'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '%'  shift, and go to state 76

    $default  reduce using rule 63 (expression)


state 96

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   59           | expression '<' expression .
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    IN   shift, and go to state 62
    '-'  shift, and go to state 72
    '+'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '%'  shift, and go to state 76

    $default  reduce using rule 59 (expression)


state 97

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   60           | expression '>' expression .
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    IN   shift, and go to state 62
    '-'  shift, and go to state 72
    '+'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '%'  shift, and go to state 76

    $default  reduce using rule 60 (expression)


state 98

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   62           | expression GEQ expression .
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    IN   shift, and go to state 62
    '-'  shift, and go to state 72
    '+'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '%'  shift, and go to state 76

    $default  reduce using rule 62 (expression)


state 99

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   61           | expression LEQ expression .
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    IN   shift, and go to state 62
    '-'  shift, and go to state 72
    '+'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '%'  shift, and go to state 76

    $default  reduce using rule 61 (expression)


state 100

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   54           | expression '-' expression .
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '%'  shift, and go to state 76

    $default  reduce using rule 54 (expression)


state 101

   53 expression: expression . '+' expression
   53           | expression '+' expression .
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '%'  shift, and go to state 76

    $default  reduce using rule 53 (expression)


state 102

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   55           | expression '*' expression .
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    $default  reduce using rule 55 (expression)


state 103

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   56           | expression '/' expression .
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    $default  reduce using rule 56 (expression)


state 104

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   57           | expression '%' expression .
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    $default  reduce using rule 57 (expression)


state 105

  104 count_ax_stmt: TOT ';' TEXT . ';'
  105              | TOT ';' TEXT . ';' COND_START expression ';'

    ';'  shift, and go to state 131


state 106

  106 count_ax_stmt: CNT ';' TEXT . ';' COND_START expression ';'

    ';'  shift, and go to state 132


state 107

  109 bit_list: BIT NAME ';' . stub_list ';'

    TEXT  shift, and go to state 133

    stub_list  go to state 134
    stub       go to state 135


state 108

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'
  107 count_ax_stmt: INC ';' expression . ';' COND_START expression ';'

    ';'     shift, and go to state 136
    IN      shift, and go to state 62
    '='     shift, and go to state 63
    LOGOR   shift, and go to state 64
    LOGAND  shift, and go to state 65
    NOEQ    shift, and go to state 66
    ISEQ    shift, and go to state 67
    '<'     shift, and go to state 68
    '>'     shift, and go to state 69
    GEQ     shift, and go to state 70
    LEQ     shift, and go to state 71
    '-'     shift, and go to state 72
    '+'     shift, and go to state 73
    '*'     shift, and go to state 74
    '/'     shift, and go to state 75
    '%'     shift, and go to state 76


state 109

   85 tab_defn: TAB NAME NAME ';' COND_START expression ';' .

    $default  reduce using rule 85 (tab_defn)


state 110

   20 decl: DEFINELIST . NAME '=' range_list ';'

    NAME  shift, and go to state 137


state 111

    9 xtcc_type: VOID_T .

    $default  reduce using rule 9 (xtcc_type)


state 112

   10 xtcc_type: INT8_T .

    $default  reduce using rule 10 (xtcc_type)


state 113

   11 xtcc_type: INT16_T .

    $default  reduce using rule 11 (xtcc_type)


state 114

   12 xtcc_type: INT32_T .

    $default  reduce using rule 12 (xtcc_type)


state 115

   13 xtcc_type: FLOAT_T .

    $default  reduce using rule 13 (xtcc_type)


state 116

   14 xtcc_type: DOUBLE_T .

    $default  reduce using rule 14 (xtcc_type)


state 117

    2 prog: DATA_STRUCT ';' REC_LEN '=' INUMBER ';' $@1 ED_START top_level_item_list . ED_END
    6 top_level_item_list: top_level_item_list . top_level_item

    DEFINELIST  shift, and go to state 110
    VOID_T      shift, and go to state 111
    INT8_T      shift, and go to state 112
    INT16_T     shift, and go to state 113
    INT32_T     shift, and go to state 114
    FLOAT_T     shift, and go to state 115
    DOUBLE_T    shift, and go to state 116
    ED_END      shift, and go to state 138

    top_level_item  go to state 139
    xtcc_type       go to state 119
    func_defn       go to state 120
    decl            go to state 121
    func_decl       go to state 122


state 118

    5 top_level_item_list: top_level_item .

    $default  reduce using rule 5 (top_level_item_list)


state 119

   16 func_defn: xtcc_type . NAME '(' decl_comma_list ')' $@2 compound_stmt
   17 decl: xtcc_type . NAME ';'
   18     | xtcc_type . NAME '=' expression ';'
   19     | xtcc_type . NAME '[' INUMBER ']' ';'
   22 func_decl: xtcc_type . NAME '(' decl_comma_list ')' ';'

    NAME  shift, and go to state 140


state 120

    8 top_level_item: func_defn .

    $default  reduce using rule 8 (top_level_item)


state 121

    7 top_level_item: decl .

    $default  reduce using rule 7 (top_level_item)


state 122

   21 decl: func_decl .

    $default  reduce using rule 21 (decl)


state 123

   72 expression: NAME '[' expression ']' .

    $default  reduce using rule 72 (expression)


state 124

   73 expression: NAME '[' expression ',' . expression ']'

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 141


state 125

   74 expression: NAME '(' expr_list ')' .

    $default  reduce using rule 74 (expression)


state 126

   52 expr_list: expr_list ',' . expression

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 142


state 127

   90 ax_defn: AX NAME ';' COND_START expression ';' ttl_ax_stmt_list count_ax_stmt_list .
  103 count_ax_stmt_list: count_ax_stmt_list . count_ax_stmt

    TOT  shift, and go to state 45
    CNT  shift, and go to state 46
    BIT  shift, and go to state 47
    INC  shift, and go to state 48

    $default  reduce using rule 90 (ax_defn)

    count_ax_stmt  go to state 81
    bit_list       go to state 52


state 128

   80 range: INUMBER . '-' INUMBER
   81      | INUMBER .

    '-'  shift, and go to state 143

    $default  reduce using rule 81 (range)


state 129

   77 expression: expression IN '(' range_list . ')'
   79 range_list: range_list . ',' range

    ')'  shift, and go to state 144
    ','  shift, and go to state 145


state 130

   78 range_list: range .

    $default  reduce using rule 78 (range_list)


state 131

  104 count_ax_stmt: TOT ';' TEXT ';' .
  105              | TOT ';' TEXT ';' . COND_START expression ';'

    COND_START  shift, and go to state 146

    $default  reduce using rule 104 (count_ax_stmt)


state 132

  106 count_ax_stmt: CNT ';' TEXT ';' . COND_START expression ';'

    COND_START  shift, and go to state 147


state 133

   98 stub: TEXT . '=' INUMBER ';'

    '='  shift, and go to state 148


state 134

   97 stub_list: stub_list . stub
  109 bit_list: BIT NAME ';' stub_list . ';'

    ';'   shift, and go to state 149
    TEXT  shift, and go to state 133

    stub  go to state 150


state 135

   96 stub_list: stub .

    $default  reduce using rule 96 (stub_list)


state 136

  107 count_ax_stmt: INC ';' expression ';' . COND_START expression ';'

    COND_START  shift, and go to state 151


state 137

   20 decl: DEFINELIST NAME . '=' range_list ';'

    '='  shift, and go to state 152


state 138

    2 prog: DATA_STRUCT ';' REC_LEN '=' INUMBER ';' $@1 ED_START top_level_item_list ED_END .

    $default  reduce using rule 2 (prog)


state 139

    6 top_level_item_list: top_level_item_list top_level_item .

    $default  reduce using rule 6 (top_level_item_list)


state 140

   16 func_defn: xtcc_type NAME . '(' decl_comma_list ')' $@2 compound_stmt
   17 decl: xtcc_type NAME . ';'
   18     | xtcc_type NAME . '=' expression ';'
   19     | xtcc_type NAME . '[' INUMBER ']' ';'
   22 func_decl: xtcc_type NAME . '(' decl_comma_list ')' ';'

    ';'  shift, and go to state 153
    '['  shift, and go to state 154
    '('  shift, and go to state 155
    '='  shift, and go to state 156


state 141

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   73           | NAME '[' expression ',' expression . ']'
   77           | expression . IN '(' range_list ')'

    IN      shift, and go to state 62
    ']'     shift, and go to state 157
    '='     shift, and go to state 63
    LOGOR   shift, and go to state 64
    LOGAND  shift, and go to state 65
    NOEQ    shift, and go to state 66
    ISEQ    shift, and go to state 67
    '<'     shift, and go to state 68
    '>'     shift, and go to state 69
    GEQ     shift, and go to state 70
    LEQ     shift, and go to state 71
    '-'     shift, and go to state 72
    '+'     shift, and go to state 73
    '*'     shift, and go to state 74
    '/'     shift, and go to state 75
    '%'     shift, and go to state 76


state 142

   52 expr_list: expr_list ',' expression .
   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    IN      shift, and go to state 62
    '='     shift, and go to state 63
    LOGOR   shift, and go to state 64
    LOGAND  shift, and go to state 65
    NOEQ    shift, and go to state 66
    ISEQ    shift, and go to state 67
    '<'     shift, and go to state 68
    '>'     shift, and go to state 69
    GEQ     shift, and go to state 70
    LEQ     shift, and go to state 71
    '-'     shift, and go to state 72
    '+'     shift, and go to state 73
    '*'     shift, and go to state 74
    '/'     shift, and go to state 75
    '%'     shift, and go to state 76

    $default  reduce using rule 52 (expr_list)


state 143

   80 range: INUMBER '-' . INUMBER

    INUMBER  shift, and go to state 158


state 144

   77 expression: expression IN '(' range_list ')' .

    $default  reduce using rule 77 (expression)


state 145

   79 range_list: range_list ',' . range

    INUMBER  shift, and go to state 128

    range  go to state 159


state 146

  105 count_ax_stmt: TOT ';' TEXT ';' COND_START . expression ';'

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 160


state 147

  106 count_ax_stmt: CNT ';' TEXT ';' COND_START . expression ';'

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 161


state 148

   98 stub: TEXT '=' . INUMBER ';'

    INUMBER  shift, and go to state 162


state 149

  109 bit_list: BIT NAME ';' stub_list ';' .

    $default  reduce using rule 109 (bit_list)


state 150

   97 stub_list: stub_list stub .

    $default  reduce using rule 97 (stub_list)


state 151

  107 count_ax_stmt: INC ';' expression ';' COND_START . expression ';'

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 163


state 152

   20 decl: DEFINELIST NAME '=' . range_list ';'

    INUMBER  shift, and go to state 128

    range_list  go to state 164
    range       go to state 130


state 153

   17 decl: xtcc_type NAME ';' .

    $default  reduce using rule 17 (decl)


state 154

   19 decl: xtcc_type NAME '[' . INUMBER ']' ';'

    INUMBER  shift, and go to state 165


state 155

   16 func_defn: xtcc_type NAME '(' . decl_comma_list ')' $@2 compound_stmt
   22 func_decl: xtcc_type NAME '(' . decl_comma_list ')' ';'

    VOID_T    shift, and go to state 111
    INT8_T    shift, and go to state 112
    INT16_T   shift, and go to state 113
    INT32_T   shift, and go to state 114
    FLOAT_T   shift, and go to state 115
    DOUBLE_T  shift, and go to state 116

    $default  reduce using rule 28 (var_decl)

    xtcc_type        go to state 166
    decl_comma_list  go to state 167
    var_decl         go to state 168


state 156

   18 decl: xtcc_type NAME '=' . expression ';'

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 169


state 157

   73 expression: NAME '[' expression ',' expression ']' .

    $default  reduce using rule 73 (expression)


state 158

   80 range: INUMBER '-' INUMBER .

    $default  reduce using rule 80 (range)


state 159

   79 range_list: range_list ',' range .

    $default  reduce using rule 79 (range_list)


state 160

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'
  105 count_ax_stmt: TOT ';' TEXT ';' COND_START expression . ';'

    ';'     shift, and go to state 170
    IN      shift, and go to state 62
    '='     shift, and go to state 63
    LOGOR   shift, and go to state 64
    LOGAND  shift, and go to state 65
    NOEQ    shift, and go to state 66
    ISEQ    shift, and go to state 67
    '<'     shift, and go to state 68
    '>'     shift, and go to state 69
    GEQ     shift, and go to state 70
    LEQ     shift, and go to state 71
    '-'     shift, and go to state 72
    '+'     shift, and go to state 73
    '*'     shift, and go to state 74
    '/'     shift, and go to state 75
    '%'     shift, and go to state 76


state 161

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'
  106 count_ax_stmt: CNT ';' TEXT ';' COND_START expression . ';'

    ';'     shift, and go to state 171
    IN      shift, and go to state 62
    '='     shift, and go to state 63
    LOGOR   shift, and go to state 64
    LOGAND  shift, and go to state 65
    NOEQ    shift, and go to state 66
    ISEQ    shift, and go to state 67
    '<'     shift, and go to state 68
    '>'     shift, and go to state 69
    GEQ     shift, and go to state 70
    LEQ     shift, and go to state 71
    '-'     shift, and go to state 72
    '+'     shift, and go to state 73
    '*'     shift, and go to state 74
    '/'     shift, and go to state 75
    '%'     shift, and go to state 76


state 162

   98 stub: TEXT '=' INUMBER . ';'

    ';'  shift, and go to state 172


state 163

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'
  107 count_ax_stmt: INC ';' expression ';' COND_START expression . ';'

    ';'     shift, and go to state 173
    IN      shift, and go to state 62
    '='     shift, and go to state 63
    LOGOR   shift, and go to state 64
    LOGAND  shift, and go to state 65
    NOEQ    shift, and go to state 66
    ISEQ    shift, and go to state 67
    '<'     shift, and go to state 68
    '>'     shift, and go to state 69
    GEQ     shift, and go to state 70
    LEQ     shift, and go to state 71
    '-'     shift, and go to state 72
    '+'     shift, and go to state 73
    '*'     shift, and go to state 74
    '/'     shift, and go to state 75
    '%'     shift, and go to state 76


state 164

   20 decl: DEFINELIST NAME '=' range_list . ';'
   79 range_list: range_list . ',' range

    ';'  shift, and go to state 174
    ','  shift, and go to state 145


state 165

   19 decl: xtcc_type NAME '[' INUMBER . ']' ';'

    ']'  shift, and go to state 175


state 166

   25 var_decl: xtcc_type . NAME
   26         | xtcc_type . NAME '[' INUMBER ']'
   27         | xtcc_type . '&' NAME

    NAME  shift, and go to state 176
    '&'   shift, and go to state 177


state 167

   16 func_defn: xtcc_type NAME '(' decl_comma_list . ')' $@2 compound_stmt
   22 func_decl: xtcc_type NAME '(' decl_comma_list . ')' ';'
   24 decl_comma_list: decl_comma_list . ',' var_decl

    ')'  shift, and go to state 178
    ','  shift, and go to state 179


state 168

   23 decl_comma_list: var_decl .

    $default  reduce using rule 23 (decl_comma_list)


state 169

   18 decl: xtcc_type NAME '=' expression . ';'
   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    ';'     shift, and go to state 180
    IN      shift, and go to state 62
    '='     shift, and go to state 63
    LOGOR   shift, and go to state 64
    LOGAND  shift, and go to state 65
    NOEQ    shift, and go to state 66
    ISEQ    shift, and go to state 67
    '<'     shift, and go to state 68
    '>'     shift, and go to state 69
    GEQ     shift, and go to state 70
    LEQ     shift, and go to state 71
    '-'     shift, and go to state 72
    '+'     shift, and go to state 73
    '*'     shift, and go to state 74
    '/'     shift, and go to state 75
    '%'     shift, and go to state 76


state 170

  105 count_ax_stmt: TOT ';' TEXT ';' COND_START expression ';' .

    $default  reduce using rule 105 (count_ax_stmt)


state 171

  106 count_ax_stmt: CNT ';' TEXT ';' COND_START expression ';' .

    $default  reduce using rule 106 (count_ax_stmt)


state 172

   98 stub: TEXT '=' INUMBER ';' .

    $default  reduce using rule 98 (stub)


state 173

  107 count_ax_stmt: INC ';' expression ';' COND_START expression ';' .

    $default  reduce using rule 107 (count_ax_stmt)


state 174

   20 decl: DEFINELIST NAME '=' range_list ';' .

    $default  reduce using rule 20 (decl)


state 175

   19 decl: xtcc_type NAME '[' INUMBER ']' . ';'

    ';'  shift, and go to state 181


state 176

   25 var_decl: xtcc_type NAME .
   26         | xtcc_type NAME . '[' INUMBER ']'

    '['  shift, and go to state 182

    $default  reduce using rule 25 (var_decl)


state 177

   27 var_decl: xtcc_type '&' . NAME

    NAME  shift, and go to state 183


state 178

   16 func_defn: xtcc_type NAME '(' decl_comma_list ')' . $@2 compound_stmt
   22 func_decl: xtcc_type NAME '(' decl_comma_list ')' . ';'

    ';'  shift, and go to state 184

    $default  reduce using rule 15 ($@2)

    $@2  go to state 185


state 179

   24 decl_comma_list: decl_comma_list ',' . var_decl

    VOID_T    shift, and go to state 111
    INT8_T    shift, and go to state 112
    INT16_T   shift, and go to state 113
    INT32_T   shift, and go to state 114
    FLOAT_T   shift, and go to state 115
    DOUBLE_T  shift, and go to state 116

    $default  reduce using rule 28 (var_decl)

    xtcc_type  go to state 166
    var_decl   go to state 186


state 180

   18 decl: xtcc_type NAME '=' expression ';' .

    $default  reduce using rule 18 (decl)


state 181

   19 decl: xtcc_type NAME '[' INUMBER ']' ';' .

    $default  reduce using rule 19 (decl)


state 182

   26 var_decl: xtcc_type NAME '[' . INUMBER ']'

    INUMBER  shift, and go to state 187


state 183

   27 var_decl: xtcc_type '&' NAME .

    $default  reduce using rule 27 (var_decl)


state 184

   22 func_decl: xtcc_type NAME '(' decl_comma_list ')' ';' .

    $default  reduce using rule 22 (func_decl)


state 185

   16 func_defn: xtcc_type NAME '(' decl_comma_list ')' $@2 . compound_stmt

    '{'  shift, and go to state 188

    compound_stmt  go to state 189
    open_curly     go to state 190


state 186

   24 decl_comma_list: decl_comma_list ',' var_decl .

    $default  reduce using rule 24 (decl_comma_list)


state 187

   26 var_decl: xtcc_type NAME '[' INUMBER . ']'

    ']'  shift, and go to state 191


state 188

   50 open_curly: '{' .

    $default  reduce using rule 50 (open_curly)


state 189

   16 func_defn: xtcc_type NAME '(' decl_comma_list ')' $@2 compound_stmt .

    $default  reduce using rule 16 (func_defn)


state 190

   49 compound_stmt: open_curly . statement_list '}'

    error           shift, and go to state 192
    '{'             shift, and go to state 188
    FOR             shift, and go to state 193
    FLD             shift, and go to state 194
    TEXT            shift, and go to state 37
    NAME            shift, and go to state 38
    DEFINELIST      shift, and go to state 110
    FNUMBER         shift, and go to state 39
    INUMBER         shift, and go to state 40
    LISTA           shift, and go to state 195
    IF              shift, and go to state 196
    '('             shift, and go to state 41
    VOID_T          shift, and go to state 111
    INT8_T          shift, and go to state 112
    INT16_T         shift, and go to state 113
    INT32_T         shift, and go to state 114
    FLOAT_T         shift, and go to state 115
    DOUBLE_T        shift, and go to state 116
    ATTRIBUTE_LIST  shift, and go to state 197
    CONTINUE        shift, and go to state 198
    BREAK           shift, and go to state 199
    '-'             shift, and go to state 42
    NOT             shift, and go to state 43

    xtcc_type       go to state 200
    decl            go to state 201
    func_decl       go to state 122
    statement_list  go to state 202
    statement       go to state 203
    ListStatement   go to state 204
    if_stmt         go to state 205
    FieldStatement  go to state 206
    compound_stmt   go to state 207
    open_curly      go to state 190
    expression      go to state 208
    attributes      go to state 209


state 191

   26 var_decl: xtcc_type NAME '[' INUMBER ']' .

    $default  reduce using rule 26 (var_decl)


state 192

   42 statement: error . ';'

    ';'  shift, and go to state 210


state 193

   33 statement: FOR . '(' expression ';' expression ';' expression ')' $@3 statement

    '('  shift, and go to state 211


state 194

   48 FieldStatement: FLD . NAME '=' NAME '(' expression ',' expression ')' ':' INUMBER ';'

    NAME  shift, and go to state 212


state 195

   43 ListStatement: LISTA . NAME TEXT ';'
   44              | LISTA . NAME '[' expression ']' TEXT ';'
   45              | LISTA . NAME '[' expression ',' expression ']' TEXT ';'

    NAME  shift, and go to state 213


state 196

   46 if_stmt: IF . '(' expression ')' statement
   47        | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 214


state 197

   93 attributes: ATTRIBUTE_LIST . NAME '=' $@4 text_list ';'

    NAME  shift, and go to state 215


state 198

   40 statement: CONTINUE . ';'

    ';'  shift, and go to state 216


state 199

   39 statement: BREAK . ';'

    ';'  shift, and go to state 217


state 200

   17 decl: xtcc_type . NAME ';'
   18     | xtcc_type . NAME '=' expression ';'
   19     | xtcc_type . NAME '[' INUMBER ']' ';'
   22 func_decl: xtcc_type . NAME '(' decl_comma_list ')' ';'

    NAME  shift, and go to state 218


state 201

   37 statement: decl .

    $default  reduce using rule 37 (statement)


state 202

   30 statement_list: statement_list . statement
   49 compound_stmt: open_curly statement_list . '}'

    error       shift, and go to state 192
    '{'         shift, and go to state 188
    '}'         shift, and go to state 219
    FOR         shift, and go to state 193
    FLD         shift, and go to state 194
    TEXT        shift, and go to state 37
    NAME        shift, and go to state 38
    DEFINELIST  shift, and go to state 110
    FNUMBER     shift, and go to state 39
    INUMBER     shift, and go to state 40
    LISTA       shift, and go to state 195
    IF          shift, and go to state 196
    '('         shift, and go to state 41
    VOID_T      shift, and go to state 111
    INT8_T      shift, and go to state 112
    INT16_T     shift, and go to state 113
    INT32_T     shift, and go to state 114
    FLOAT_T     shift, and go to state 115
    DOUBLE_T    shift, and go to state 116
    CONTINUE    shift, and go to state 198
    BREAK       shift, and go to state 199
    '-'         shift, and go to state 42
    NOT         shift, and go to state 43

    xtcc_type       go to state 200
    decl            go to state 201
    func_decl       go to state 122
    statement       go to state 220
    ListStatement   go to state 204
    if_stmt         go to state 205
    FieldStatement  go to state 206
    compound_stmt   go to state 207
    open_curly      go to state 190
    expression      go to state 208


state 203

   29 statement_list: statement .

    $default  reduce using rule 29 (statement_list)


state 204

   38 statement: ListStatement .

    $default  reduce using rule 38 (statement)


state 205

   34 statement: if_stmt .

    $default  reduce using rule 34 (statement)


state 206

   41 statement: FieldStatement .

    $default  reduce using rule 41 (statement)


state 207

   36 statement: compound_stmt .

    $default  reduce using rule 36 (statement)


state 208

   35 statement: expression . ';'
   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    ';'     shift, and go to state 221
    IN      shift, and go to state 62
    '='     shift, and go to state 63
    LOGOR   shift, and go to state 64
    LOGAND  shift, and go to state 65
    NOEQ    shift, and go to state 66
    ISEQ    shift, and go to state 67
    '<'     shift, and go to state 68
    '>'     shift, and go to state 69
    GEQ     shift, and go to state 70
    LEQ     shift, and go to state 71
    '-'     shift, and go to state 72
    '+'     shift, and go to state 73
    '*'     shift, and go to state 74
    '/'     shift, and go to state 75
    '%'     shift, and go to state 76


state 209

   31 statement_list: attributes .

    $default  reduce using rule 31 (statement_list)


state 210

   42 statement: error ';' .

    $default  reduce using rule 42 (statement)


state 211

   33 statement: FOR '(' . expression ';' expression ';' expression ')' $@3 statement

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 222


state 212

   48 FieldStatement: FLD NAME . '=' NAME '(' expression ',' expression ')' ':' INUMBER ';'

    '='  shift, and go to state 223


state 213

   43 ListStatement: LISTA NAME . TEXT ';'
   44              | LISTA NAME . '[' expression ']' TEXT ';'
   45              | LISTA NAME . '[' expression ',' expression ']' TEXT ';'

    TEXT  shift, and go to state 224
    '['   shift, and go to state 225


state 214

   46 if_stmt: IF '(' . expression ')' statement
   47        | IF '(' . expression ')' statement ELSE statement

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 226


state 215

   93 attributes: ATTRIBUTE_LIST NAME . '=' $@4 text_list ';'

    '='  shift, and go to state 227


state 216

   40 statement: CONTINUE ';' .

    $default  reduce using rule 40 (statement)


state 217

   39 statement: BREAK ';' .

    $default  reduce using rule 39 (statement)


state 218

   17 decl: xtcc_type NAME . ';'
   18     | xtcc_type NAME . '=' expression ';'
   19     | xtcc_type NAME . '[' INUMBER ']' ';'
   22 func_decl: xtcc_type NAME . '(' decl_comma_list ')' ';'

    ';'  shift, and go to state 153
    '['  shift, and go to state 154
    '('  shift, and go to state 228
    '='  shift, and go to state 156


state 219

   49 compound_stmt: open_curly statement_list '}' .

    $default  reduce using rule 49 (compound_stmt)


state 220

   30 statement_list: statement_list statement .

    $default  reduce using rule 30 (statement_list)


state 221

   35 statement: expression ';' .

    $default  reduce using rule 35 (statement)


state 222

   33 statement: FOR '(' expression . ';' expression ';' expression ')' $@3 statement
   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    ';'     shift, and go to state 229
    IN      shift, and go to state 62
    '='     shift, and go to state 63
    LOGOR   shift, and go to state 64
    LOGAND  shift, and go to state 65
    NOEQ    shift, and go to state 66
    ISEQ    shift, and go to state 67
    '<'     shift, and go to state 68
    '>'     shift, and go to state 69
    GEQ     shift, and go to state 70
    LEQ     shift, and go to state 71
    '-'     shift, and go to state 72
    '+'     shift, and go to state 73
    '*'     shift, and go to state 74
    '/'     shift, and go to state 75
    '%'     shift, and go to state 76


state 223

   48 FieldStatement: FLD NAME '=' . NAME '(' expression ',' expression ')' ':' INUMBER ';'

    NAME  shift, and go to state 230


state 224

   43 ListStatement: LISTA NAME TEXT . ';'

    ';'  shift, and go to state 231


state 225

   44 ListStatement: LISTA NAME '[' . expression ']' TEXT ';'
   45              | LISTA NAME '[' . expression ',' expression ']' TEXT ';'

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 232


state 226

   46 if_stmt: IF '(' expression . ')' statement
   47        | IF '(' expression . ')' statement ELSE statement
   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    IN      shift, and go to state 62
    ')'     shift, and go to state 233
    '='     shift, and go to state 63
    LOGOR   shift, and go to state 64
    LOGAND  shift, and go to state 65
    NOEQ    shift, and go to state 66
    ISEQ    shift, and go to state 67
    '<'     shift, and go to state 68
    '>'     shift, and go to state 69
    GEQ     shift, and go to state 70
    LEQ     shift, and go to state 71
    '-'     shift, and go to state 72
    '+'     shift, and go to state 73
    '*'     shift, and go to state 74
    '/'     shift, and go to state 75
    '%'     shift, and go to state 76


state 227

   93 attributes: ATTRIBUTE_LIST NAME '=' . $@4 text_list ';'

    $default  reduce using rule 92 ($@4)

    $@4  go to state 234


state 228

   22 func_decl: xtcc_type NAME '(' . decl_comma_list ')' ';'

    VOID_T    shift, and go to state 111
    INT8_T    shift, and go to state 112
    INT16_T   shift, and go to state 113
    INT32_T   shift, and go to state 114
    FLOAT_T   shift, and go to state 115
    DOUBLE_T  shift, and go to state 116

    $default  reduce using rule 28 (var_decl)

    xtcc_type        go to state 166
    decl_comma_list  go to state 235
    var_decl         go to state 168


state 229

   33 statement: FOR '(' expression ';' . expression ';' expression ')' $@3 statement

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 236


state 230

   48 FieldStatement: FLD NAME '=' NAME . '(' expression ',' expression ')' ':' INUMBER ';'

    '('  shift, and go to state 237


state 231

   43 ListStatement: LISTA NAME TEXT ';' .

    $default  reduce using rule 43 (ListStatement)


state 232

   44 ListStatement: LISTA NAME '[' expression . ']' TEXT ';'
   45              | LISTA NAME '[' expression . ',' expression ']' TEXT ';'
   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    IN      shift, and go to state 62
    ']'     shift, and go to state 238
    '='     shift, and go to state 63
    ','     shift, and go to state 239
    LOGOR   shift, and go to state 64
    LOGAND  shift, and go to state 65
    NOEQ    shift, and go to state 66
    ISEQ    shift, and go to state 67
    '<'     shift, and go to state 68
    '>'     shift, and go to state 69
    GEQ     shift, and go to state 70
    LEQ     shift, and go to state 71
    '-'     shift, and go to state 72
    '+'     shift, and go to state 73
    '*'     shift, and go to state 74
    '/'     shift, and go to state 75
    '%'     shift, and go to state 76


state 233

   46 if_stmt: IF '(' expression ')' . statement
   47        | IF '(' expression ')' . statement ELSE statement

    error       shift, and go to state 192
    '{'         shift, and go to state 188
    FOR         shift, and go to state 193
    FLD         shift, and go to state 194
    TEXT        shift, and go to state 37
    NAME        shift, and go to state 38
    DEFINELIST  shift, and go to state 110
    FNUMBER     shift, and go to state 39
    INUMBER     shift, and go to state 40
    LISTA       shift, and go to state 195
    IF          shift, and go to state 196
    '('         shift, and go to state 41
    VOID_T      shift, and go to state 111
    INT8_T      shift, and go to state 112
    INT16_T     shift, and go to state 113
    INT32_T     shift, and go to state 114
    FLOAT_T     shift, and go to state 115
    DOUBLE_T    shift, and go to state 116
    CONTINUE    shift, and go to state 198
    BREAK       shift, and go to state 199
    '-'         shift, and go to state 42
    NOT         shift, and go to state 43

    xtcc_type       go to state 200
    decl            go to state 201
    func_decl       go to state 122
    statement       go to state 240
    ListStatement   go to state 204
    if_stmt         go to state 205
    FieldStatement  go to state 206
    compound_stmt   go to state 207
    open_curly      go to state 190
    expression      go to state 208


state 234

   93 attributes: ATTRIBUTE_LIST NAME '=' $@4 . text_list ';'

    TEXT  shift, and go to state 241

    text_list  go to state 242


state 235

   22 func_decl: xtcc_type NAME '(' decl_comma_list . ')' ';'
   24 decl_comma_list: decl_comma_list . ',' var_decl

    ')'  shift, and go to state 243
    ','  shift, and go to state 179


state 236

   33 statement: FOR '(' expression ';' expression . ';' expression ')' $@3 statement
   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    ';'     shift, and go to state 244
    IN      shift, and go to state 62
    '='     shift, and go to state 63
    LOGOR   shift, and go to state 64
    LOGAND  shift, and go to state 65
    NOEQ    shift, and go to state 66
    ISEQ    shift, and go to state 67
    '<'     shift, and go to state 68
    '>'     shift, and go to state 69
    GEQ     shift, and go to state 70
    LEQ     shift, and go to state 71
    '-'     shift, and go to state 72
    '+'     shift, and go to state 73
    '*'     shift, and go to state 74
    '/'     shift, and go to state 75
    '%'     shift, and go to state 76


state 237

   48 FieldStatement: FLD NAME '=' NAME '(' . expression ',' expression ')' ':' INUMBER ';'

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 245


state 238

   44 ListStatement: LISTA NAME '[' expression ']' . TEXT ';'

    TEXT  shift, and go to state 246


state 239

   45 ListStatement: LISTA NAME '[' expression ',' . expression ']' TEXT ';'

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 247


state 240

   46 if_stmt: IF '(' expression ')' statement .
   47        | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 248

    ELSE      [reduce using rule 46 (if_stmt)]
    $default  reduce using rule 46 (if_stmt)


state 241

   94 text_list: TEXT . ';'

    ';'  shift, and go to state 249


state 242

   93 attributes: ATTRIBUTE_LIST NAME '=' $@4 text_list . ';'
   95 text_list: text_list . TEXT ';'

    ';'   shift, and go to state 250
    TEXT  shift, and go to state 251


state 243

   22 func_decl: xtcc_type NAME '(' decl_comma_list ')' . ';'

    ';'  shift, and go to state 184


state 244

   33 statement: FOR '(' expression ';' expression ';' . expression ')' $@3 statement

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 252


state 245

   48 FieldStatement: FLD NAME '=' NAME '(' expression . ',' expression ')' ':' INUMBER ';'
   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    IN      shift, and go to state 62
    '='     shift, and go to state 63
    ','     shift, and go to state 253
    LOGOR   shift, and go to state 64
    LOGAND  shift, and go to state 65
    NOEQ    shift, and go to state 66
    ISEQ    shift, and go to state 67
    '<'     shift, and go to state 68
    '>'     shift, and go to state 69
    GEQ     shift, and go to state 70
    LEQ     shift, and go to state 71
    '-'     shift, and go to state 72
    '+'     shift, and go to state 73
    '*'     shift, and go to state 74
    '/'     shift, and go to state 75
    '%'     shift, and go to state 76


state 246

   44 ListStatement: LISTA NAME '[' expression ']' TEXT . ';'

    ';'  shift, and go to state 254


state 247

   45 ListStatement: LISTA NAME '[' expression ',' expression . ']' TEXT ';'
   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    IN      shift, and go to state 62
    ']'     shift, and go to state 255
    '='     shift, and go to state 63
    LOGOR   shift, and go to state 64
    LOGAND  shift, and go to state 65
    NOEQ    shift, and go to state 66
    ISEQ    shift, and go to state 67
    '<'     shift, and go to state 68
    '>'     shift, and go to state 69
    GEQ     shift, and go to state 70
    LEQ     shift, and go to state 71
    '-'     shift, and go to state 72
    '+'     shift, and go to state 73
    '*'     shift, and go to state 74
    '/'     shift, and go to state 75
    '%'     shift, and go to state 76


state 248

   47 if_stmt: IF '(' expression ')' statement ELSE . statement

    error       shift, and go to state 192
    '{'         shift, and go to state 188
    FOR         shift, and go to state 193
    FLD         shift, and go to state 194
    TEXT        shift, and go to state 37
    NAME        shift, and go to state 38
    DEFINELIST  shift, and go to state 110
    FNUMBER     shift, and go to state 39
    INUMBER     shift, and go to state 40
    LISTA       shift, and go to state 195
    IF          shift, and go to state 196
    '('         shift, and go to state 41
    VOID_T      shift, and go to state 111
    INT8_T      shift, and go to state 112
    INT16_T     shift, and go to state 113
    INT32_T     shift, and go to state 114
    FLOAT_T     shift, and go to state 115
    DOUBLE_T    shift, and go to state 116
    CONTINUE    shift, and go to state 198
    BREAK       shift, and go to state 199
    '-'         shift, and go to state 42
    NOT         shift, and go to state 43

    xtcc_type       go to state 200
    decl            go to state 201
    func_decl       go to state 122
    statement       go to state 256
    ListStatement   go to state 204
    if_stmt         go to state 205
    FieldStatement  go to state 206
    compound_stmt   go to state 207
    open_curly      go to state 190
    expression      go to state 208


state 249

   94 text_list: TEXT ';' .

    $default  reduce using rule 94 (text_list)


state 250

   93 attributes: ATTRIBUTE_LIST NAME '=' $@4 text_list ';' .

    $default  reduce using rule 93 (attributes)


state 251

   95 text_list: text_list TEXT . ';'

    ';'  shift, and go to state 257


state 252

   33 statement: FOR '(' expression ';' expression ';' expression . ')' $@3 statement
   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    IN      shift, and go to state 62
    ')'     shift, and go to state 258
    '='     shift, and go to state 63
    LOGOR   shift, and go to state 64
    LOGAND  shift, and go to state 65
    NOEQ    shift, and go to state 66
    ISEQ    shift, and go to state 67
    '<'     shift, and go to state 68
    '>'     shift, and go to state 69
    GEQ     shift, and go to state 70
    LEQ     shift, and go to state 71
    '-'     shift, and go to state 72
    '+'     shift, and go to state 73
    '*'     shift, and go to state 74
    '/'     shift, and go to state 75
    '%'     shift, and go to state 76


state 253

   48 FieldStatement: FLD NAME '=' NAME '(' expression ',' . expression ')' ':' INUMBER ';'

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 259


state 254

   44 ListStatement: LISTA NAME '[' expression ']' TEXT ';' .

    $default  reduce using rule 44 (ListStatement)


state 255

   45 ListStatement: LISTA NAME '[' expression ',' expression ']' . TEXT ';'

    TEXT  shift, and go to state 260


state 256

   47 if_stmt: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 47 (if_stmt)


state 257

   95 text_list: text_list TEXT ';' .

    $default  reduce using rule 95 (text_list)


state 258

   33 statement: FOR '(' expression ';' expression ';' expression ')' . $@3 statement

    $default  reduce using rule 32 ($@3)

    $@3  go to state 261


state 259

   48 FieldStatement: FLD NAME '=' NAME '(' expression ',' expression . ')' ':' INUMBER ';'
   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    IN      shift, and go to state 62
    ')'     shift, and go to state 262
    '='     shift, and go to state 63
    LOGOR   shift, and go to state 64
    LOGAND  shift, and go to state 65
    NOEQ    shift, and go to state 66
    ISEQ    shift, and go to state 67
    '<'     shift, and go to state 68
    '>'     shift, and go to state 69
    GEQ     shift, and go to state 70
    LEQ     shift, and go to state 71
    '-'     shift, and go to state 72
    '+'     shift, and go to state 73
    '*'     shift, and go to state 74
    '/'     shift, and go to state 75
    '%'     shift, and go to state 76


state 260

   45 ListStatement: LISTA NAME '[' expression ',' expression ']' TEXT . ';'

    ';'  shift, and go to state 263


state 261

   33 statement: FOR '(' expression ';' expression ';' expression ')' $@3 . statement

    error       shift, and go to state 192
    '{'         shift, and go to state 188
    FOR         shift, and go to state 193
    FLD         shift, and go to state 194
    TEXT        shift, and go to state 37
    NAME        shift, and go to state 38
    DEFINELIST  shift, and go to state 110
    FNUMBER     shift, and go to state 39
    INUMBER     shift, and go to state 40
    LISTA       shift, and go to state 195
    IF          shift, and go to state 196
    '('         shift, and go to state 41
    VOID_T      shift, and go to state 111
    INT8_T      shift, and go to state 112
    INT16_T     shift, and go to state 113
    INT32_T     shift, and go to state 114
    FLOAT_T     shift, and go to state 115
    DOUBLE_T    shift, and go to state 116
    CONTINUE    shift, and go to state 198
    BREAK       shift, and go to state 199
    '-'         shift, and go to state 42
    NOT         shift, and go to state 43

    xtcc_type       go to state 200
    decl            go to state 201
    func_decl       go to state 122
    statement       go to state 264
    ListStatement   go to state 204
    if_stmt         go to state 205
    FieldStatement  go to state 206
    compound_stmt   go to state 207
    open_curly      go to state 190
    expression      go to state 208


state 262

   48 FieldStatement: FLD NAME '=' NAME '(' expression ',' expression ')' . ':' INUMBER ';'

    ':'  shift, and go to state 265


state 263

   45 ListStatement: LISTA NAME '[' expression ',' expression ']' TEXT ';' .

    $default  reduce using rule 45 (ListStatement)


state 264

   33 statement: FOR '(' expression ';' expression ';' expression ')' $@3 statement .

    $default  reduce using rule 33 (statement)


state 265

   48 FieldStatement: FLD NAME '=' NAME '(' expression ',' expression ')' ':' . INUMBER ';'

    INUMBER  shift, and go to state 266


state 266

   48 FieldStatement: FLD NAME '=' NAME '(' expression ',' expression ')' ':' INUMBER . ';'

    ';'  shift, and go to state 267


state 267

   48 FieldStatement: FLD NAME '=' NAME '(' expression ',' expression ')' ':' INUMBER ';' .

    $default  reduce using rule 48 (FieldStatement)
