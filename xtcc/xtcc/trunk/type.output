Terminals which are not used

   CONVERT
   CODELIST


State 194 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog $end

    1 @1: /* empty */

    2 prog: DATA_STRUCT ';' REC_LEN '=' INUMBER ';' @1 ED_START top_level_item_list ED_END
    3     | AXSTART '{' ax_list '}'
    4     | TABSTART '{' tab_list '}'

    5 top_level_item_list: top_level_item
    6                    | top_level_item_list top_level_item

    7 top_level_item: decl
    8               | func_defn

    9 xtcc_type: VOID_T
   10          | INT8_T
   11          | INT16_T
   12          | INT32_T
   13          | FLOAT_T
   14          | DOUBLE_T

   15 @2: /* empty */

   16 func_defn: xtcc_type NAME '(' decl_comma_list ')' @2 compound_stmt

   17 decl: xtcc_type NAME ';'
   18     | xtcc_type NAME '[' INUMBER ']' ';'
   19     | func_decl

   20 func_decl: xtcc_type NAME '(' decl_comma_list ')' ';'

   21 decl_comma_list: var_decl
   22                | decl_comma_list ',' var_decl

   23 var_decl: xtcc_type NAME
   24         | xtcc_type NAME '[' INUMBER ']'
   25         | xtcc_type '&' NAME
   26         | /* empty */

   27 statement_list: statement
   28               | statement_list statement

   29 @3: /* empty */

   30 statement: FOR '(' expression ';' expression ';' expression ')' @3 statement
   31          | if_stmt
   32          | expression ';'
   33          | compound_stmt
   34          | decl
   35          | list_stmt
   36          | BREAK ';'
   37          | CONTINUE ';'
   38          | fld_stmt
   39          | error ';'

   40 list_stmt: LISTA NAME TEXT ';'
   41          | LISTA NAME '[' expression ']' TEXT ';'
   42          | LISTA NAME '[' expression ',' expression ']' TEXT ';'

   43 if_stmt: IF '(' expression ')' statement
   44        | IF '(' expression ')' statement ELSE statement

   45 fld_stmt: FLD NAME '=' NAME '(' expression ',' expression ')' ':' INUMBER ';'

   46 compound_stmt: open_curly statement_list '}'

   47 open_curly: '{'

   48 expr_list: expression
   49          | expr_list ',' expression

   50 expression: expression '+' expression
   51           | expression '-' expression
   52           | expression '*' expression
   53           | expression '/' expression
   54           | expression '%' expression
   55           | '-' expression
   56           | expression '<' expression
   57           | expression '>' expression
   58           | expression LEQ expression
   59           | expression GEQ expression
   60           | expression ISEQ expression
   61           | expression NOEQ expression
   62           | expression LOGOR expression
   63           | expression LOGAND expression
   64           | expression '=' expression
   65           | NOT expression
   66           | INUMBER
   67           | FNUMBER
   68           | NAME
   69           | NAME '[' expression ']'
   70           | NAME '[' expression ',' expression ']'
   71           | NAME '(' expr_list ')'
   72           | TEXT
   73           | '(' expression ')'

   74 tab_list: tab_defn
   75         | tab_list tab_defn

   76 tab_defn: TAB NAME NAME ';'
   77         | TAB NAME NAME ';' COND_START expression ';'
   78         | error ';'

   79 ax_list: ax_defn
   80        | ax_list ax_defn

   81 ax_defn: AX NAME ';' ax_stmt_list
   82        | AX NAME ';' COND_START expression ';' ax_stmt_list
   83        | error ';'

   84 ax_stmt_list: ax_stmt
   85             | ax_stmt_list ax_stmt

   86 ax_stmt: TOT ';' TEXT ';'
   87        | TOT ';' TEXT ';' COND_START expression ';'
   88        | CNT ';' TEXT ';' COND_START expression ';'
   89        | TTL ';' TEXT ';'


Terminals, with rules where they appear

$end (0) 0
'%' (37) 54
'&' (38) 25
'(' (40) 16 20 30 43 44 45 71 73
')' (41) 16 20 30 43 44 45 71 73
'*' (42) 52
'+' (43) 50
',' (44) 22 42 45 49 70
'-' (45) 51 55
'/' (47) 53
':' (58) 45
';' (59) 2 17 18 20 30 32 36 37 39 40 41 42 45 76 77 78 81 82 83 86
    87 88 89
'<' (60) 56
'=' (61) 2 45 64
'>' (62) 57
'[' (91) 18 24 41 42 69 70
']' (93) 18 24 41 42 69 70
'{' (123) 3 4 47
'}' (125) 3 4 46
error (256) 39 78 83
CONVERT (258)
TOT (259) 86 87
AX (260) 81 82
CNT (261) 88
TTL (262) 89
FOR (263) 30
FLD (264) 45
TEXT (265) 40 41 42 72 86 87 88 89
NAME (266) 16 17 18 20 23 24 25 40 41 42 45 68 69 70 71 76 77 81 82
FNUMBER (267) 67
INUMBER (268) 2 18 24 45 66
CODELIST (269)
LISTA (270) 40 41 42
IF (271) 43 44
ELSE (272) 44
VOID_T (273) 9
INT8_T (274) 10
INT16_T (275) 11
INT32_T (276) 12
FLOAT_T (277) 13
DOUBLE_T (278) 14
AXSTART (279) 3
TABSTART (280) 4
ED_START (281) 2
DATA_STRUCT (282) 2
REC_LEN (283) 2
ED_END (284) 2
TAB (285) 76 77
COND_START (286) 77 82 87 88
CONTINUE (287) 37
BREAK (288) 36
LOGOR (289) 62
LOGAND (290) 63
NOEQ (291) 61
ISEQ (292) 60
GEQ (293) 59
LEQ (294) 58
NOT (295) 65
UMINUS (296)
FUNC_CALL (297)


Nonterminals, with rules where they appear

$accept (61)
    on left: 0
prog (62)
    on left: 2 3 4, on right: 0
@1 (63)
    on left: 1, on right: 2
top_level_item_list (64)
    on left: 5 6, on right: 2 6
top_level_item (65)
    on left: 7 8, on right: 5 6
xtcc_type (66)
    on left: 9 10 11 12 13 14, on right: 16 17 18 20 23 24 25
func_defn (67)
    on left: 16, on right: 8
@2 (68)
    on left: 15, on right: 16
decl (69)
    on left: 17 18 19, on right: 7 34
func_decl (70)
    on left: 20, on right: 19
decl_comma_list (71)
    on left: 21 22, on right: 16 20 22
var_decl (72)
    on left: 23 24 25 26, on right: 21 22
statement_list (73)
    on left: 27 28, on right: 28 46
statement (74)
    on left: 30 31 32 33 34 35 36 37 38 39, on right: 27 28 30 43 44
@3 (75)
    on left: 29, on right: 30
list_stmt (76)
    on left: 40 41 42, on right: 35
if_stmt (77)
    on left: 43 44, on right: 31
fld_stmt (78)
    on left: 45, on right: 38
compound_stmt (79)
    on left: 46, on right: 16 33
open_curly (80)
    on left: 47, on right: 46
expr_list (81)
    on left: 48 49, on right: 49 71
expression (82)
    on left: 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67
    68 69 70 71 72 73, on right: 30 32 41 42 43 44 45 48 49 50 51 52
    53 54 55 56 57 58 59 60 61 62 63 64 65 69 70 73 77 82 87 88
tab_list (83)
    on left: 74 75, on right: 4 75
tab_defn (84)
    on left: 76 77 78, on right: 74 75
ax_list (85)
    on left: 79 80, on right: 3 80
ax_defn (86)
    on left: 81 82 83, on right: 79 80
ax_stmt_list (87)
    on left: 84 85, on right: 81 82 85
ax_stmt (88)
    on left: 86 87 88 89, on right: 84 85


state 0

    0 $accept: . prog $end

    AXSTART      shift, and go to state 1
    TABSTART     shift, and go to state 2
    DATA_STRUCT  shift, and go to state 3

    prog  go to state 4


state 1

    3 prog: AXSTART . '{' ax_list '}'

    '{'  shift, and go to state 5


state 2

    4 prog: TABSTART . '{' tab_list '}'

    '{'  shift, and go to state 6


state 3

    2 prog: DATA_STRUCT . ';' REC_LEN '=' INUMBER ';' @1 ED_START top_level_item_list ED_END

    ';'  shift, and go to state 7


state 4

    0 $accept: prog . $end

    $end  shift, and go to state 8


state 5

    3 prog: AXSTART '{' . ax_list '}'

    error  shift, and go to state 9
    AX     shift, and go to state 10

    ax_list  go to state 11
    ax_defn  go to state 12


state 6

    4 prog: TABSTART '{' . tab_list '}'

    error  shift, and go to state 13
    TAB    shift, and go to state 14

    tab_list  go to state 15
    tab_defn  go to state 16


state 7

    2 prog: DATA_STRUCT ';' . REC_LEN '=' INUMBER ';' @1 ED_START top_level_item_list ED_END

    REC_LEN  shift, and go to state 17


state 8

    0 $accept: prog $end .

    $default  accept


state 9

   83 ax_defn: error . ';'

    ';'  shift, and go to state 18


state 10

   81 ax_defn: AX . NAME ';' ax_stmt_list
   82        | AX . NAME ';' COND_START expression ';' ax_stmt_list

    NAME  shift, and go to state 19


state 11

    3 prog: AXSTART '{' ax_list . '}'
   80 ax_list: ax_list . ax_defn

    error  shift, and go to state 9
    AX     shift, and go to state 10
    '}'    shift, and go to state 20

    ax_defn  go to state 21


state 12

   79 ax_list: ax_defn .

    $default  reduce using rule 79 (ax_list)


state 13

   78 tab_defn: error . ';'

    ';'  shift, and go to state 22


state 14

   76 tab_defn: TAB . NAME NAME ';'
   77         | TAB . NAME NAME ';' COND_START expression ';'

    NAME  shift, and go to state 23


state 15

    4 prog: TABSTART '{' tab_list . '}'
   75 tab_list: tab_list . tab_defn

    error  shift, and go to state 13
    '}'    shift, and go to state 24
    TAB    shift, and go to state 14

    tab_defn  go to state 25


state 16

   74 tab_list: tab_defn .

    $default  reduce using rule 74 (tab_list)


state 17

    2 prog: DATA_STRUCT ';' REC_LEN . '=' INUMBER ';' @1 ED_START top_level_item_list ED_END

    '='  shift, and go to state 26


state 18

   83 ax_defn: error ';' .

    $default  reduce using rule 83 (ax_defn)


state 19

   81 ax_defn: AX NAME . ';' ax_stmt_list
   82        | AX NAME . ';' COND_START expression ';' ax_stmt_list

    ';'  shift, and go to state 27


state 20

    3 prog: AXSTART '{' ax_list '}' .

    $default  reduce using rule 3 (prog)


state 21

   80 ax_list: ax_list ax_defn .

    $default  reduce using rule 80 (ax_list)


state 22

   78 tab_defn: error ';' .

    $default  reduce using rule 78 (tab_defn)


state 23

   76 tab_defn: TAB NAME . NAME ';'
   77         | TAB NAME . NAME ';' COND_START expression ';'

    NAME  shift, and go to state 28


state 24

    4 prog: TABSTART '{' tab_list '}' .

    $default  reduce using rule 4 (prog)


state 25

   75 tab_list: tab_list tab_defn .

    $default  reduce using rule 75 (tab_list)


state 26

    2 prog: DATA_STRUCT ';' REC_LEN '=' . INUMBER ';' @1 ED_START top_level_item_list ED_END

    INUMBER  shift, and go to state 29


state 27

   81 ax_defn: AX NAME ';' . ax_stmt_list
   82        | AX NAME ';' . COND_START expression ';' ax_stmt_list

    TOT         shift, and go to state 30
    CNT         shift, and go to state 31
    TTL         shift, and go to state 32
    COND_START  shift, and go to state 33

    ax_stmt_list  go to state 34
    ax_stmt       go to state 35


state 28

   76 tab_defn: TAB NAME NAME . ';'
   77         | TAB NAME NAME . ';' COND_START expression ';'

    ';'  shift, and go to state 36


state 29

    2 prog: DATA_STRUCT ';' REC_LEN '=' INUMBER . ';' @1 ED_START top_level_item_list ED_END

    ';'  shift, and go to state 37


state 30

   86 ax_stmt: TOT . ';' TEXT ';'
   87        | TOT . ';' TEXT ';' COND_START expression ';'

    ';'  shift, and go to state 38


state 31

   88 ax_stmt: CNT . ';' TEXT ';' COND_START expression ';'

    ';'  shift, and go to state 39


state 32

   89 ax_stmt: TTL . ';' TEXT ';'

    ';'  shift, and go to state 40


state 33

   82 ax_defn: AX NAME ';' COND_START . expression ';' ax_stmt_list

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 48


state 34

   81 ax_defn: AX NAME ';' ax_stmt_list .
   85 ax_stmt_list: ax_stmt_list . ax_stmt

    TOT  shift, and go to state 30
    CNT  shift, and go to state 31
    TTL  shift, and go to state 32

    $default  reduce using rule 81 (ax_defn)

    ax_stmt  go to state 49


state 35

   84 ax_stmt_list: ax_stmt .

    $default  reduce using rule 84 (ax_stmt_list)


state 36

   76 tab_defn: TAB NAME NAME ';' .
   77         | TAB NAME NAME ';' . COND_START expression ';'

    COND_START  shift, and go to state 50

    $default  reduce using rule 76 (tab_defn)


state 37

    2 prog: DATA_STRUCT ';' REC_LEN '=' INUMBER ';' . @1 ED_START top_level_item_list ED_END

    $default  reduce using rule 1 (@1)

    @1  go to state 51


state 38

   86 ax_stmt: TOT ';' . TEXT ';'
   87        | TOT ';' . TEXT ';' COND_START expression ';'

    TEXT  shift, and go to state 52


state 39

   88 ax_stmt: CNT ';' . TEXT ';' COND_START expression ';'

    TEXT  shift, and go to state 53


state 40

   89 ax_stmt: TTL ';' . TEXT ';'

    TEXT  shift, and go to state 54


state 41

   72 expression: TEXT .

    $default  reduce using rule 72 (expression)


state 42

   68 expression: NAME .
   69           | NAME . '[' expression ']'
   70           | NAME . '[' expression ',' expression ']'
   71           | NAME . '(' expr_list ')'

    '['  shift, and go to state 55
    '('  shift, and go to state 56

    $default  reduce using rule 68 (expression)


state 43

   67 expression: FNUMBER .

    $default  reduce using rule 67 (expression)


state 44

   66 expression: INUMBER .

    $default  reduce using rule 66 (expression)


state 45

   73 expression: '(' . expression ')'

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 57


state 46

   55 expression: '-' . expression

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 58


state 47

   65 expression: NOT . expression

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 59


state 48

   50 expression: expression . '+' expression
   51           | expression . '-' expression
   52           | expression . '*' expression
   53           | expression . '/' expression
   54           | expression . '%' expression
   56           | expression . '<' expression
   57           | expression . '>' expression
   58           | expression . LEQ expression
   59           | expression . GEQ expression
   60           | expression . ISEQ expression
   61           | expression . NOEQ expression
   62           | expression . LOGOR expression
   63           | expression . LOGAND expression
   64           | expression . '=' expression
   82 ax_defn: AX NAME ';' COND_START expression . ';' ax_stmt_list

    ';'     shift, and go to state 60
    '='     shift, and go to state 61
    LOGOR   shift, and go to state 62
    LOGAND  shift, and go to state 63
    NOEQ    shift, and go to state 64
    ISEQ    shift, and go to state 65
    '<'     shift, and go to state 66
    '>'     shift, and go to state 67
    GEQ     shift, and go to state 68
    LEQ     shift, and go to state 69
    '-'     shift, and go to state 70
    '+'     shift, and go to state 71
    '*'     shift, and go to state 72
    '/'     shift, and go to state 73
    '%'     shift, and go to state 74


state 49

   85 ax_stmt_list: ax_stmt_list ax_stmt .

    $default  reduce using rule 85 (ax_stmt_list)


state 50

   77 tab_defn: TAB NAME NAME ';' COND_START . expression ';'

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 75


state 51

    2 prog: DATA_STRUCT ';' REC_LEN '=' INUMBER ';' @1 . ED_START top_level_item_list ED_END

    ED_START  shift, and go to state 76


state 52

   86 ax_stmt: TOT ';' TEXT . ';'
   87        | TOT ';' TEXT . ';' COND_START expression ';'

    ';'  shift, and go to state 77


state 53

   88 ax_stmt: CNT ';' TEXT . ';' COND_START expression ';'

    ';'  shift, and go to state 78


state 54

   89 ax_stmt: TTL ';' TEXT . ';'

    ';'  shift, and go to state 79


state 55

   69 expression: NAME '[' . expression ']'
   70           | NAME '[' . expression ',' expression ']'

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 80


state 56

   71 expression: NAME '(' . expr_list ')'

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expr_list   go to state 81
    expression  go to state 82


state 57

   50 expression: expression . '+' expression
   51           | expression . '-' expression
   52           | expression . '*' expression
   53           | expression . '/' expression
   54           | expression . '%' expression
   56           | expression . '<' expression
   57           | expression . '>' expression
   58           | expression . LEQ expression
   59           | expression . GEQ expression
   60           | expression . ISEQ expression
   61           | expression . NOEQ expression
   62           | expression . LOGOR expression
   63           | expression . LOGAND expression
   64           | expression . '=' expression
   73           | '(' expression . ')'

    ')'     shift, and go to state 83
    '='     shift, and go to state 61
    LOGOR   shift, and go to state 62
    LOGAND  shift, and go to state 63
    NOEQ    shift, and go to state 64
    ISEQ    shift, and go to state 65
    '<'     shift, and go to state 66
    '>'     shift, and go to state 67
    GEQ     shift, and go to state 68
    LEQ     shift, and go to state 69
    '-'     shift, and go to state 70
    '+'     shift, and go to state 71
    '*'     shift, and go to state 72
    '/'     shift, and go to state 73
    '%'     shift, and go to state 74


state 58

   50 expression: expression . '+' expression
   51           | expression . '-' expression
   52           | expression . '*' expression
   53           | expression . '/' expression
   54           | expression . '%' expression
   55           | '-' expression .
   56           | expression . '<' expression
   57           | expression . '>' expression
   58           | expression . LEQ expression
   59           | expression . GEQ expression
   60           | expression . ISEQ expression
   61           | expression . NOEQ expression
   62           | expression . LOGOR expression
   63           | expression . LOGAND expression
   64           | expression . '=' expression

    $default  reduce using rule 55 (expression)


state 59

   50 expression: expression . '+' expression
   51           | expression . '-' expression
   52           | expression . '*' expression
   53           | expression . '/' expression
   54           | expression . '%' expression
   56           | expression . '<' expression
   57           | expression . '>' expression
   58           | expression . LEQ expression
   59           | expression . GEQ expression
   60           | expression . ISEQ expression
   61           | expression . NOEQ expression
   62           | expression . LOGOR expression
   63           | expression . LOGAND expression
   64           | expression . '=' expression
   65           | NOT expression .

    $default  reduce using rule 65 (expression)


state 60

   82 ax_defn: AX NAME ';' COND_START expression ';' . ax_stmt_list

    TOT  shift, and go to state 30
    CNT  shift, and go to state 31
    TTL  shift, and go to state 32

    ax_stmt_list  go to state 84
    ax_stmt       go to state 35


state 61

   64 expression: expression '=' . expression

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 85


state 62

   62 expression: expression LOGOR . expression

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 86


state 63

   63 expression: expression LOGAND . expression

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 87


state 64

   61 expression: expression NOEQ . expression

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 88


state 65

   60 expression: expression ISEQ . expression

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 89


state 66

   56 expression: expression '<' . expression

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 90


state 67

   57 expression: expression '>' . expression

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 91


state 68

   59 expression: expression GEQ . expression

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 92


state 69

   58 expression: expression LEQ . expression

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 93


state 70

   51 expression: expression '-' . expression

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 94


state 71

   50 expression: expression '+' . expression

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 95


state 72

   52 expression: expression '*' . expression

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 96


state 73

   53 expression: expression '/' . expression

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 97


state 74

   54 expression: expression '%' . expression

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 98


state 75

   50 expression: expression . '+' expression
   51           | expression . '-' expression
   52           | expression . '*' expression
   53           | expression . '/' expression
   54           | expression . '%' expression
   56           | expression . '<' expression
   57           | expression . '>' expression
   58           | expression . LEQ expression
   59           | expression . GEQ expression
   60           | expression . ISEQ expression
   61           | expression . NOEQ expression
   62           | expression . LOGOR expression
   63           | expression . LOGAND expression
   64           | expression . '=' expression
   77 tab_defn: TAB NAME NAME ';' COND_START expression . ';'

    ';'     shift, and go to state 99
    '='     shift, and go to state 61
    LOGOR   shift, and go to state 62
    LOGAND  shift, and go to state 63
    NOEQ    shift, and go to state 64
    ISEQ    shift, and go to state 65
    '<'     shift, and go to state 66
    '>'     shift, and go to state 67
    GEQ     shift, and go to state 68
    LEQ     shift, and go to state 69
    '-'     shift, and go to state 70
    '+'     shift, and go to state 71
    '*'     shift, and go to state 72
    '/'     shift, and go to state 73
    '%'     shift, and go to state 74


state 76

    2 prog: DATA_STRUCT ';' REC_LEN '=' INUMBER ';' @1 ED_START . top_level_item_list ED_END

    VOID_T    shift, and go to state 100
    INT8_T    shift, and go to state 101
    INT16_T   shift, and go to state 102
    INT32_T   shift, and go to state 103
    FLOAT_T   shift, and go to state 104
    DOUBLE_T  shift, and go to state 105

    top_level_item_list  go to state 106
    top_level_item       go to state 107
    xtcc_type            go to state 108
    func_defn            go to state 109
    decl                 go to state 110
    func_decl            go to state 111


state 77

   86 ax_stmt: TOT ';' TEXT ';' .
   87        | TOT ';' TEXT ';' . COND_START expression ';'

    COND_START  shift, and go to state 112

    $default  reduce using rule 86 (ax_stmt)


state 78

   88 ax_stmt: CNT ';' TEXT ';' . COND_START expression ';'

    COND_START  shift, and go to state 113


state 79

   89 ax_stmt: TTL ';' TEXT ';' .

    $default  reduce using rule 89 (ax_stmt)


state 80

   50 expression: expression . '+' expression
   51           | expression . '-' expression
   52           | expression . '*' expression
   53           | expression . '/' expression
   54           | expression . '%' expression
   56           | expression . '<' expression
   57           | expression . '>' expression
   58           | expression . LEQ expression
   59           | expression . GEQ expression
   60           | expression . ISEQ expression
   61           | expression . NOEQ expression
   62           | expression . LOGOR expression
   63           | expression . LOGAND expression
   64           | expression . '=' expression
   69           | NAME '[' expression . ']'
   70           | NAME '[' expression . ',' expression ']'

    ']'     shift, and go to state 114
    '='     shift, and go to state 61
    ','     shift, and go to state 115
    LOGOR   shift, and go to state 62
    LOGAND  shift, and go to state 63
    NOEQ    shift, and go to state 64
    ISEQ    shift, and go to state 65
    '<'     shift, and go to state 66
    '>'     shift, and go to state 67
    GEQ     shift, and go to state 68
    LEQ     shift, and go to state 69
    '-'     shift, and go to state 70
    '+'     shift, and go to state 71
    '*'     shift, and go to state 72
    '/'     shift, and go to state 73
    '%'     shift, and go to state 74


state 81

   49 expr_list: expr_list . ',' expression
   71 expression: NAME '(' expr_list . ')'

    ')'  shift, and go to state 116
    ','  shift, and go to state 117


state 82

   48 expr_list: expression .
   50 expression: expression . '+' expression
   51           | expression . '-' expression
   52           | expression . '*' expression
   53           | expression . '/' expression
   54           | expression . '%' expression
   56           | expression . '<' expression
   57           | expression . '>' expression
   58           | expression . LEQ expression
   59           | expression . GEQ expression
   60           | expression . ISEQ expression
   61           | expression . NOEQ expression
   62           | expression . LOGOR expression
   63           | expression . LOGAND expression
   64           | expression . '=' expression

    '='     shift, and go to state 61
    LOGOR   shift, and go to state 62
    LOGAND  shift, and go to state 63
    NOEQ    shift, and go to state 64
    ISEQ    shift, and go to state 65
    '<'     shift, and go to state 66
    '>'     shift, and go to state 67
    GEQ     shift, and go to state 68
    LEQ     shift, and go to state 69
    '-'     shift, and go to state 70
    '+'     shift, and go to state 71
    '*'     shift, and go to state 72
    '/'     shift, and go to state 73
    '%'     shift, and go to state 74

    $default  reduce using rule 48 (expr_list)


state 83

   73 expression: '(' expression ')' .

    $default  reduce using rule 73 (expression)


state 84

   82 ax_defn: AX NAME ';' COND_START expression ';' ax_stmt_list .
   85 ax_stmt_list: ax_stmt_list . ax_stmt

    TOT  shift, and go to state 30
    CNT  shift, and go to state 31
    TTL  shift, and go to state 32

    $default  reduce using rule 82 (ax_defn)

    ax_stmt  go to state 49


state 85

   50 expression: expression . '+' expression
   51           | expression . '-' expression
   52           | expression . '*' expression
   53           | expression . '/' expression
   54           | expression . '%' expression
   56           | expression . '<' expression
   57           | expression . '>' expression
   58           | expression . LEQ expression
   59           | expression . GEQ expression
   60           | expression . ISEQ expression
   61           | expression . NOEQ expression
   62           | expression . LOGOR expression
   63           | expression . LOGAND expression
   64           | expression . '=' expression
   64           | expression '=' expression .

    '='     shift, and go to state 61
    LOGOR   shift, and go to state 62
    LOGAND  shift, and go to state 63
    NOEQ    shift, and go to state 64
    ISEQ    shift, and go to state 65
    '<'     shift, and go to state 66
    '>'     shift, and go to state 67
    GEQ     shift, and go to state 68
    LEQ     shift, and go to state 69
    '-'     shift, and go to state 70
    '+'     shift, and go to state 71
    '*'     shift, and go to state 72
    '/'     shift, and go to state 73
    '%'     shift, and go to state 74

    $default  reduce using rule 64 (expression)


state 86

   50 expression: expression . '+' expression
   51           | expression . '-' expression
   52           | expression . '*' expression
   53           | expression . '/' expression
   54           | expression . '%' expression
   56           | expression . '<' expression
   57           | expression . '>' expression
   58           | expression . LEQ expression
   59           | expression . GEQ expression
   60           | expression . ISEQ expression
   61           | expression . NOEQ expression
   62           | expression . LOGOR expression
   62           | expression LOGOR expression .
   63           | expression . LOGAND expression
   64           | expression . '=' expression

    LOGAND  shift, and go to state 63
    NOEQ    shift, and go to state 64
    ISEQ    shift, and go to state 65
    '<'     shift, and go to state 66
    '>'     shift, and go to state 67
    GEQ     shift, and go to state 68
    LEQ     shift, and go to state 69
    '-'     shift, and go to state 70
    '+'     shift, and go to state 71
    '*'     shift, and go to state 72
    '/'     shift, and go to state 73
    '%'     shift, and go to state 74

    $default  reduce using rule 62 (expression)


state 87

   50 expression: expression . '+' expression
   51           | expression . '-' expression
   52           | expression . '*' expression
   53           | expression . '/' expression
   54           | expression . '%' expression
   56           | expression . '<' expression
   57           | expression . '>' expression
   58           | expression . LEQ expression
   59           | expression . GEQ expression
   60           | expression . ISEQ expression
   61           | expression . NOEQ expression
   62           | expression . LOGOR expression
   63           | expression . LOGAND expression
   63           | expression LOGAND expression .
   64           | expression . '=' expression

    NOEQ  shift, and go to state 64
    ISEQ  shift, and go to state 65
    '<'   shift, and go to state 66
    '>'   shift, and go to state 67
    GEQ   shift, and go to state 68
    LEQ   shift, and go to state 69
    '-'   shift, and go to state 70
    '+'   shift, and go to state 71
    '*'   shift, and go to state 72
    '/'   shift, and go to state 73
    '%'   shift, and go to state 74

    $default  reduce using rule 63 (expression)


state 88

   50 expression: expression . '+' expression
   51           | expression . '-' expression
   52           | expression . '*' expression
   53           | expression . '/' expression
   54           | expression . '%' expression
   56           | expression . '<' expression
   57           | expression . '>' expression
   58           | expression . LEQ expression
   59           | expression . GEQ expression
   60           | expression . ISEQ expression
   61           | expression . NOEQ expression
   61           | expression NOEQ expression .
   62           | expression . LOGOR expression
   63           | expression . LOGAND expression
   64           | expression . '=' expression

    '<'  shift, and go to state 66
    '>'  shift, and go to state 67
    GEQ  shift, and go to state 68
    LEQ  shift, and go to state 69
    '-'  shift, and go to state 70
    '+'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '%'  shift, and go to state 74

    $default  reduce using rule 61 (expression)


state 89

   50 expression: expression . '+' expression
   51           | expression . '-' expression
   52           | expression . '*' expression
   53           | expression . '/' expression
   54           | expression . '%' expression
   56           | expression . '<' expression
   57           | expression . '>' expression
   58           | expression . LEQ expression
   59           | expression . GEQ expression
   60           | expression . ISEQ expression
   60           | expression ISEQ expression .
   61           | expression . NOEQ expression
   62           | expression . LOGOR expression
   63           | expression . LOGAND expression
   64           | expression . '=' expression

    '<'  shift, and go to state 66
    '>'  shift, and go to state 67
    GEQ  shift, and go to state 68
    LEQ  shift, and go to state 69
    '-'  shift, and go to state 70
    '+'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '%'  shift, and go to state 74

    $default  reduce using rule 60 (expression)


state 90

   50 expression: expression . '+' expression
   51           | expression . '-' expression
   52           | expression . '*' expression
   53           | expression . '/' expression
   54           | expression . '%' expression
   56           | expression . '<' expression
   56           | expression '<' expression .
   57           | expression . '>' expression
   58           | expression . LEQ expression
   59           | expression . GEQ expression
   60           | expression . ISEQ expression
   61           | expression . NOEQ expression
   62           | expression . LOGOR expression
   63           | expression . LOGAND expression
   64           | expression . '=' expression

    '-'  shift, and go to state 70
    '+'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '%'  shift, and go to state 74

    $default  reduce using rule 56 (expression)


state 91

   50 expression: expression . '+' expression
   51           | expression . '-' expression
   52           | expression . '*' expression
   53           | expression . '/' expression
   54           | expression . '%' expression
   56           | expression . '<' expression
   57           | expression . '>' expression
   57           | expression '>' expression .
   58           | expression . LEQ expression
   59           | expression . GEQ expression
   60           | expression . ISEQ expression
   61           | expression . NOEQ expression
   62           | expression . LOGOR expression
   63           | expression . LOGAND expression
   64           | expression . '=' expression

    '-'  shift, and go to state 70
    '+'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '%'  shift, and go to state 74

    $default  reduce using rule 57 (expression)


state 92

   50 expression: expression . '+' expression
   51           | expression . '-' expression
   52           | expression . '*' expression
   53           | expression . '/' expression
   54           | expression . '%' expression
   56           | expression . '<' expression
   57           | expression . '>' expression
   58           | expression . LEQ expression
   59           | expression . GEQ expression
   59           | expression GEQ expression .
   60           | expression . ISEQ expression
   61           | expression . NOEQ expression
   62           | expression . LOGOR expression
   63           | expression . LOGAND expression
   64           | expression . '=' expression

    '-'  shift, and go to state 70
    '+'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '%'  shift, and go to state 74

    $default  reduce using rule 59 (expression)


state 93

   50 expression: expression . '+' expression
   51           | expression . '-' expression
   52           | expression . '*' expression
   53           | expression . '/' expression
   54           | expression . '%' expression
   56           | expression . '<' expression
   57           | expression . '>' expression
   58           | expression . LEQ expression
   58           | expression LEQ expression .
   59           | expression . GEQ expression
   60           | expression . ISEQ expression
   61           | expression . NOEQ expression
   62           | expression . LOGOR expression
   63           | expression . LOGAND expression
   64           | expression . '=' expression

    '-'  shift, and go to state 70
    '+'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '%'  shift, and go to state 74

    $default  reduce using rule 58 (expression)


state 94

   50 expression: expression . '+' expression
   51           | expression . '-' expression
   51           | expression '-' expression .
   52           | expression . '*' expression
   53           | expression . '/' expression
   54           | expression . '%' expression
   56           | expression . '<' expression
   57           | expression . '>' expression
   58           | expression . LEQ expression
   59           | expression . GEQ expression
   60           | expression . ISEQ expression
   61           | expression . NOEQ expression
   62           | expression . LOGOR expression
   63           | expression . LOGAND expression
   64           | expression . '=' expression

    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '%'  shift, and go to state 74

    $default  reduce using rule 51 (expression)


state 95

   50 expression: expression . '+' expression
   50           | expression '+' expression .
   51           | expression . '-' expression
   52           | expression . '*' expression
   53           | expression . '/' expression
   54           | expression . '%' expression
   56           | expression . '<' expression
   57           | expression . '>' expression
   58           | expression . LEQ expression
   59           | expression . GEQ expression
   60           | expression . ISEQ expression
   61           | expression . NOEQ expression
   62           | expression . LOGOR expression
   63           | expression . LOGAND expression
   64           | expression . '=' expression

    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '%'  shift, and go to state 74

    $default  reduce using rule 50 (expression)


state 96

   50 expression: expression . '+' expression
   51           | expression . '-' expression
   52           | expression . '*' expression
   52           | expression '*' expression .
   53           | expression . '/' expression
   54           | expression . '%' expression
   56           | expression . '<' expression
   57           | expression . '>' expression
   58           | expression . LEQ expression
   59           | expression . GEQ expression
   60           | expression . ISEQ expression
   61           | expression . NOEQ expression
   62           | expression . LOGOR expression
   63           | expression . LOGAND expression
   64           | expression . '=' expression

    $default  reduce using rule 52 (expression)


state 97

   50 expression: expression . '+' expression
   51           | expression . '-' expression
   52           | expression . '*' expression
   53           | expression . '/' expression
   53           | expression '/' expression .
   54           | expression . '%' expression
   56           | expression . '<' expression
   57           | expression . '>' expression
   58           | expression . LEQ expression
   59           | expression . GEQ expression
   60           | expression . ISEQ expression
   61           | expression . NOEQ expression
   62           | expression . LOGOR expression
   63           | expression . LOGAND expression
   64           | expression . '=' expression

    $default  reduce using rule 53 (expression)


state 98

   50 expression: expression . '+' expression
   51           | expression . '-' expression
   52           | expression . '*' expression
   53           | expression . '/' expression
   54           | expression . '%' expression
   54           | expression '%' expression .
   56           | expression . '<' expression
   57           | expression . '>' expression
   58           | expression . LEQ expression
   59           | expression . GEQ expression
   60           | expression . ISEQ expression
   61           | expression . NOEQ expression
   62           | expression . LOGOR expression
   63           | expression . LOGAND expression
   64           | expression . '=' expression

    $default  reduce using rule 54 (expression)


state 99

   77 tab_defn: TAB NAME NAME ';' COND_START expression ';' .

    $default  reduce using rule 77 (tab_defn)


state 100

    9 xtcc_type: VOID_T .

    $default  reduce using rule 9 (xtcc_type)


state 101

   10 xtcc_type: INT8_T .

    $default  reduce using rule 10 (xtcc_type)


state 102

   11 xtcc_type: INT16_T .

    $default  reduce using rule 11 (xtcc_type)


state 103

   12 xtcc_type: INT32_T .

    $default  reduce using rule 12 (xtcc_type)


state 104

   13 xtcc_type: FLOAT_T .

    $default  reduce using rule 13 (xtcc_type)


state 105

   14 xtcc_type: DOUBLE_T .

    $default  reduce using rule 14 (xtcc_type)


state 106

    2 prog: DATA_STRUCT ';' REC_LEN '=' INUMBER ';' @1 ED_START top_level_item_list . ED_END
    6 top_level_item_list: top_level_item_list . top_level_item

    VOID_T    shift, and go to state 100
    INT8_T    shift, and go to state 101
    INT16_T   shift, and go to state 102
    INT32_T   shift, and go to state 103
    FLOAT_T   shift, and go to state 104
    DOUBLE_T  shift, and go to state 105
    ED_END    shift, and go to state 118

    top_level_item  go to state 119
    xtcc_type       go to state 108
    func_defn       go to state 109
    decl            go to state 110
    func_decl       go to state 111


state 107

    5 top_level_item_list: top_level_item .

    $default  reduce using rule 5 (top_level_item_list)


state 108

   16 func_defn: xtcc_type . NAME '(' decl_comma_list ')' @2 compound_stmt
   17 decl: xtcc_type . NAME ';'
   18     | xtcc_type . NAME '[' INUMBER ']' ';'
   20 func_decl: xtcc_type . NAME '(' decl_comma_list ')' ';'

    NAME  shift, and go to state 120


state 109

    8 top_level_item: func_defn .

    $default  reduce using rule 8 (top_level_item)


state 110

    7 top_level_item: decl .

    $default  reduce using rule 7 (top_level_item)


state 111

   19 decl: func_decl .

    $default  reduce using rule 19 (decl)


state 112

   87 ax_stmt: TOT ';' TEXT ';' COND_START . expression ';'

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 121


state 113

   88 ax_stmt: CNT ';' TEXT ';' COND_START . expression ';'

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 122


state 114

   69 expression: NAME '[' expression ']' .

    $default  reduce using rule 69 (expression)


state 115

   70 expression: NAME '[' expression ',' . expression ']'

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 123


state 116

   71 expression: NAME '(' expr_list ')' .

    $default  reduce using rule 71 (expression)


state 117

   49 expr_list: expr_list ',' . expression

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 124


state 118

    2 prog: DATA_STRUCT ';' REC_LEN '=' INUMBER ';' @1 ED_START top_level_item_list ED_END .

    $default  reduce using rule 2 (prog)


state 119

    6 top_level_item_list: top_level_item_list top_level_item .

    $default  reduce using rule 6 (top_level_item_list)


state 120

   16 func_defn: xtcc_type NAME . '(' decl_comma_list ')' @2 compound_stmt
   17 decl: xtcc_type NAME . ';'
   18     | xtcc_type NAME . '[' INUMBER ']' ';'
   20 func_decl: xtcc_type NAME . '(' decl_comma_list ')' ';'

    ';'  shift, and go to state 125
    '['  shift, and go to state 126
    '('  shift, and go to state 127


state 121

   50 expression: expression . '+' expression
   51           | expression . '-' expression
   52           | expression . '*' expression
   53           | expression . '/' expression
   54           | expression . '%' expression
   56           | expression . '<' expression
   57           | expression . '>' expression
   58           | expression . LEQ expression
   59           | expression . GEQ expression
   60           | expression . ISEQ expression
   61           | expression . NOEQ expression
   62           | expression . LOGOR expression
   63           | expression . LOGAND expression
   64           | expression . '=' expression
   87 ax_stmt: TOT ';' TEXT ';' COND_START expression . ';'

    ';'     shift, and go to state 128
    '='     shift, and go to state 61
    LOGOR   shift, and go to state 62
    LOGAND  shift, and go to state 63
    NOEQ    shift, and go to state 64
    ISEQ    shift, and go to state 65
    '<'     shift, and go to state 66
    '>'     shift, and go to state 67
    GEQ     shift, and go to state 68
    LEQ     shift, and go to state 69
    '-'     shift, and go to state 70
    '+'     shift, and go to state 71
    '*'     shift, and go to state 72
    '/'     shift, and go to state 73
    '%'     shift, and go to state 74


state 122

   50 expression: expression . '+' expression
   51           | expression . '-' expression
   52           | expression . '*' expression
   53           | expression . '/' expression
   54           | expression . '%' expression
   56           | expression . '<' expression
   57           | expression . '>' expression
   58           | expression . LEQ expression
   59           | expression . GEQ expression
   60           | expression . ISEQ expression
   61           | expression . NOEQ expression
   62           | expression . LOGOR expression
   63           | expression . LOGAND expression
   64           | expression . '=' expression
   88 ax_stmt: CNT ';' TEXT ';' COND_START expression . ';'

    ';'     shift, and go to state 129
    '='     shift, and go to state 61
    LOGOR   shift, and go to state 62
    LOGAND  shift, and go to state 63
    NOEQ    shift, and go to state 64
    ISEQ    shift, and go to state 65
    '<'     shift, and go to state 66
    '>'     shift, and go to state 67
    GEQ     shift, and go to state 68
    LEQ     shift, and go to state 69
    '-'     shift, and go to state 70
    '+'     shift, and go to state 71
    '*'     shift, and go to state 72
    '/'     shift, and go to state 73
    '%'     shift, and go to state 74


state 123

   50 expression: expression . '+' expression
   51           | expression . '-' expression
   52           | expression . '*' expression
   53           | expression . '/' expression
   54           | expression . '%' expression
   56           | expression . '<' expression
   57           | expression . '>' expression
   58           | expression . LEQ expression
   59           | expression . GEQ expression
   60           | expression . ISEQ expression
   61           | expression . NOEQ expression
   62           | expression . LOGOR expression
   63           | expression . LOGAND expression
   64           | expression . '=' expression
   70           | NAME '[' expression ',' expression . ']'

    ']'     shift, and go to state 130
    '='     shift, and go to state 61
    LOGOR   shift, and go to state 62
    LOGAND  shift, and go to state 63
    NOEQ    shift, and go to state 64
    ISEQ    shift, and go to state 65
    '<'     shift, and go to state 66
    '>'     shift, and go to state 67
    GEQ     shift, and go to state 68
    LEQ     shift, and go to state 69
    '-'     shift, and go to state 70
    '+'     shift, and go to state 71
    '*'     shift, and go to state 72
    '/'     shift, and go to state 73
    '%'     shift, and go to state 74


state 124

   49 expr_list: expr_list ',' expression .
   50 expression: expression . '+' expression
   51           | expression . '-' expression
   52           | expression . '*' expression
   53           | expression . '/' expression
   54           | expression . '%' expression
   56           | expression . '<' expression
   57           | expression . '>' expression
   58           | expression . LEQ expression
   59           | expression . GEQ expression
   60           | expression . ISEQ expression
   61           | expression . NOEQ expression
   62           | expression . LOGOR expression
   63           | expression . LOGAND expression
   64           | expression . '=' expression

    '='     shift, and go to state 61
    LOGOR   shift, and go to state 62
    LOGAND  shift, and go to state 63
    NOEQ    shift, and go to state 64
    ISEQ    shift, and go to state 65
    '<'     shift, and go to state 66
    '>'     shift, and go to state 67
    GEQ     shift, and go to state 68
    LEQ     shift, and go to state 69
    '-'     shift, and go to state 70
    '+'     shift, and go to state 71
    '*'     shift, and go to state 72
    '/'     shift, and go to state 73
    '%'     shift, and go to state 74

    $default  reduce using rule 49 (expr_list)


state 125

   17 decl: xtcc_type NAME ';' .

    $default  reduce using rule 17 (decl)


state 126

   18 decl: xtcc_type NAME '[' . INUMBER ']' ';'

    INUMBER  shift, and go to state 131


state 127

   16 func_defn: xtcc_type NAME '(' . decl_comma_list ')' @2 compound_stmt
   20 func_decl: xtcc_type NAME '(' . decl_comma_list ')' ';'

    VOID_T    shift, and go to state 100
    INT8_T    shift, and go to state 101
    INT16_T   shift, and go to state 102
    INT32_T   shift, and go to state 103
    FLOAT_T   shift, and go to state 104
    DOUBLE_T  shift, and go to state 105

    $default  reduce using rule 26 (var_decl)

    xtcc_type        go to state 132
    decl_comma_list  go to state 133
    var_decl         go to state 134


state 128

   87 ax_stmt: TOT ';' TEXT ';' COND_START expression ';' .

    $default  reduce using rule 87 (ax_stmt)


state 129

   88 ax_stmt: CNT ';' TEXT ';' COND_START expression ';' .

    $default  reduce using rule 88 (ax_stmt)


state 130

   70 expression: NAME '[' expression ',' expression ']' .

    $default  reduce using rule 70 (expression)


state 131

   18 decl: xtcc_type NAME '[' INUMBER . ']' ';'

    ']'  shift, and go to state 135


state 132

   23 var_decl: xtcc_type . NAME
   24         | xtcc_type . NAME '[' INUMBER ']'
   25         | xtcc_type . '&' NAME

    NAME  shift, and go to state 136
    '&'   shift, and go to state 137


state 133

   16 func_defn: xtcc_type NAME '(' decl_comma_list . ')' @2 compound_stmt
   20 func_decl: xtcc_type NAME '(' decl_comma_list . ')' ';'
   22 decl_comma_list: decl_comma_list . ',' var_decl

    ')'  shift, and go to state 138
    ','  shift, and go to state 139


state 134

   21 decl_comma_list: var_decl .

    $default  reduce using rule 21 (decl_comma_list)


state 135

   18 decl: xtcc_type NAME '[' INUMBER ']' . ';'

    ';'  shift, and go to state 140


state 136

   23 var_decl: xtcc_type NAME .
   24         | xtcc_type NAME . '[' INUMBER ']'

    '['  shift, and go to state 141

    $default  reduce using rule 23 (var_decl)


state 137

   25 var_decl: xtcc_type '&' . NAME

    NAME  shift, and go to state 142


state 138

   16 func_defn: xtcc_type NAME '(' decl_comma_list ')' . @2 compound_stmt
   20 func_decl: xtcc_type NAME '(' decl_comma_list ')' . ';'

    ';'  shift, and go to state 143

    $default  reduce using rule 15 (@2)

    @2  go to state 144


state 139

   22 decl_comma_list: decl_comma_list ',' . var_decl

    VOID_T    shift, and go to state 100
    INT8_T    shift, and go to state 101
    INT16_T   shift, and go to state 102
    INT32_T   shift, and go to state 103
    FLOAT_T   shift, and go to state 104
    DOUBLE_T  shift, and go to state 105

    $default  reduce using rule 26 (var_decl)

    xtcc_type  go to state 132
    var_decl   go to state 145


state 140

   18 decl: xtcc_type NAME '[' INUMBER ']' ';' .

    $default  reduce using rule 18 (decl)


state 141

   24 var_decl: xtcc_type NAME '[' . INUMBER ']'

    INUMBER  shift, and go to state 146


state 142

   25 var_decl: xtcc_type '&' NAME .

    $default  reduce using rule 25 (var_decl)


state 143

   20 func_decl: xtcc_type NAME '(' decl_comma_list ')' ';' .

    $default  reduce using rule 20 (func_decl)


state 144

   16 func_defn: xtcc_type NAME '(' decl_comma_list ')' @2 . compound_stmt

    '{'  shift, and go to state 147

    compound_stmt  go to state 148
    open_curly     go to state 149


state 145

   22 decl_comma_list: decl_comma_list ',' var_decl .

    $default  reduce using rule 22 (decl_comma_list)


state 146

   24 var_decl: xtcc_type NAME '[' INUMBER . ']'

    ']'  shift, and go to state 150


state 147

   47 open_curly: '{' .

    $default  reduce using rule 47 (open_curly)


state 148

   16 func_defn: xtcc_type NAME '(' decl_comma_list ')' @2 compound_stmt .

    $default  reduce using rule 16 (func_defn)


state 149

   46 compound_stmt: open_curly . statement_list '}'

    error     shift, and go to state 151
    '{'       shift, and go to state 147
    FOR       shift, and go to state 152
    FLD       shift, and go to state 153
    TEXT      shift, and go to state 41
    NAME      shift, and go to state 42
    FNUMBER   shift, and go to state 43
    INUMBER   shift, and go to state 44
    LISTA     shift, and go to state 154
    IF        shift, and go to state 155
    '('       shift, and go to state 45
    VOID_T    shift, and go to state 100
    INT8_T    shift, and go to state 101
    INT16_T   shift, and go to state 102
    INT32_T   shift, and go to state 103
    FLOAT_T   shift, and go to state 104
    DOUBLE_T  shift, and go to state 105
    CONTINUE  shift, and go to state 156
    BREAK     shift, and go to state 157
    '-'       shift, and go to state 46
    NOT       shift, and go to state 47

    xtcc_type       go to state 158
    decl            go to state 159
    func_decl       go to state 111
    statement_list  go to state 160
    statement       go to state 161
    list_stmt       go to state 162
    if_stmt         go to state 163
    fld_stmt        go to state 164
    compound_stmt   go to state 165
    open_curly      go to state 149
    expression      go to state 166


state 150

   24 var_decl: xtcc_type NAME '[' INUMBER ']' .

    $default  reduce using rule 24 (var_decl)


state 151

   39 statement: error . ';'

    ';'  shift, and go to state 167


state 152

   30 statement: FOR . '(' expression ';' expression ';' expression ')' @3 statement

    '('  shift, and go to state 168


state 153

   45 fld_stmt: FLD . NAME '=' NAME '(' expression ',' expression ')' ':' INUMBER ';'

    NAME  shift, and go to state 169


state 154

   40 list_stmt: LISTA . NAME TEXT ';'
   41          | LISTA . NAME '[' expression ']' TEXT ';'
   42          | LISTA . NAME '[' expression ',' expression ']' TEXT ';'

    NAME  shift, and go to state 170


state 155

   43 if_stmt: IF . '(' expression ')' statement
   44        | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 171


state 156

   37 statement: CONTINUE . ';'

    ';'  shift, and go to state 172


state 157

   36 statement: BREAK . ';'

    ';'  shift, and go to state 173


state 158

   17 decl: xtcc_type . NAME ';'
   18     | xtcc_type . NAME '[' INUMBER ']' ';'
   20 func_decl: xtcc_type . NAME '(' decl_comma_list ')' ';'

    NAME  shift, and go to state 174


state 159

   34 statement: decl .

    $default  reduce using rule 34 (statement)


state 160

   28 statement_list: statement_list . statement
   46 compound_stmt: open_curly statement_list . '}'

    error     shift, and go to state 151
    '{'       shift, and go to state 147
    '}'       shift, and go to state 175
    FOR       shift, and go to state 152
    FLD       shift, and go to state 153
    TEXT      shift, and go to state 41
    NAME      shift, and go to state 42
    FNUMBER   shift, and go to state 43
    INUMBER   shift, and go to state 44
    LISTA     shift, and go to state 154
    IF        shift, and go to state 155
    '('       shift, and go to state 45
    VOID_T    shift, and go to state 100
    INT8_T    shift, and go to state 101
    INT16_T   shift, and go to state 102
    INT32_T   shift, and go to state 103
    FLOAT_T   shift, and go to state 104
    DOUBLE_T  shift, and go to state 105
    CONTINUE  shift, and go to state 156
    BREAK     shift, and go to state 157
    '-'       shift, and go to state 46
    NOT       shift, and go to state 47

    xtcc_type      go to state 158
    decl           go to state 159
    func_decl      go to state 111
    statement      go to state 176
    list_stmt      go to state 162
    if_stmt        go to state 163
    fld_stmt       go to state 164
    compound_stmt  go to state 165
    open_curly     go to state 149
    expression     go to state 166


state 161

   27 statement_list: statement .

    $default  reduce using rule 27 (statement_list)


state 162

   35 statement: list_stmt .

    $default  reduce using rule 35 (statement)


state 163

   31 statement: if_stmt .

    $default  reduce using rule 31 (statement)


state 164

   38 statement: fld_stmt .

    $default  reduce using rule 38 (statement)


state 165

   33 statement: compound_stmt .

    $default  reduce using rule 33 (statement)


state 166

   32 statement: expression . ';'
   50 expression: expression . '+' expression
   51           | expression . '-' expression
   52           | expression . '*' expression
   53           | expression . '/' expression
   54           | expression . '%' expression
   56           | expression . '<' expression
   57           | expression . '>' expression
   58           | expression . LEQ expression
   59           | expression . GEQ expression
   60           | expression . ISEQ expression
   61           | expression . NOEQ expression
   62           | expression . LOGOR expression
   63           | expression . LOGAND expression
   64           | expression . '=' expression

    ';'     shift, and go to state 177
    '='     shift, and go to state 61
    LOGOR   shift, and go to state 62
    LOGAND  shift, and go to state 63
    NOEQ    shift, and go to state 64
    ISEQ    shift, and go to state 65
    '<'     shift, and go to state 66
    '>'     shift, and go to state 67
    GEQ     shift, and go to state 68
    LEQ     shift, and go to state 69
    '-'     shift, and go to state 70
    '+'     shift, and go to state 71
    '*'     shift, and go to state 72
    '/'     shift, and go to state 73
    '%'     shift, and go to state 74


state 167

   39 statement: error ';' .

    $default  reduce using rule 39 (statement)


state 168

   30 statement: FOR '(' . expression ';' expression ';' expression ')' @3 statement

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 178


state 169

   45 fld_stmt: FLD NAME . '=' NAME '(' expression ',' expression ')' ':' INUMBER ';'

    '='  shift, and go to state 179


state 170

   40 list_stmt: LISTA NAME . TEXT ';'
   41          | LISTA NAME . '[' expression ']' TEXT ';'
   42          | LISTA NAME . '[' expression ',' expression ']' TEXT ';'

    TEXT  shift, and go to state 180
    '['   shift, and go to state 181


state 171

   43 if_stmt: IF '(' . expression ')' statement
   44        | IF '(' . expression ')' statement ELSE statement

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 182


state 172

   37 statement: CONTINUE ';' .

    $default  reduce using rule 37 (statement)


state 173

   36 statement: BREAK ';' .

    $default  reduce using rule 36 (statement)


state 174

   17 decl: xtcc_type NAME . ';'
   18     | xtcc_type NAME . '[' INUMBER ']' ';'
   20 func_decl: xtcc_type NAME . '(' decl_comma_list ')' ';'

    ';'  shift, and go to state 125
    '['  shift, and go to state 126
    '('  shift, and go to state 183


state 175

   46 compound_stmt: open_curly statement_list '}' .

    $default  reduce using rule 46 (compound_stmt)


state 176

   28 statement_list: statement_list statement .

    $default  reduce using rule 28 (statement_list)


state 177

   32 statement: expression ';' .

    $default  reduce using rule 32 (statement)


state 178

   30 statement: FOR '(' expression . ';' expression ';' expression ')' @3 statement
   50 expression: expression . '+' expression
   51           | expression . '-' expression
   52           | expression . '*' expression
   53           | expression . '/' expression
   54           | expression . '%' expression
   56           | expression . '<' expression
   57           | expression . '>' expression
   58           | expression . LEQ expression
   59           | expression . GEQ expression
   60           | expression . ISEQ expression
   61           | expression . NOEQ expression
   62           | expression . LOGOR expression
   63           | expression . LOGAND expression
   64           | expression . '=' expression

    ';'     shift, and go to state 184
    '='     shift, and go to state 61
    LOGOR   shift, and go to state 62
    LOGAND  shift, and go to state 63
    NOEQ    shift, and go to state 64
    ISEQ    shift, and go to state 65
    '<'     shift, and go to state 66
    '>'     shift, and go to state 67
    GEQ     shift, and go to state 68
    LEQ     shift, and go to state 69
    '-'     shift, and go to state 70
    '+'     shift, and go to state 71
    '*'     shift, and go to state 72
    '/'     shift, and go to state 73
    '%'     shift, and go to state 74


state 179

   45 fld_stmt: FLD NAME '=' . NAME '(' expression ',' expression ')' ':' INUMBER ';'

    NAME  shift, and go to state 185


state 180

   40 list_stmt: LISTA NAME TEXT . ';'

    ';'  shift, and go to state 186


state 181

   41 list_stmt: LISTA NAME '[' . expression ']' TEXT ';'
   42          | LISTA NAME '[' . expression ',' expression ']' TEXT ';'

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 187


state 182

   43 if_stmt: IF '(' expression . ')' statement
   44        | IF '(' expression . ')' statement ELSE statement
   50 expression: expression . '+' expression
   51           | expression . '-' expression
   52           | expression . '*' expression
   53           | expression . '/' expression
   54           | expression . '%' expression
   56           | expression . '<' expression
   57           | expression . '>' expression
   58           | expression . LEQ expression
   59           | expression . GEQ expression
   60           | expression . ISEQ expression
   61           | expression . NOEQ expression
   62           | expression . LOGOR expression
   63           | expression . LOGAND expression
   64           | expression . '=' expression

    ')'     shift, and go to state 188
    '='     shift, and go to state 61
    LOGOR   shift, and go to state 62
    LOGAND  shift, and go to state 63
    NOEQ    shift, and go to state 64
    ISEQ    shift, and go to state 65
    '<'     shift, and go to state 66
    '>'     shift, and go to state 67
    GEQ     shift, and go to state 68
    LEQ     shift, and go to state 69
    '-'     shift, and go to state 70
    '+'     shift, and go to state 71
    '*'     shift, and go to state 72
    '/'     shift, and go to state 73
    '%'     shift, and go to state 74


state 183

   20 func_decl: xtcc_type NAME '(' . decl_comma_list ')' ';'

    VOID_T    shift, and go to state 100
    INT8_T    shift, and go to state 101
    INT16_T   shift, and go to state 102
    INT32_T   shift, and go to state 103
    FLOAT_T   shift, and go to state 104
    DOUBLE_T  shift, and go to state 105

    $default  reduce using rule 26 (var_decl)

    xtcc_type        go to state 132
    decl_comma_list  go to state 189
    var_decl         go to state 134


state 184

   30 statement: FOR '(' expression ';' . expression ';' expression ')' @3 statement

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 190


state 185

   45 fld_stmt: FLD NAME '=' NAME . '(' expression ',' expression ')' ':' INUMBER ';'

    '('  shift, and go to state 191


state 186

   40 list_stmt: LISTA NAME TEXT ';' .

    $default  reduce using rule 40 (list_stmt)


state 187

   41 list_stmt: LISTA NAME '[' expression . ']' TEXT ';'
   42          | LISTA NAME '[' expression . ',' expression ']' TEXT ';'
   50 expression: expression . '+' expression
   51           | expression . '-' expression
   52           | expression . '*' expression
   53           | expression . '/' expression
   54           | expression . '%' expression
   56           | expression . '<' expression
   57           | expression . '>' expression
   58           | expression . LEQ expression
   59           | expression . GEQ expression
   60           | expression . ISEQ expression
   61           | expression . NOEQ expression
   62           | expression . LOGOR expression
   63           | expression . LOGAND expression
   64           | expression . '=' expression

    ']'     shift, and go to state 192
    '='     shift, and go to state 61
    ','     shift, and go to state 193
    LOGOR   shift, and go to state 62
    LOGAND  shift, and go to state 63
    NOEQ    shift, and go to state 64
    ISEQ    shift, and go to state 65
    '<'     shift, and go to state 66
    '>'     shift, and go to state 67
    GEQ     shift, and go to state 68
    LEQ     shift, and go to state 69
    '-'     shift, and go to state 70
    '+'     shift, and go to state 71
    '*'     shift, and go to state 72
    '/'     shift, and go to state 73
    '%'     shift, and go to state 74


state 188

   43 if_stmt: IF '(' expression ')' . statement
   44        | IF '(' expression ')' . statement ELSE statement

    error     shift, and go to state 151
    '{'       shift, and go to state 147
    FOR       shift, and go to state 152
    FLD       shift, and go to state 153
    TEXT      shift, and go to state 41
    NAME      shift, and go to state 42
    FNUMBER   shift, and go to state 43
    INUMBER   shift, and go to state 44
    LISTA     shift, and go to state 154
    IF        shift, and go to state 155
    '('       shift, and go to state 45
    VOID_T    shift, and go to state 100
    INT8_T    shift, and go to state 101
    INT16_T   shift, and go to state 102
    INT32_T   shift, and go to state 103
    FLOAT_T   shift, and go to state 104
    DOUBLE_T  shift, and go to state 105
    CONTINUE  shift, and go to state 156
    BREAK     shift, and go to state 157
    '-'       shift, and go to state 46
    NOT       shift, and go to state 47

    xtcc_type      go to state 158
    decl           go to state 159
    func_decl      go to state 111
    statement      go to state 194
    list_stmt      go to state 162
    if_stmt        go to state 163
    fld_stmt       go to state 164
    compound_stmt  go to state 165
    open_curly     go to state 149
    expression     go to state 166


state 189

   20 func_decl: xtcc_type NAME '(' decl_comma_list . ')' ';'
   22 decl_comma_list: decl_comma_list . ',' var_decl

    ')'  shift, and go to state 195
    ','  shift, and go to state 139


state 190

   30 statement: FOR '(' expression ';' expression . ';' expression ')' @3 statement
   50 expression: expression . '+' expression
   51           | expression . '-' expression
   52           | expression . '*' expression
   53           | expression . '/' expression
   54           | expression . '%' expression
   56           | expression . '<' expression
   57           | expression . '>' expression
   58           | expression . LEQ expression
   59           | expression . GEQ expression
   60           | expression . ISEQ expression
   61           | expression . NOEQ expression
   62           | expression . LOGOR expression
   63           | expression . LOGAND expression
   64           | expression . '=' expression

    ';'     shift, and go to state 196
    '='     shift, and go to state 61
    LOGOR   shift, and go to state 62
    LOGAND  shift, and go to state 63
    NOEQ    shift, and go to state 64
    ISEQ    shift, and go to state 65
    '<'     shift, and go to state 66
    '>'     shift, and go to state 67
    GEQ     shift, and go to state 68
    LEQ     shift, and go to state 69
    '-'     shift, and go to state 70
    '+'     shift, and go to state 71
    '*'     shift, and go to state 72
    '/'     shift, and go to state 73
    '%'     shift, and go to state 74


state 191

   45 fld_stmt: FLD NAME '=' NAME '(' . expression ',' expression ')' ':' INUMBER ';'

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 197


state 192

   41 list_stmt: LISTA NAME '[' expression ']' . TEXT ';'

    TEXT  shift, and go to state 198


state 193

   42 list_stmt: LISTA NAME '[' expression ',' . expression ']' TEXT ';'

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 199


state 194

   43 if_stmt: IF '(' expression ')' statement .
   44        | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 200

    ELSE      [reduce using rule 43 (if_stmt)]
    $default  reduce using rule 43 (if_stmt)


state 195

   20 func_decl: xtcc_type NAME '(' decl_comma_list ')' . ';'

    ';'  shift, and go to state 143


state 196

   30 statement: FOR '(' expression ';' expression ';' . expression ')' @3 statement

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 201


state 197

   45 fld_stmt: FLD NAME '=' NAME '(' expression . ',' expression ')' ':' INUMBER ';'
   50 expression: expression . '+' expression
   51           | expression . '-' expression
   52           | expression . '*' expression
   53           | expression . '/' expression
   54           | expression . '%' expression
   56           | expression . '<' expression
   57           | expression . '>' expression
   58           | expression . LEQ expression
   59           | expression . GEQ expression
   60           | expression . ISEQ expression
   61           | expression . NOEQ expression
   62           | expression . LOGOR expression
   63           | expression . LOGAND expression
   64           | expression . '=' expression

    '='     shift, and go to state 61
    ','     shift, and go to state 202
    LOGOR   shift, and go to state 62
    LOGAND  shift, and go to state 63
    NOEQ    shift, and go to state 64
    ISEQ    shift, and go to state 65
    '<'     shift, and go to state 66
    '>'     shift, and go to state 67
    GEQ     shift, and go to state 68
    LEQ     shift, and go to state 69
    '-'     shift, and go to state 70
    '+'     shift, and go to state 71
    '*'     shift, and go to state 72
    '/'     shift, and go to state 73
    '%'     shift, and go to state 74


state 198

   41 list_stmt: LISTA NAME '[' expression ']' TEXT . ';'

    ';'  shift, and go to state 203


state 199

   42 list_stmt: LISTA NAME '[' expression ',' expression . ']' TEXT ';'
   50 expression: expression . '+' expression
   51           | expression . '-' expression
   52           | expression . '*' expression
   53           | expression . '/' expression
   54           | expression . '%' expression
   56           | expression . '<' expression
   57           | expression . '>' expression
   58           | expression . LEQ expression
   59           | expression . GEQ expression
   60           | expression . ISEQ expression
   61           | expression . NOEQ expression
   62           | expression . LOGOR expression
   63           | expression . LOGAND expression
   64           | expression . '=' expression

    ']'     shift, and go to state 204
    '='     shift, and go to state 61
    LOGOR   shift, and go to state 62
    LOGAND  shift, and go to state 63
    NOEQ    shift, and go to state 64
    ISEQ    shift, and go to state 65
    '<'     shift, and go to state 66
    '>'     shift, and go to state 67
    GEQ     shift, and go to state 68
    LEQ     shift, and go to state 69
    '-'     shift, and go to state 70
    '+'     shift, and go to state 71
    '*'     shift, and go to state 72
    '/'     shift, and go to state 73
    '%'     shift, and go to state 74


state 200

   44 if_stmt: IF '(' expression ')' statement ELSE . statement

    error     shift, and go to state 151
    '{'       shift, and go to state 147
    FOR       shift, and go to state 152
    FLD       shift, and go to state 153
    TEXT      shift, and go to state 41
    NAME      shift, and go to state 42
    FNUMBER   shift, and go to state 43
    INUMBER   shift, and go to state 44
    LISTA     shift, and go to state 154
    IF        shift, and go to state 155
    '('       shift, and go to state 45
    VOID_T    shift, and go to state 100
    INT8_T    shift, and go to state 101
    INT16_T   shift, and go to state 102
    INT32_T   shift, and go to state 103
    FLOAT_T   shift, and go to state 104
    DOUBLE_T  shift, and go to state 105
    CONTINUE  shift, and go to state 156
    BREAK     shift, and go to state 157
    '-'       shift, and go to state 46
    NOT       shift, and go to state 47

    xtcc_type      go to state 158
    decl           go to state 159
    func_decl      go to state 111
    statement      go to state 205
    list_stmt      go to state 162
    if_stmt        go to state 163
    fld_stmt       go to state 164
    compound_stmt  go to state 165
    open_curly     go to state 149
    expression     go to state 166


state 201

   30 statement: FOR '(' expression ';' expression ';' expression . ')' @3 statement
   50 expression: expression . '+' expression
   51           | expression . '-' expression
   52           | expression . '*' expression
   53           | expression . '/' expression
   54           | expression . '%' expression
   56           | expression . '<' expression
   57           | expression . '>' expression
   58           | expression . LEQ expression
   59           | expression . GEQ expression
   60           | expression . ISEQ expression
   61           | expression . NOEQ expression
   62           | expression . LOGOR expression
   63           | expression . LOGAND expression
   64           | expression . '=' expression

    ')'     shift, and go to state 206
    '='     shift, and go to state 61
    LOGOR   shift, and go to state 62
    LOGAND  shift, and go to state 63
    NOEQ    shift, and go to state 64
    ISEQ    shift, and go to state 65
    '<'     shift, and go to state 66
    '>'     shift, and go to state 67
    GEQ     shift, and go to state 68
    LEQ     shift, and go to state 69
    '-'     shift, and go to state 70
    '+'     shift, and go to state 71
    '*'     shift, and go to state 72
    '/'     shift, and go to state 73
    '%'     shift, and go to state 74


state 202

   45 fld_stmt: FLD NAME '=' NAME '(' expression ',' . expression ')' ':' INUMBER ';'

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 207


state 203

   41 list_stmt: LISTA NAME '[' expression ']' TEXT ';' .

    $default  reduce using rule 41 (list_stmt)


state 204

   42 list_stmt: LISTA NAME '[' expression ',' expression ']' . TEXT ';'

    TEXT  shift, and go to state 208


state 205

   44 if_stmt: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 44 (if_stmt)


state 206

   30 statement: FOR '(' expression ';' expression ';' expression ')' . @3 statement

    $default  reduce using rule 29 (@3)

    @3  go to state 209


state 207

   45 fld_stmt: FLD NAME '=' NAME '(' expression ',' expression . ')' ':' INUMBER ';'
   50 expression: expression . '+' expression
   51           | expression . '-' expression
   52           | expression . '*' expression
   53           | expression . '/' expression
   54           | expression . '%' expression
   56           | expression . '<' expression
   57           | expression . '>' expression
   58           | expression . LEQ expression
   59           | expression . GEQ expression
   60           | expression . ISEQ expression
   61           | expression . NOEQ expression
   62           | expression . LOGOR expression
   63           | expression . LOGAND expression
   64           | expression . '=' expression

    ')'     shift, and go to state 210
    '='     shift, and go to state 61
    LOGOR   shift, and go to state 62
    LOGAND  shift, and go to state 63
    NOEQ    shift, and go to state 64
    ISEQ    shift, and go to state 65
    '<'     shift, and go to state 66
    '>'     shift, and go to state 67
    GEQ     shift, and go to state 68
    LEQ     shift, and go to state 69
    '-'     shift, and go to state 70
    '+'     shift, and go to state 71
    '*'     shift, and go to state 72
    '/'     shift, and go to state 73
    '%'     shift, and go to state 74


state 208

   42 list_stmt: LISTA NAME '[' expression ',' expression ']' TEXT . ';'

    ';'  shift, and go to state 211


state 209

   30 statement: FOR '(' expression ';' expression ';' expression ')' @3 . statement

    error     shift, and go to state 151
    '{'       shift, and go to state 147
    FOR       shift, and go to state 152
    FLD       shift, and go to state 153
    TEXT      shift, and go to state 41
    NAME      shift, and go to state 42
    FNUMBER   shift, and go to state 43
    INUMBER   shift, and go to state 44
    LISTA     shift, and go to state 154
    IF        shift, and go to state 155
    '('       shift, and go to state 45
    VOID_T    shift, and go to state 100
    INT8_T    shift, and go to state 101
    INT16_T   shift, and go to state 102
    INT32_T   shift, and go to state 103
    FLOAT_T   shift, and go to state 104
    DOUBLE_T  shift, and go to state 105
    CONTINUE  shift, and go to state 156
    BREAK     shift, and go to state 157
    '-'       shift, and go to state 46
    NOT       shift, and go to state 47

    xtcc_type      go to state 158
    decl           go to state 159
    func_decl      go to state 111
    statement      go to state 212
    list_stmt      go to state 162
    if_stmt        go to state 163
    fld_stmt       go to state 164
    compound_stmt  go to state 165
    open_curly     go to state 149
    expression     go to state 166


state 210

   45 fld_stmt: FLD NAME '=' NAME '(' expression ',' expression ')' . ':' INUMBER ';'

    ':'  shift, and go to state 213


state 211

   42 list_stmt: LISTA NAME '[' expression ',' expression ']' TEXT ';' .

    $default  reduce using rule 42 (list_stmt)


state 212

   30 statement: FOR '(' expression ';' expression ';' expression ')' @3 statement .

    $default  reduce using rule 30 (statement)


state 213

   45 fld_stmt: FLD NAME '=' NAME '(' expression ',' expression ')' ':' . INUMBER ';'

    INUMBER  shift, and go to state 214


state 214

   45 fld_stmt: FLD NAME '=' NAME '(' expression ',' expression ')' ':' INUMBER . ';'

    ';'  shift, and go to state 215


state 215

   45 fld_stmt: FLD NAME '=' NAME '(' expression ',' expression ')' ':' INUMBER ';' .

    $default  reduce using rule 45 (fld_stmt)
