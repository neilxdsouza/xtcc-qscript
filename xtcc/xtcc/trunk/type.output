Terminals which are not used

   CONVERT
   CODELIST
   '!'


State 191 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog $end

    1 @1: /* empty */

    2 prog: DATA_STRUCT ';' REC_LEN '=' INUMBER ';' @1 ED_START top_level_item_list ED_END
    3     | AXSTART '{' ax_list '}'
    4     | TABSTART '{' tab_list '}'

    5 top_level_item_list: top_level_item
    6                    | top_level_item_list top_level_item

    7 top_level_item: decl
    8               | func_defn

    9 xtcc_type: VOID_T
   10          | U_INT8_T
   11          | INT8_T
   12          | U_INT16_T
   13          | INT16_T
   14          | U_INT32_T
   15          | INT32_T
   16          | FLOAT_T
   17          | DOUBLE_T

   18 @2: /* empty */

   19 func_defn: xtcc_type NAME '(' decl_comma_list ')' @2 compound_stmt

   20 decl: xtcc_type NAME ';'
   21     | xtcc_type NAME '[' INUMBER ']' ';'
   22     | func_decl

   23 func_decl: xtcc_type NAME '(' decl_comma_list ')' ';'

   24 decl_comma_list: var_decl
   25                | decl_comma_list ',' var_decl

   26 var_decl: xtcc_type NAME
   27         | xtcc_type NAME '[' INUMBER ']'
   28         | xtcc_type '&' NAME
   29         | /* empty */

   30 statement_list: statement
   31               | statement_list statement

   32 @3: /* empty */

   33 statement: FOR '(' expression ';' expression ';' expression ')' @3 statement
   34          | if_stmt
   35          | expression ';'
   36          | compound_stmt
   37          | decl
   38          | list_stmt
   39          | BREAK ';'
   40          | CONTINUE ';'
   41          | error ';'

   42 list_stmt: LISTA NAME TEXT ';'
   43          | LISTA NAME '[' INUMBER ']' TEXT ';'
   44          | LISTA NAME '[' INUMBER ',' INUMBER ']' TEXT ';'

   45 if_stmt: IF '(' expression ')' statement
   46        | IF '(' expression ')' statement ELSE statement

   47 compound_stmt: open_curly statement_list '}'

   48 open_curly: '{'

   49 expr_list: expression
   50          | expr_list ',' expression

   51 expression: expression '+' expression
   52           | expression '-' expression
   53           | expression '*' expression
   54           | expression '/' expression
   55           | expression '%' expression
   56           | '-' expression
   57           | expression '<' expression
   58           | expression '>' expression
   59           | expression LEQ expression
   60           | expression GEQ expression
   61           | expression ISEQ expression
   62           | expression NOEQ expression
   63           | expression LOGOR expression
   64           | expression LOGAND expression
   65           | expression '=' expression
   66           | NOT expression
   67           | INUMBER
   68           | FNUMBER
   69           | NAME
   70           | NAME '[' expression ']'
   71           | NAME '[' expression ',' expression ']'
   72           | NAME '(' expr_list ')'
   73           | TEXT
   74           | '(' expression ')'

   75 tab_list: tab_defn
   76         | tab_list tab_defn

   77 tab_defn: TAB NAME NAME ';'
   78         | TAB NAME NAME ';' COND_START expression ';'
   79         | error ';'

   80 ax_list: ax_defn
   81        | ax_list ax_defn

   82 ax_defn: AX NAME ';' ax_stmt_list
   83        | AX NAME ';' COND_START expression ';' ax_stmt_list
   84        | error ';'

   85 ax_stmt_list: ax_stmt
   86             | ax_stmt_list ax_stmt

   87 ax_stmt: TOT ';' TEXT ';'
   88        | TOT ';' TEXT ';' COND_START expression ';'
   89        | CNT ';' TEXT ';' COND_START expression ';'
   90        | TTL ';' TEXT ';'


Terminals, with rules where they appear

$end (0) 0
'!' (33)
'%' (37) 55
'&' (38) 28
'(' (40) 19 23 33 45 46 72 74
')' (41) 19 23 33 45 46 72 74
'*' (42) 53
'+' (43) 51
',' (44) 25 44 50 71
'-' (45) 52 56
'/' (47) 54
';' (59) 2 20 21 23 33 35 39 40 41 42 43 44 77 78 79 82 83 84 87 88
    89 90
'<' (60) 57
'=' (61) 2 65
'>' (62) 58
'[' (91) 21 27 43 44 70 71
']' (93) 21 27 43 44 70 71
'{' (123) 3 4 48
'}' (125) 3 4 47
error (256) 41 79 84
CONVERT (258)
TOT (259) 87 88
AX (260) 82 83
CNT (261) 89
TTL (262) 90
FOR (263) 33
TEXT (264) 42 43 44 73 87 88 89 90
NAME (265) 19 20 21 23 26 27 28 42 43 44 69 70 71 72 77 78 82 83
FNUMBER (266) 68
INUMBER (267) 2 21 27 43 44 67
CODELIST (268)
LISTA (269) 42 43 44
IF (270) 45 46
ELSE (271) 46
VOID_T (272) 9
U_INT8_T (273) 10
INT8_T (274) 11
U_INT16_T (275) 12
INT16_T (276) 13
U_INT32_T (277) 14
INT32_T (278) 15
FLOAT_T (279) 16
DOUBLE_T (280) 17
AXSTART (281) 3
TABSTART (282) 4
ED_START (283) 2
DATA_STRUCT (284) 2
REC_LEN (285) 2
ED_END (286) 2
TAB (287) 77 78
COND_START (288) 78 83 88 89
CONTINUE (289) 40
BREAK (290) 39
LOGOR (291) 63
LOGAND (292) 64
NOEQ (293) 62
ISEQ (294) 61
GEQ (295) 60
LEQ (296) 59
NOT (297) 66
UMINUS (298)
FUNC_CALL (299)


Nonterminals, with rules where they appear

$accept (63)
    on left: 0
prog (64)
    on left: 2 3 4, on right: 0
@1 (65)
    on left: 1, on right: 2
top_level_item_list (66)
    on left: 5 6, on right: 2 6
top_level_item (67)
    on left: 7 8, on right: 5 6
xtcc_type (68)
    on left: 9 10 11 12 13 14 15 16 17, on right: 19 20 21 23 26 27
    28
func_defn (69)
    on left: 19, on right: 8
@2 (70)
    on left: 18, on right: 19
decl (71)
    on left: 20 21 22, on right: 7 37
func_decl (72)
    on left: 23, on right: 22
decl_comma_list (73)
    on left: 24 25, on right: 19 23 25
var_decl (74)
    on left: 26 27 28 29, on right: 24 25
statement_list (75)
    on left: 30 31, on right: 31 47
statement (76)
    on left: 33 34 35 36 37 38 39 40 41, on right: 30 31 33 45 46
@3 (77)
    on left: 32, on right: 33
list_stmt (78)
    on left: 42 43 44, on right: 38
if_stmt (79)
    on left: 45 46, on right: 34
compound_stmt (80)
    on left: 47, on right: 19 36
open_curly (81)
    on left: 48, on right: 47
expr_list (82)
    on left: 49 50, on right: 50 72
expression (83)
    on left: 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68
    69 70 71 72 73 74, on right: 33 35 45 46 49 50 51 52 53 54 55 56
    57 58 59 60 61 62 63 64 65 66 70 71 74 78 83 88 89
tab_list (84)
    on left: 75 76, on right: 4 76
tab_defn (85)
    on left: 77 78 79, on right: 75 76
ax_list (86)
    on left: 80 81, on right: 3 81
ax_defn (87)
    on left: 82 83 84, on right: 80 81
ax_stmt_list (88)
    on left: 85 86, on right: 82 83 86
ax_stmt (89)
    on left: 87 88 89 90, on right: 85 86


state 0

    0 $accept: . prog $end

    AXSTART      shift, and go to state 1
    TABSTART     shift, and go to state 2
    DATA_STRUCT  shift, and go to state 3

    prog  go to state 4


state 1

    3 prog: AXSTART . '{' ax_list '}'

    '{'  shift, and go to state 5


state 2

    4 prog: TABSTART . '{' tab_list '}'

    '{'  shift, and go to state 6


state 3

    2 prog: DATA_STRUCT . ';' REC_LEN '=' INUMBER ';' @1 ED_START top_level_item_list ED_END

    ';'  shift, and go to state 7


state 4

    0 $accept: prog . $end

    $end  shift, and go to state 8


state 5

    3 prog: AXSTART '{' . ax_list '}'

    error  shift, and go to state 9
    AX     shift, and go to state 10

    ax_list  go to state 11
    ax_defn  go to state 12


state 6

    4 prog: TABSTART '{' . tab_list '}'

    error  shift, and go to state 13
    TAB    shift, and go to state 14

    tab_list  go to state 15
    tab_defn  go to state 16


state 7

    2 prog: DATA_STRUCT ';' . REC_LEN '=' INUMBER ';' @1 ED_START top_level_item_list ED_END

    REC_LEN  shift, and go to state 17


state 8

    0 $accept: prog $end .

    $default  accept


state 9

   84 ax_defn: error . ';'

    ';'  shift, and go to state 18


state 10

   82 ax_defn: AX . NAME ';' ax_stmt_list
   83        | AX . NAME ';' COND_START expression ';' ax_stmt_list

    NAME  shift, and go to state 19


state 11

    3 prog: AXSTART '{' ax_list . '}'
   81 ax_list: ax_list . ax_defn

    error  shift, and go to state 9
    AX     shift, and go to state 10
    '}'    shift, and go to state 20

    ax_defn  go to state 21


state 12

   80 ax_list: ax_defn .

    $default  reduce using rule 80 (ax_list)


state 13

   79 tab_defn: error . ';'

    ';'  shift, and go to state 22


state 14

   77 tab_defn: TAB . NAME NAME ';'
   78         | TAB . NAME NAME ';' COND_START expression ';'

    NAME  shift, and go to state 23


state 15

    4 prog: TABSTART '{' tab_list . '}'
   76 tab_list: tab_list . tab_defn

    error  shift, and go to state 13
    '}'    shift, and go to state 24
    TAB    shift, and go to state 14

    tab_defn  go to state 25


state 16

   75 tab_list: tab_defn .

    $default  reduce using rule 75 (tab_list)


state 17

    2 prog: DATA_STRUCT ';' REC_LEN . '=' INUMBER ';' @1 ED_START top_level_item_list ED_END

    '='  shift, and go to state 26


state 18

   84 ax_defn: error ';' .

    $default  reduce using rule 84 (ax_defn)


state 19

   82 ax_defn: AX NAME . ';' ax_stmt_list
   83        | AX NAME . ';' COND_START expression ';' ax_stmt_list

    ';'  shift, and go to state 27


state 20

    3 prog: AXSTART '{' ax_list '}' .

    $default  reduce using rule 3 (prog)


state 21

   81 ax_list: ax_list ax_defn .

    $default  reduce using rule 81 (ax_list)


state 22

   79 tab_defn: error ';' .

    $default  reduce using rule 79 (tab_defn)


state 23

   77 tab_defn: TAB NAME . NAME ';'
   78         | TAB NAME . NAME ';' COND_START expression ';'

    NAME  shift, and go to state 28


state 24

    4 prog: TABSTART '{' tab_list '}' .

    $default  reduce using rule 4 (prog)


state 25

   76 tab_list: tab_list tab_defn .

    $default  reduce using rule 76 (tab_list)


state 26

    2 prog: DATA_STRUCT ';' REC_LEN '=' . INUMBER ';' @1 ED_START top_level_item_list ED_END

    INUMBER  shift, and go to state 29


state 27

   82 ax_defn: AX NAME ';' . ax_stmt_list
   83        | AX NAME ';' . COND_START expression ';' ax_stmt_list

    TOT         shift, and go to state 30
    CNT         shift, and go to state 31
    TTL         shift, and go to state 32
    COND_START  shift, and go to state 33

    ax_stmt_list  go to state 34
    ax_stmt       go to state 35


state 28

   77 tab_defn: TAB NAME NAME . ';'
   78         | TAB NAME NAME . ';' COND_START expression ';'

    ';'  shift, and go to state 36


state 29

    2 prog: DATA_STRUCT ';' REC_LEN '=' INUMBER . ';' @1 ED_START top_level_item_list ED_END

    ';'  shift, and go to state 37


state 30

   87 ax_stmt: TOT . ';' TEXT ';'
   88        | TOT . ';' TEXT ';' COND_START expression ';'

    ';'  shift, and go to state 38


state 31

   89 ax_stmt: CNT . ';' TEXT ';' COND_START expression ';'

    ';'  shift, and go to state 39


state 32

   90 ax_stmt: TTL . ';' TEXT ';'

    ';'  shift, and go to state 40


state 33

   83 ax_defn: AX NAME ';' COND_START . expression ';' ax_stmt_list

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 48


state 34

   82 ax_defn: AX NAME ';' ax_stmt_list .
   86 ax_stmt_list: ax_stmt_list . ax_stmt

    TOT  shift, and go to state 30
    CNT  shift, and go to state 31
    TTL  shift, and go to state 32

    $default  reduce using rule 82 (ax_defn)

    ax_stmt  go to state 49


state 35

   85 ax_stmt_list: ax_stmt .

    $default  reduce using rule 85 (ax_stmt_list)


state 36

   77 tab_defn: TAB NAME NAME ';' .
   78         | TAB NAME NAME ';' . COND_START expression ';'

    COND_START  shift, and go to state 50

    $default  reduce using rule 77 (tab_defn)


state 37

    2 prog: DATA_STRUCT ';' REC_LEN '=' INUMBER ';' . @1 ED_START top_level_item_list ED_END

    $default  reduce using rule 1 (@1)

    @1  go to state 51


state 38

   87 ax_stmt: TOT ';' . TEXT ';'
   88        | TOT ';' . TEXT ';' COND_START expression ';'

    TEXT  shift, and go to state 52


state 39

   89 ax_stmt: CNT ';' . TEXT ';' COND_START expression ';'

    TEXT  shift, and go to state 53


state 40

   90 ax_stmt: TTL ';' . TEXT ';'

    TEXT  shift, and go to state 54


state 41

   73 expression: TEXT .

    $default  reduce using rule 73 (expression)


state 42

   69 expression: NAME .
   70           | NAME . '[' expression ']'
   71           | NAME . '[' expression ',' expression ']'
   72           | NAME . '(' expr_list ')'

    '['  shift, and go to state 55
    '('  shift, and go to state 56

    $default  reduce using rule 69 (expression)


state 43

   68 expression: FNUMBER .

    $default  reduce using rule 68 (expression)


state 44

   67 expression: INUMBER .

    $default  reduce using rule 67 (expression)


state 45

   74 expression: '(' . expression ')'

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 57


state 46

   56 expression: '-' . expression

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 58


state 47

   66 expression: NOT . expression

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 59


state 48

   51 expression: expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '*' expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   57           | expression . '<' expression
   58           | expression . '>' expression
   59           | expression . LEQ expression
   60           | expression . GEQ expression
   61           | expression . ISEQ expression
   62           | expression . NOEQ expression
   63           | expression . LOGOR expression
   64           | expression . LOGAND expression
   65           | expression . '=' expression
   83 ax_defn: AX NAME ';' COND_START expression . ';' ax_stmt_list

    ';'     shift, and go to state 60
    '='     shift, and go to state 61
    LOGOR   shift, and go to state 62
    LOGAND  shift, and go to state 63
    NOEQ    shift, and go to state 64
    ISEQ    shift, and go to state 65
    '<'     shift, and go to state 66
    '>'     shift, and go to state 67
    GEQ     shift, and go to state 68
    LEQ     shift, and go to state 69
    '-'     shift, and go to state 70
    '+'     shift, and go to state 71
    '*'     shift, and go to state 72
    '/'     shift, and go to state 73
    '%'     shift, and go to state 74


state 49

   86 ax_stmt_list: ax_stmt_list ax_stmt .

    $default  reduce using rule 86 (ax_stmt_list)


state 50

   78 tab_defn: TAB NAME NAME ';' COND_START . expression ';'

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 75


state 51

    2 prog: DATA_STRUCT ';' REC_LEN '=' INUMBER ';' @1 . ED_START top_level_item_list ED_END

    ED_START  shift, and go to state 76


state 52

   87 ax_stmt: TOT ';' TEXT . ';'
   88        | TOT ';' TEXT . ';' COND_START expression ';'

    ';'  shift, and go to state 77


state 53

   89 ax_stmt: CNT ';' TEXT . ';' COND_START expression ';'

    ';'  shift, and go to state 78


state 54

   90 ax_stmt: TTL ';' TEXT . ';'

    ';'  shift, and go to state 79


state 55

   70 expression: NAME '[' . expression ']'
   71           | NAME '[' . expression ',' expression ']'

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 80


state 56

   72 expression: NAME '(' . expr_list ')'

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expr_list   go to state 81
    expression  go to state 82


state 57

   51 expression: expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '*' expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   57           | expression . '<' expression
   58           | expression . '>' expression
   59           | expression . LEQ expression
   60           | expression . GEQ expression
   61           | expression . ISEQ expression
   62           | expression . NOEQ expression
   63           | expression . LOGOR expression
   64           | expression . LOGAND expression
   65           | expression . '=' expression
   74           | '(' expression . ')'

    ')'     shift, and go to state 83
    '='     shift, and go to state 61
    LOGOR   shift, and go to state 62
    LOGAND  shift, and go to state 63
    NOEQ    shift, and go to state 64
    ISEQ    shift, and go to state 65
    '<'     shift, and go to state 66
    '>'     shift, and go to state 67
    GEQ     shift, and go to state 68
    LEQ     shift, and go to state 69
    '-'     shift, and go to state 70
    '+'     shift, and go to state 71
    '*'     shift, and go to state 72
    '/'     shift, and go to state 73
    '%'     shift, and go to state 74


state 58

   51 expression: expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '*' expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   56           | '-' expression .
   57           | expression . '<' expression
   58           | expression . '>' expression
   59           | expression . LEQ expression
   60           | expression . GEQ expression
   61           | expression . ISEQ expression
   62           | expression . NOEQ expression
   63           | expression . LOGOR expression
   64           | expression . LOGAND expression
   65           | expression . '=' expression

    $default  reduce using rule 56 (expression)


state 59

   51 expression: expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '*' expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   57           | expression . '<' expression
   58           | expression . '>' expression
   59           | expression . LEQ expression
   60           | expression . GEQ expression
   61           | expression . ISEQ expression
   62           | expression . NOEQ expression
   63           | expression . LOGOR expression
   64           | expression . LOGAND expression
   65           | expression . '=' expression
   66           | NOT expression .

    $default  reduce using rule 66 (expression)


state 60

   83 ax_defn: AX NAME ';' COND_START expression ';' . ax_stmt_list

    TOT  shift, and go to state 30
    CNT  shift, and go to state 31
    TTL  shift, and go to state 32

    ax_stmt_list  go to state 84
    ax_stmt       go to state 35


state 61

   65 expression: expression '=' . expression

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 85


state 62

   63 expression: expression LOGOR . expression

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 86


state 63

   64 expression: expression LOGAND . expression

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 87


state 64

   62 expression: expression NOEQ . expression

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 88


state 65

   61 expression: expression ISEQ . expression

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 89


state 66

   57 expression: expression '<' . expression

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 90


state 67

   58 expression: expression '>' . expression

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 91


state 68

   60 expression: expression GEQ . expression

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 92


state 69

   59 expression: expression LEQ . expression

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 93


state 70

   52 expression: expression '-' . expression

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 94


state 71

   51 expression: expression '+' . expression

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 95


state 72

   53 expression: expression '*' . expression

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 96


state 73

   54 expression: expression '/' . expression

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 97


state 74

   55 expression: expression '%' . expression

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 98


state 75

   51 expression: expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '*' expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   57           | expression . '<' expression
   58           | expression . '>' expression
   59           | expression . LEQ expression
   60           | expression . GEQ expression
   61           | expression . ISEQ expression
   62           | expression . NOEQ expression
   63           | expression . LOGOR expression
   64           | expression . LOGAND expression
   65           | expression . '=' expression
   78 tab_defn: TAB NAME NAME ';' COND_START expression . ';'

    ';'     shift, and go to state 99
    '='     shift, and go to state 61
    LOGOR   shift, and go to state 62
    LOGAND  shift, and go to state 63
    NOEQ    shift, and go to state 64
    ISEQ    shift, and go to state 65
    '<'     shift, and go to state 66
    '>'     shift, and go to state 67
    GEQ     shift, and go to state 68
    LEQ     shift, and go to state 69
    '-'     shift, and go to state 70
    '+'     shift, and go to state 71
    '*'     shift, and go to state 72
    '/'     shift, and go to state 73
    '%'     shift, and go to state 74


state 76

    2 prog: DATA_STRUCT ';' REC_LEN '=' INUMBER ';' @1 ED_START . top_level_item_list ED_END

    VOID_T     shift, and go to state 100
    U_INT8_T   shift, and go to state 101
    INT8_T     shift, and go to state 102
    U_INT16_T  shift, and go to state 103
    INT16_T    shift, and go to state 104
    U_INT32_T  shift, and go to state 105
    INT32_T    shift, and go to state 106
    FLOAT_T    shift, and go to state 107
    DOUBLE_T   shift, and go to state 108

    top_level_item_list  go to state 109
    top_level_item       go to state 110
    xtcc_type            go to state 111
    func_defn            go to state 112
    decl                 go to state 113
    func_decl            go to state 114


state 77

   87 ax_stmt: TOT ';' TEXT ';' .
   88        | TOT ';' TEXT ';' . COND_START expression ';'

    COND_START  shift, and go to state 115

    $default  reduce using rule 87 (ax_stmt)


state 78

   89 ax_stmt: CNT ';' TEXT ';' . COND_START expression ';'

    COND_START  shift, and go to state 116


state 79

   90 ax_stmt: TTL ';' TEXT ';' .

    $default  reduce using rule 90 (ax_stmt)


state 80

   51 expression: expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '*' expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   57           | expression . '<' expression
   58           | expression . '>' expression
   59           | expression . LEQ expression
   60           | expression . GEQ expression
   61           | expression . ISEQ expression
   62           | expression . NOEQ expression
   63           | expression . LOGOR expression
   64           | expression . LOGAND expression
   65           | expression . '=' expression
   70           | NAME '[' expression . ']'
   71           | NAME '[' expression . ',' expression ']'

    ']'     shift, and go to state 117
    '='     shift, and go to state 61
    ','     shift, and go to state 118
    LOGOR   shift, and go to state 62
    LOGAND  shift, and go to state 63
    NOEQ    shift, and go to state 64
    ISEQ    shift, and go to state 65
    '<'     shift, and go to state 66
    '>'     shift, and go to state 67
    GEQ     shift, and go to state 68
    LEQ     shift, and go to state 69
    '-'     shift, and go to state 70
    '+'     shift, and go to state 71
    '*'     shift, and go to state 72
    '/'     shift, and go to state 73
    '%'     shift, and go to state 74


state 81

   50 expr_list: expr_list . ',' expression
   72 expression: NAME '(' expr_list . ')'

    ')'  shift, and go to state 119
    ','  shift, and go to state 120


state 82

   49 expr_list: expression .
   51 expression: expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '*' expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   57           | expression . '<' expression
   58           | expression . '>' expression
   59           | expression . LEQ expression
   60           | expression . GEQ expression
   61           | expression . ISEQ expression
   62           | expression . NOEQ expression
   63           | expression . LOGOR expression
   64           | expression . LOGAND expression
   65           | expression . '=' expression

    '='     shift, and go to state 61
    LOGOR   shift, and go to state 62
    LOGAND  shift, and go to state 63
    NOEQ    shift, and go to state 64
    ISEQ    shift, and go to state 65
    '<'     shift, and go to state 66
    '>'     shift, and go to state 67
    GEQ     shift, and go to state 68
    LEQ     shift, and go to state 69
    '-'     shift, and go to state 70
    '+'     shift, and go to state 71
    '*'     shift, and go to state 72
    '/'     shift, and go to state 73
    '%'     shift, and go to state 74

    $default  reduce using rule 49 (expr_list)


state 83

   74 expression: '(' expression ')' .

    $default  reduce using rule 74 (expression)


state 84

   83 ax_defn: AX NAME ';' COND_START expression ';' ax_stmt_list .
   86 ax_stmt_list: ax_stmt_list . ax_stmt

    TOT  shift, and go to state 30
    CNT  shift, and go to state 31
    TTL  shift, and go to state 32

    $default  reduce using rule 83 (ax_defn)

    ax_stmt  go to state 49


state 85

   51 expression: expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '*' expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   57           | expression . '<' expression
   58           | expression . '>' expression
   59           | expression . LEQ expression
   60           | expression . GEQ expression
   61           | expression . ISEQ expression
   62           | expression . NOEQ expression
   63           | expression . LOGOR expression
   64           | expression . LOGAND expression
   65           | expression . '=' expression
   65           | expression '=' expression .

    '='     shift, and go to state 61
    LOGOR   shift, and go to state 62
    LOGAND  shift, and go to state 63
    NOEQ    shift, and go to state 64
    ISEQ    shift, and go to state 65
    '<'     shift, and go to state 66
    '>'     shift, and go to state 67
    GEQ     shift, and go to state 68
    LEQ     shift, and go to state 69
    '-'     shift, and go to state 70
    '+'     shift, and go to state 71
    '*'     shift, and go to state 72
    '/'     shift, and go to state 73
    '%'     shift, and go to state 74

    $default  reduce using rule 65 (expression)


state 86

   51 expression: expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '*' expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   57           | expression . '<' expression
   58           | expression . '>' expression
   59           | expression . LEQ expression
   60           | expression . GEQ expression
   61           | expression . ISEQ expression
   62           | expression . NOEQ expression
   63           | expression . LOGOR expression
   63           | expression LOGOR expression .
   64           | expression . LOGAND expression
   65           | expression . '=' expression

    LOGAND  shift, and go to state 63
    NOEQ    shift, and go to state 64
    ISEQ    shift, and go to state 65
    '<'     shift, and go to state 66
    '>'     shift, and go to state 67
    GEQ     shift, and go to state 68
    LEQ     shift, and go to state 69
    '-'     shift, and go to state 70
    '+'     shift, and go to state 71
    '*'     shift, and go to state 72
    '/'     shift, and go to state 73
    '%'     shift, and go to state 74

    $default  reduce using rule 63 (expression)


state 87

   51 expression: expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '*' expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   57           | expression . '<' expression
   58           | expression . '>' expression
   59           | expression . LEQ expression
   60           | expression . GEQ expression
   61           | expression . ISEQ expression
   62           | expression . NOEQ expression
   63           | expression . LOGOR expression
   64           | expression . LOGAND expression
   64           | expression LOGAND expression .
   65           | expression . '=' expression

    NOEQ  shift, and go to state 64
    ISEQ  shift, and go to state 65
    '<'   shift, and go to state 66
    '>'   shift, and go to state 67
    GEQ   shift, and go to state 68
    LEQ   shift, and go to state 69
    '-'   shift, and go to state 70
    '+'   shift, and go to state 71
    '*'   shift, and go to state 72
    '/'   shift, and go to state 73
    '%'   shift, and go to state 74

    $default  reduce using rule 64 (expression)


state 88

   51 expression: expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '*' expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   57           | expression . '<' expression
   58           | expression . '>' expression
   59           | expression . LEQ expression
   60           | expression . GEQ expression
   61           | expression . ISEQ expression
   62           | expression . NOEQ expression
   62           | expression NOEQ expression .
   63           | expression . LOGOR expression
   64           | expression . LOGAND expression
   65           | expression . '=' expression

    '<'  shift, and go to state 66
    '>'  shift, and go to state 67
    GEQ  shift, and go to state 68
    LEQ  shift, and go to state 69
    '-'  shift, and go to state 70
    '+'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '%'  shift, and go to state 74

    $default  reduce using rule 62 (expression)


state 89

   51 expression: expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '*' expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   57           | expression . '<' expression
   58           | expression . '>' expression
   59           | expression . LEQ expression
   60           | expression . GEQ expression
   61           | expression . ISEQ expression
   61           | expression ISEQ expression .
   62           | expression . NOEQ expression
   63           | expression . LOGOR expression
   64           | expression . LOGAND expression
   65           | expression . '=' expression

    '<'  shift, and go to state 66
    '>'  shift, and go to state 67
    GEQ  shift, and go to state 68
    LEQ  shift, and go to state 69
    '-'  shift, and go to state 70
    '+'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '%'  shift, and go to state 74

    $default  reduce using rule 61 (expression)


state 90

   51 expression: expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '*' expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   57           | expression . '<' expression
   57           | expression '<' expression .
   58           | expression . '>' expression
   59           | expression . LEQ expression
   60           | expression . GEQ expression
   61           | expression . ISEQ expression
   62           | expression . NOEQ expression
   63           | expression . LOGOR expression
   64           | expression . LOGAND expression
   65           | expression . '=' expression

    '-'  shift, and go to state 70
    '+'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '%'  shift, and go to state 74

    $default  reduce using rule 57 (expression)


state 91

   51 expression: expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '*' expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   57           | expression . '<' expression
   58           | expression . '>' expression
   58           | expression '>' expression .
   59           | expression . LEQ expression
   60           | expression . GEQ expression
   61           | expression . ISEQ expression
   62           | expression . NOEQ expression
   63           | expression . LOGOR expression
   64           | expression . LOGAND expression
   65           | expression . '=' expression

    '-'  shift, and go to state 70
    '+'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '%'  shift, and go to state 74

    $default  reduce using rule 58 (expression)


state 92

   51 expression: expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '*' expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   57           | expression . '<' expression
   58           | expression . '>' expression
   59           | expression . LEQ expression
   60           | expression . GEQ expression
   60           | expression GEQ expression .
   61           | expression . ISEQ expression
   62           | expression . NOEQ expression
   63           | expression . LOGOR expression
   64           | expression . LOGAND expression
   65           | expression . '=' expression

    '-'  shift, and go to state 70
    '+'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '%'  shift, and go to state 74

    $default  reduce using rule 60 (expression)


state 93

   51 expression: expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '*' expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   57           | expression . '<' expression
   58           | expression . '>' expression
   59           | expression . LEQ expression
   59           | expression LEQ expression .
   60           | expression . GEQ expression
   61           | expression . ISEQ expression
   62           | expression . NOEQ expression
   63           | expression . LOGOR expression
   64           | expression . LOGAND expression
   65           | expression . '=' expression

    '-'  shift, and go to state 70
    '+'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '%'  shift, and go to state 74

    $default  reduce using rule 59 (expression)


state 94

   51 expression: expression . '+' expression
   52           | expression . '-' expression
   52           | expression '-' expression .
   53           | expression . '*' expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   57           | expression . '<' expression
   58           | expression . '>' expression
   59           | expression . LEQ expression
   60           | expression . GEQ expression
   61           | expression . ISEQ expression
   62           | expression . NOEQ expression
   63           | expression . LOGOR expression
   64           | expression . LOGAND expression
   65           | expression . '=' expression

    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '%'  shift, and go to state 74

    $default  reduce using rule 52 (expression)


state 95

   51 expression: expression . '+' expression
   51           | expression '+' expression .
   52           | expression . '-' expression
   53           | expression . '*' expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   57           | expression . '<' expression
   58           | expression . '>' expression
   59           | expression . LEQ expression
   60           | expression . GEQ expression
   61           | expression . ISEQ expression
   62           | expression . NOEQ expression
   63           | expression . LOGOR expression
   64           | expression . LOGAND expression
   65           | expression . '=' expression

    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '%'  shift, and go to state 74

    $default  reduce using rule 51 (expression)


state 96

   51 expression: expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '*' expression
   53           | expression '*' expression .
   54           | expression . '/' expression
   55           | expression . '%' expression
   57           | expression . '<' expression
   58           | expression . '>' expression
   59           | expression . LEQ expression
   60           | expression . GEQ expression
   61           | expression . ISEQ expression
   62           | expression . NOEQ expression
   63           | expression . LOGOR expression
   64           | expression . LOGAND expression
   65           | expression . '=' expression

    $default  reduce using rule 53 (expression)


state 97

   51 expression: expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '*' expression
   54           | expression . '/' expression
   54           | expression '/' expression .
   55           | expression . '%' expression
   57           | expression . '<' expression
   58           | expression . '>' expression
   59           | expression . LEQ expression
   60           | expression . GEQ expression
   61           | expression . ISEQ expression
   62           | expression . NOEQ expression
   63           | expression . LOGOR expression
   64           | expression . LOGAND expression
   65           | expression . '=' expression

    $default  reduce using rule 54 (expression)


state 98

   51 expression: expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '*' expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   55           | expression '%' expression .
   57           | expression . '<' expression
   58           | expression . '>' expression
   59           | expression . LEQ expression
   60           | expression . GEQ expression
   61           | expression . ISEQ expression
   62           | expression . NOEQ expression
   63           | expression . LOGOR expression
   64           | expression . LOGAND expression
   65           | expression . '=' expression

    $default  reduce using rule 55 (expression)


state 99

   78 tab_defn: TAB NAME NAME ';' COND_START expression ';' .

    $default  reduce using rule 78 (tab_defn)


state 100

    9 xtcc_type: VOID_T .

    $default  reduce using rule 9 (xtcc_type)


state 101

   10 xtcc_type: U_INT8_T .

    $default  reduce using rule 10 (xtcc_type)


state 102

   11 xtcc_type: INT8_T .

    $default  reduce using rule 11 (xtcc_type)


state 103

   12 xtcc_type: U_INT16_T .

    $default  reduce using rule 12 (xtcc_type)


state 104

   13 xtcc_type: INT16_T .

    $default  reduce using rule 13 (xtcc_type)


state 105

   14 xtcc_type: U_INT32_T .

    $default  reduce using rule 14 (xtcc_type)


state 106

   15 xtcc_type: INT32_T .

    $default  reduce using rule 15 (xtcc_type)


state 107

   16 xtcc_type: FLOAT_T .

    $default  reduce using rule 16 (xtcc_type)


state 108

   17 xtcc_type: DOUBLE_T .

    $default  reduce using rule 17 (xtcc_type)


state 109

    2 prog: DATA_STRUCT ';' REC_LEN '=' INUMBER ';' @1 ED_START top_level_item_list . ED_END
    6 top_level_item_list: top_level_item_list . top_level_item

    VOID_T     shift, and go to state 100
    U_INT8_T   shift, and go to state 101
    INT8_T     shift, and go to state 102
    U_INT16_T  shift, and go to state 103
    INT16_T    shift, and go to state 104
    U_INT32_T  shift, and go to state 105
    INT32_T    shift, and go to state 106
    FLOAT_T    shift, and go to state 107
    DOUBLE_T   shift, and go to state 108
    ED_END     shift, and go to state 121

    top_level_item  go to state 122
    xtcc_type       go to state 111
    func_defn       go to state 112
    decl            go to state 113
    func_decl       go to state 114


state 110

    5 top_level_item_list: top_level_item .

    $default  reduce using rule 5 (top_level_item_list)


state 111

   19 func_defn: xtcc_type . NAME '(' decl_comma_list ')' @2 compound_stmt
   20 decl: xtcc_type . NAME ';'
   21     | xtcc_type . NAME '[' INUMBER ']' ';'
   23 func_decl: xtcc_type . NAME '(' decl_comma_list ')' ';'

    NAME  shift, and go to state 123


state 112

    8 top_level_item: func_defn .

    $default  reduce using rule 8 (top_level_item)


state 113

    7 top_level_item: decl .

    $default  reduce using rule 7 (top_level_item)


state 114

   22 decl: func_decl .

    $default  reduce using rule 22 (decl)


state 115

   88 ax_stmt: TOT ';' TEXT ';' COND_START . expression ';'

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 124


state 116

   89 ax_stmt: CNT ';' TEXT ';' COND_START . expression ';'

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 125


state 117

   70 expression: NAME '[' expression ']' .

    $default  reduce using rule 70 (expression)


state 118

   71 expression: NAME '[' expression ',' . expression ']'

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 126


state 119

   72 expression: NAME '(' expr_list ')' .

    $default  reduce using rule 72 (expression)


state 120

   50 expr_list: expr_list ',' . expression

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 127


state 121

    2 prog: DATA_STRUCT ';' REC_LEN '=' INUMBER ';' @1 ED_START top_level_item_list ED_END .

    $default  reduce using rule 2 (prog)


state 122

    6 top_level_item_list: top_level_item_list top_level_item .

    $default  reduce using rule 6 (top_level_item_list)


state 123

   19 func_defn: xtcc_type NAME . '(' decl_comma_list ')' @2 compound_stmt
   20 decl: xtcc_type NAME . ';'
   21     | xtcc_type NAME . '[' INUMBER ']' ';'
   23 func_decl: xtcc_type NAME . '(' decl_comma_list ')' ';'

    ';'  shift, and go to state 128
    '['  shift, and go to state 129
    '('  shift, and go to state 130


state 124

   51 expression: expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '*' expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   57           | expression . '<' expression
   58           | expression . '>' expression
   59           | expression . LEQ expression
   60           | expression . GEQ expression
   61           | expression . ISEQ expression
   62           | expression . NOEQ expression
   63           | expression . LOGOR expression
   64           | expression . LOGAND expression
   65           | expression . '=' expression
   88 ax_stmt: TOT ';' TEXT ';' COND_START expression . ';'

    ';'     shift, and go to state 131
    '='     shift, and go to state 61
    LOGOR   shift, and go to state 62
    LOGAND  shift, and go to state 63
    NOEQ    shift, and go to state 64
    ISEQ    shift, and go to state 65
    '<'     shift, and go to state 66
    '>'     shift, and go to state 67
    GEQ     shift, and go to state 68
    LEQ     shift, and go to state 69
    '-'     shift, and go to state 70
    '+'     shift, and go to state 71
    '*'     shift, and go to state 72
    '/'     shift, and go to state 73
    '%'     shift, and go to state 74


state 125

   51 expression: expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '*' expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   57           | expression . '<' expression
   58           | expression . '>' expression
   59           | expression . LEQ expression
   60           | expression . GEQ expression
   61           | expression . ISEQ expression
   62           | expression . NOEQ expression
   63           | expression . LOGOR expression
   64           | expression . LOGAND expression
   65           | expression . '=' expression
   89 ax_stmt: CNT ';' TEXT ';' COND_START expression . ';'

    ';'     shift, and go to state 132
    '='     shift, and go to state 61
    LOGOR   shift, and go to state 62
    LOGAND  shift, and go to state 63
    NOEQ    shift, and go to state 64
    ISEQ    shift, and go to state 65
    '<'     shift, and go to state 66
    '>'     shift, and go to state 67
    GEQ     shift, and go to state 68
    LEQ     shift, and go to state 69
    '-'     shift, and go to state 70
    '+'     shift, and go to state 71
    '*'     shift, and go to state 72
    '/'     shift, and go to state 73
    '%'     shift, and go to state 74


state 126

   51 expression: expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '*' expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   57           | expression . '<' expression
   58           | expression . '>' expression
   59           | expression . LEQ expression
   60           | expression . GEQ expression
   61           | expression . ISEQ expression
   62           | expression . NOEQ expression
   63           | expression . LOGOR expression
   64           | expression . LOGAND expression
   65           | expression . '=' expression
   71           | NAME '[' expression ',' expression . ']'

    ']'     shift, and go to state 133
    '='     shift, and go to state 61
    LOGOR   shift, and go to state 62
    LOGAND  shift, and go to state 63
    NOEQ    shift, and go to state 64
    ISEQ    shift, and go to state 65
    '<'     shift, and go to state 66
    '>'     shift, and go to state 67
    GEQ     shift, and go to state 68
    LEQ     shift, and go to state 69
    '-'     shift, and go to state 70
    '+'     shift, and go to state 71
    '*'     shift, and go to state 72
    '/'     shift, and go to state 73
    '%'     shift, and go to state 74


state 127

   50 expr_list: expr_list ',' expression .
   51 expression: expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '*' expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   57           | expression . '<' expression
   58           | expression . '>' expression
   59           | expression . LEQ expression
   60           | expression . GEQ expression
   61           | expression . ISEQ expression
   62           | expression . NOEQ expression
   63           | expression . LOGOR expression
   64           | expression . LOGAND expression
   65           | expression . '=' expression

    '='     shift, and go to state 61
    LOGOR   shift, and go to state 62
    LOGAND  shift, and go to state 63
    NOEQ    shift, and go to state 64
    ISEQ    shift, and go to state 65
    '<'     shift, and go to state 66
    '>'     shift, and go to state 67
    GEQ     shift, and go to state 68
    LEQ     shift, and go to state 69
    '-'     shift, and go to state 70
    '+'     shift, and go to state 71
    '*'     shift, and go to state 72
    '/'     shift, and go to state 73
    '%'     shift, and go to state 74

    $default  reduce using rule 50 (expr_list)


state 128

   20 decl: xtcc_type NAME ';' .

    $default  reduce using rule 20 (decl)


state 129

   21 decl: xtcc_type NAME '[' . INUMBER ']' ';'

    INUMBER  shift, and go to state 134


state 130

   19 func_defn: xtcc_type NAME '(' . decl_comma_list ')' @2 compound_stmt
   23 func_decl: xtcc_type NAME '(' . decl_comma_list ')' ';'

    VOID_T     shift, and go to state 100
    U_INT8_T   shift, and go to state 101
    INT8_T     shift, and go to state 102
    U_INT16_T  shift, and go to state 103
    INT16_T    shift, and go to state 104
    U_INT32_T  shift, and go to state 105
    INT32_T    shift, and go to state 106
    FLOAT_T    shift, and go to state 107
    DOUBLE_T   shift, and go to state 108

    $default  reduce using rule 29 (var_decl)

    xtcc_type        go to state 135
    decl_comma_list  go to state 136
    var_decl         go to state 137


state 131

   88 ax_stmt: TOT ';' TEXT ';' COND_START expression ';' .

    $default  reduce using rule 88 (ax_stmt)


state 132

   89 ax_stmt: CNT ';' TEXT ';' COND_START expression ';' .

    $default  reduce using rule 89 (ax_stmt)


state 133

   71 expression: NAME '[' expression ',' expression ']' .

    $default  reduce using rule 71 (expression)


state 134

   21 decl: xtcc_type NAME '[' INUMBER . ']' ';'

    ']'  shift, and go to state 138


state 135

   26 var_decl: xtcc_type . NAME
   27         | xtcc_type . NAME '[' INUMBER ']'
   28         | xtcc_type . '&' NAME

    NAME  shift, and go to state 139
    '&'   shift, and go to state 140


state 136

   19 func_defn: xtcc_type NAME '(' decl_comma_list . ')' @2 compound_stmt
   23 func_decl: xtcc_type NAME '(' decl_comma_list . ')' ';'
   25 decl_comma_list: decl_comma_list . ',' var_decl

    ')'  shift, and go to state 141
    ','  shift, and go to state 142


state 137

   24 decl_comma_list: var_decl .

    $default  reduce using rule 24 (decl_comma_list)


state 138

   21 decl: xtcc_type NAME '[' INUMBER ']' . ';'

    ';'  shift, and go to state 143


state 139

   26 var_decl: xtcc_type NAME .
   27         | xtcc_type NAME . '[' INUMBER ']'

    '['  shift, and go to state 144

    $default  reduce using rule 26 (var_decl)


state 140

   28 var_decl: xtcc_type '&' . NAME

    NAME  shift, and go to state 145


state 141

   19 func_defn: xtcc_type NAME '(' decl_comma_list ')' . @2 compound_stmt
   23 func_decl: xtcc_type NAME '(' decl_comma_list ')' . ';'

    ';'  shift, and go to state 146

    $default  reduce using rule 18 (@2)

    @2  go to state 147


state 142

   25 decl_comma_list: decl_comma_list ',' . var_decl

    VOID_T     shift, and go to state 100
    U_INT8_T   shift, and go to state 101
    INT8_T     shift, and go to state 102
    U_INT16_T  shift, and go to state 103
    INT16_T    shift, and go to state 104
    U_INT32_T  shift, and go to state 105
    INT32_T    shift, and go to state 106
    FLOAT_T    shift, and go to state 107
    DOUBLE_T   shift, and go to state 108

    $default  reduce using rule 29 (var_decl)

    xtcc_type  go to state 135
    var_decl   go to state 148


state 143

   21 decl: xtcc_type NAME '[' INUMBER ']' ';' .

    $default  reduce using rule 21 (decl)


state 144

   27 var_decl: xtcc_type NAME '[' . INUMBER ']'

    INUMBER  shift, and go to state 149


state 145

   28 var_decl: xtcc_type '&' NAME .

    $default  reduce using rule 28 (var_decl)


state 146

   23 func_decl: xtcc_type NAME '(' decl_comma_list ')' ';' .

    $default  reduce using rule 23 (func_decl)


state 147

   19 func_defn: xtcc_type NAME '(' decl_comma_list ')' @2 . compound_stmt

    '{'  shift, and go to state 150

    compound_stmt  go to state 151
    open_curly     go to state 152


state 148

   25 decl_comma_list: decl_comma_list ',' var_decl .

    $default  reduce using rule 25 (decl_comma_list)


state 149

   27 var_decl: xtcc_type NAME '[' INUMBER . ']'

    ']'  shift, and go to state 153


state 150

   48 open_curly: '{' .

    $default  reduce using rule 48 (open_curly)


state 151

   19 func_defn: xtcc_type NAME '(' decl_comma_list ')' @2 compound_stmt .

    $default  reduce using rule 19 (func_defn)


state 152

   47 compound_stmt: open_curly . statement_list '}'

    error      shift, and go to state 154
    '{'        shift, and go to state 150
    FOR        shift, and go to state 155
    TEXT       shift, and go to state 41
    NAME       shift, and go to state 42
    FNUMBER    shift, and go to state 43
    INUMBER    shift, and go to state 44
    LISTA      shift, and go to state 156
    IF         shift, and go to state 157
    '('        shift, and go to state 45
    VOID_T     shift, and go to state 100
    U_INT8_T   shift, and go to state 101
    INT8_T     shift, and go to state 102
    U_INT16_T  shift, and go to state 103
    INT16_T    shift, and go to state 104
    U_INT32_T  shift, and go to state 105
    INT32_T    shift, and go to state 106
    FLOAT_T    shift, and go to state 107
    DOUBLE_T   shift, and go to state 108
    CONTINUE   shift, and go to state 158
    BREAK      shift, and go to state 159
    '-'        shift, and go to state 46
    NOT        shift, and go to state 47

    xtcc_type       go to state 160
    decl            go to state 161
    func_decl       go to state 114
    statement_list  go to state 162
    statement       go to state 163
    list_stmt       go to state 164
    if_stmt         go to state 165
    compound_stmt   go to state 166
    open_curly      go to state 152
    expression      go to state 167


state 153

   27 var_decl: xtcc_type NAME '[' INUMBER ']' .

    $default  reduce using rule 27 (var_decl)


state 154

   41 statement: error . ';'

    ';'  shift, and go to state 168


state 155

   33 statement: FOR . '(' expression ';' expression ';' expression ')' @3 statement

    '('  shift, and go to state 169


state 156

   42 list_stmt: LISTA . NAME TEXT ';'
   43          | LISTA . NAME '[' INUMBER ']' TEXT ';'
   44          | LISTA . NAME '[' INUMBER ',' INUMBER ']' TEXT ';'

    NAME  shift, and go to state 170


state 157

   45 if_stmt: IF . '(' expression ')' statement
   46        | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 171


state 158

   40 statement: CONTINUE . ';'

    ';'  shift, and go to state 172


state 159

   39 statement: BREAK . ';'

    ';'  shift, and go to state 173


state 160

   20 decl: xtcc_type . NAME ';'
   21     | xtcc_type . NAME '[' INUMBER ']' ';'
   23 func_decl: xtcc_type . NAME '(' decl_comma_list ')' ';'

    NAME  shift, and go to state 174


state 161

   37 statement: decl .

    $default  reduce using rule 37 (statement)


state 162

   31 statement_list: statement_list . statement
   47 compound_stmt: open_curly statement_list . '}'

    error      shift, and go to state 154
    '{'        shift, and go to state 150
    '}'        shift, and go to state 175
    FOR        shift, and go to state 155
    TEXT       shift, and go to state 41
    NAME       shift, and go to state 42
    FNUMBER    shift, and go to state 43
    INUMBER    shift, and go to state 44
    LISTA      shift, and go to state 156
    IF         shift, and go to state 157
    '('        shift, and go to state 45
    VOID_T     shift, and go to state 100
    U_INT8_T   shift, and go to state 101
    INT8_T     shift, and go to state 102
    U_INT16_T  shift, and go to state 103
    INT16_T    shift, and go to state 104
    U_INT32_T  shift, and go to state 105
    INT32_T    shift, and go to state 106
    FLOAT_T    shift, and go to state 107
    DOUBLE_T   shift, and go to state 108
    CONTINUE   shift, and go to state 158
    BREAK      shift, and go to state 159
    '-'        shift, and go to state 46
    NOT        shift, and go to state 47

    xtcc_type      go to state 160
    decl           go to state 161
    func_decl      go to state 114
    statement      go to state 176
    list_stmt      go to state 164
    if_stmt        go to state 165
    compound_stmt  go to state 166
    open_curly     go to state 152
    expression     go to state 167


state 163

   30 statement_list: statement .

    $default  reduce using rule 30 (statement_list)


state 164

   38 statement: list_stmt .

    $default  reduce using rule 38 (statement)


state 165

   34 statement: if_stmt .

    $default  reduce using rule 34 (statement)


state 166

   36 statement: compound_stmt .

    $default  reduce using rule 36 (statement)


state 167

   35 statement: expression . ';'
   51 expression: expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '*' expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   57           | expression . '<' expression
   58           | expression . '>' expression
   59           | expression . LEQ expression
   60           | expression . GEQ expression
   61           | expression . ISEQ expression
   62           | expression . NOEQ expression
   63           | expression . LOGOR expression
   64           | expression . LOGAND expression
   65           | expression . '=' expression

    ';'     shift, and go to state 177
    '='     shift, and go to state 61
    LOGOR   shift, and go to state 62
    LOGAND  shift, and go to state 63
    NOEQ    shift, and go to state 64
    ISEQ    shift, and go to state 65
    '<'     shift, and go to state 66
    '>'     shift, and go to state 67
    GEQ     shift, and go to state 68
    LEQ     shift, and go to state 69
    '-'     shift, and go to state 70
    '+'     shift, and go to state 71
    '*'     shift, and go to state 72
    '/'     shift, and go to state 73
    '%'     shift, and go to state 74


state 168

   41 statement: error ';' .

    $default  reduce using rule 41 (statement)


state 169

   33 statement: FOR '(' . expression ';' expression ';' expression ')' @3 statement

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 178


state 170

   42 list_stmt: LISTA NAME . TEXT ';'
   43          | LISTA NAME . '[' INUMBER ']' TEXT ';'
   44          | LISTA NAME . '[' INUMBER ',' INUMBER ']' TEXT ';'

    TEXT  shift, and go to state 179
    '['   shift, and go to state 180


state 171

   45 if_stmt: IF '(' . expression ')' statement
   46        | IF '(' . expression ')' statement ELSE statement

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 181


state 172

   40 statement: CONTINUE ';' .

    $default  reduce using rule 40 (statement)


state 173

   39 statement: BREAK ';' .

    $default  reduce using rule 39 (statement)


state 174

   20 decl: xtcc_type NAME . ';'
   21     | xtcc_type NAME . '[' INUMBER ']' ';'
   23 func_decl: xtcc_type NAME . '(' decl_comma_list ')' ';'

    ';'  shift, and go to state 128
    '['  shift, and go to state 129
    '('  shift, and go to state 182


state 175

   47 compound_stmt: open_curly statement_list '}' .

    $default  reduce using rule 47 (compound_stmt)


state 176

   31 statement_list: statement_list statement .

    $default  reduce using rule 31 (statement_list)


state 177

   35 statement: expression ';' .

    $default  reduce using rule 35 (statement)


state 178

   33 statement: FOR '(' expression . ';' expression ';' expression ')' @3 statement
   51 expression: expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '*' expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   57           | expression . '<' expression
   58           | expression . '>' expression
   59           | expression . LEQ expression
   60           | expression . GEQ expression
   61           | expression . ISEQ expression
   62           | expression . NOEQ expression
   63           | expression . LOGOR expression
   64           | expression . LOGAND expression
   65           | expression . '=' expression

    ';'     shift, and go to state 183
    '='     shift, and go to state 61
    LOGOR   shift, and go to state 62
    LOGAND  shift, and go to state 63
    NOEQ    shift, and go to state 64
    ISEQ    shift, and go to state 65
    '<'     shift, and go to state 66
    '>'     shift, and go to state 67
    GEQ     shift, and go to state 68
    LEQ     shift, and go to state 69
    '-'     shift, and go to state 70
    '+'     shift, and go to state 71
    '*'     shift, and go to state 72
    '/'     shift, and go to state 73
    '%'     shift, and go to state 74


state 179

   42 list_stmt: LISTA NAME TEXT . ';'

    ';'  shift, and go to state 184


state 180

   43 list_stmt: LISTA NAME '[' . INUMBER ']' TEXT ';'
   44          | LISTA NAME '[' . INUMBER ',' INUMBER ']' TEXT ';'

    INUMBER  shift, and go to state 185


state 181

   45 if_stmt: IF '(' expression . ')' statement
   46        | IF '(' expression . ')' statement ELSE statement
   51 expression: expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '*' expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   57           | expression . '<' expression
   58           | expression . '>' expression
   59           | expression . LEQ expression
   60           | expression . GEQ expression
   61           | expression . ISEQ expression
   62           | expression . NOEQ expression
   63           | expression . LOGOR expression
   64           | expression . LOGAND expression
   65           | expression . '=' expression

    ')'     shift, and go to state 186
    '='     shift, and go to state 61
    LOGOR   shift, and go to state 62
    LOGAND  shift, and go to state 63
    NOEQ    shift, and go to state 64
    ISEQ    shift, and go to state 65
    '<'     shift, and go to state 66
    '>'     shift, and go to state 67
    GEQ     shift, and go to state 68
    LEQ     shift, and go to state 69
    '-'     shift, and go to state 70
    '+'     shift, and go to state 71
    '*'     shift, and go to state 72
    '/'     shift, and go to state 73
    '%'     shift, and go to state 74


state 182

   23 func_decl: xtcc_type NAME '(' . decl_comma_list ')' ';'

    VOID_T     shift, and go to state 100
    U_INT8_T   shift, and go to state 101
    INT8_T     shift, and go to state 102
    U_INT16_T  shift, and go to state 103
    INT16_T    shift, and go to state 104
    U_INT32_T  shift, and go to state 105
    INT32_T    shift, and go to state 106
    FLOAT_T    shift, and go to state 107
    DOUBLE_T   shift, and go to state 108

    $default  reduce using rule 29 (var_decl)

    xtcc_type        go to state 135
    decl_comma_list  go to state 187
    var_decl         go to state 137


state 183

   33 statement: FOR '(' expression ';' . expression ';' expression ')' @3 statement

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 188


state 184

   42 list_stmt: LISTA NAME TEXT ';' .

    $default  reduce using rule 42 (list_stmt)


state 185

   43 list_stmt: LISTA NAME '[' INUMBER . ']' TEXT ';'
   44          | LISTA NAME '[' INUMBER . ',' INUMBER ']' TEXT ';'

    ']'  shift, and go to state 189
    ','  shift, and go to state 190


state 186

   45 if_stmt: IF '(' expression ')' . statement
   46        | IF '(' expression ')' . statement ELSE statement

    error      shift, and go to state 154
    '{'        shift, and go to state 150
    FOR        shift, and go to state 155
    TEXT       shift, and go to state 41
    NAME       shift, and go to state 42
    FNUMBER    shift, and go to state 43
    INUMBER    shift, and go to state 44
    LISTA      shift, and go to state 156
    IF         shift, and go to state 157
    '('        shift, and go to state 45
    VOID_T     shift, and go to state 100
    U_INT8_T   shift, and go to state 101
    INT8_T     shift, and go to state 102
    U_INT16_T  shift, and go to state 103
    INT16_T    shift, and go to state 104
    U_INT32_T  shift, and go to state 105
    INT32_T    shift, and go to state 106
    FLOAT_T    shift, and go to state 107
    DOUBLE_T   shift, and go to state 108
    CONTINUE   shift, and go to state 158
    BREAK      shift, and go to state 159
    '-'        shift, and go to state 46
    NOT        shift, and go to state 47

    xtcc_type      go to state 160
    decl           go to state 161
    func_decl      go to state 114
    statement      go to state 191
    list_stmt      go to state 164
    if_stmt        go to state 165
    compound_stmt  go to state 166
    open_curly     go to state 152
    expression     go to state 167


state 187

   23 func_decl: xtcc_type NAME '(' decl_comma_list . ')' ';'
   25 decl_comma_list: decl_comma_list . ',' var_decl

    ')'  shift, and go to state 192
    ','  shift, and go to state 142


state 188

   33 statement: FOR '(' expression ';' expression . ';' expression ')' @3 statement
   51 expression: expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '*' expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   57           | expression . '<' expression
   58           | expression . '>' expression
   59           | expression . LEQ expression
   60           | expression . GEQ expression
   61           | expression . ISEQ expression
   62           | expression . NOEQ expression
   63           | expression . LOGOR expression
   64           | expression . LOGAND expression
   65           | expression . '=' expression

    ';'     shift, and go to state 193
    '='     shift, and go to state 61
    LOGOR   shift, and go to state 62
    LOGAND  shift, and go to state 63
    NOEQ    shift, and go to state 64
    ISEQ    shift, and go to state 65
    '<'     shift, and go to state 66
    '>'     shift, and go to state 67
    GEQ     shift, and go to state 68
    LEQ     shift, and go to state 69
    '-'     shift, and go to state 70
    '+'     shift, and go to state 71
    '*'     shift, and go to state 72
    '/'     shift, and go to state 73
    '%'     shift, and go to state 74


state 189

   43 list_stmt: LISTA NAME '[' INUMBER ']' . TEXT ';'

    TEXT  shift, and go to state 194


state 190

   44 list_stmt: LISTA NAME '[' INUMBER ',' . INUMBER ']' TEXT ';'

    INUMBER  shift, and go to state 195


state 191

   45 if_stmt: IF '(' expression ')' statement .
   46        | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 196

    ELSE      [reduce using rule 45 (if_stmt)]
    $default  reduce using rule 45 (if_stmt)


state 192

   23 func_decl: xtcc_type NAME '(' decl_comma_list ')' . ';'

    ';'  shift, and go to state 146


state 193

   33 statement: FOR '(' expression ';' expression ';' . expression ')' @3 statement

    TEXT     shift, and go to state 41
    NAME     shift, and go to state 42
    FNUMBER  shift, and go to state 43
    INUMBER  shift, and go to state 44
    '('      shift, and go to state 45
    '-'      shift, and go to state 46
    NOT      shift, and go to state 47

    expression  go to state 197


state 194

   43 list_stmt: LISTA NAME '[' INUMBER ']' TEXT . ';'

    ';'  shift, and go to state 198


state 195

   44 list_stmt: LISTA NAME '[' INUMBER ',' INUMBER . ']' TEXT ';'

    ']'  shift, and go to state 199


state 196

   46 if_stmt: IF '(' expression ')' statement ELSE . statement

    error      shift, and go to state 154
    '{'        shift, and go to state 150
    FOR        shift, and go to state 155
    TEXT       shift, and go to state 41
    NAME       shift, and go to state 42
    FNUMBER    shift, and go to state 43
    INUMBER    shift, and go to state 44
    LISTA      shift, and go to state 156
    IF         shift, and go to state 157
    '('        shift, and go to state 45
    VOID_T     shift, and go to state 100
    U_INT8_T   shift, and go to state 101
    INT8_T     shift, and go to state 102
    U_INT16_T  shift, and go to state 103
    INT16_T    shift, and go to state 104
    U_INT32_T  shift, and go to state 105
    INT32_T    shift, and go to state 106
    FLOAT_T    shift, and go to state 107
    DOUBLE_T   shift, and go to state 108
    CONTINUE   shift, and go to state 158
    BREAK      shift, and go to state 159
    '-'        shift, and go to state 46
    NOT        shift, and go to state 47

    xtcc_type      go to state 160
    decl           go to state 161
    func_decl      go to state 114
    statement      go to state 200
    list_stmt      go to state 164
    if_stmt        go to state 165
    compound_stmt  go to state 166
    open_curly     go to state 152
    expression     go to state 167


state 197

   33 statement: FOR '(' expression ';' expression ';' expression . ')' @3 statement
   51 expression: expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '*' expression
   54           | expression . '/' expression
   55           | expression . '%' expression
   57           | expression . '<' expression
   58           | expression . '>' expression
   59           | expression . LEQ expression
   60           | expression . GEQ expression
   61           | expression . ISEQ expression
   62           | expression . NOEQ expression
   63           | expression . LOGOR expression
   64           | expression . LOGAND expression
   65           | expression . '=' expression

    ')'     shift, and go to state 201
    '='     shift, and go to state 61
    LOGOR   shift, and go to state 62
    LOGAND  shift, and go to state 63
    NOEQ    shift, and go to state 64
    ISEQ    shift, and go to state 65
    '<'     shift, and go to state 66
    '>'     shift, and go to state 67
    GEQ     shift, and go to state 68
    LEQ     shift, and go to state 69
    '-'     shift, and go to state 70
    '+'     shift, and go to state 71
    '*'     shift, and go to state 72
    '/'     shift, and go to state 73
    '%'     shift, and go to state 74


state 198

   43 list_stmt: LISTA NAME '[' INUMBER ']' TEXT ';' .

    $default  reduce using rule 43 (list_stmt)


state 199

   44 list_stmt: LISTA NAME '[' INUMBER ',' INUMBER ']' . TEXT ';'

    TEXT  shift, and go to state 202


state 200

   46 if_stmt: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 46 (if_stmt)


state 201

   33 statement: FOR '(' expression ';' expression ';' expression ')' . @3 statement

    $default  reduce using rule 32 (@3)

    @3  go to state 203


state 202

   44 list_stmt: LISTA NAME '[' INUMBER ',' INUMBER ']' TEXT . ';'

    ';'  shift, and go to state 204


state 203

   33 statement: FOR '(' expression ';' expression ';' expression ')' @3 . statement

    error      shift, and go to state 154
    '{'        shift, and go to state 150
    FOR        shift, and go to state 155
    TEXT       shift, and go to state 41
    NAME       shift, and go to state 42
    FNUMBER    shift, and go to state 43
    INUMBER    shift, and go to state 44
    LISTA      shift, and go to state 156
    IF         shift, and go to state 157
    '('        shift, and go to state 45
    VOID_T     shift, and go to state 100
    U_INT8_T   shift, and go to state 101
    INT8_T     shift, and go to state 102
    U_INT16_T  shift, and go to state 103
    INT16_T    shift, and go to state 104
    U_INT32_T  shift, and go to state 105
    INT32_T    shift, and go to state 106
    FLOAT_T    shift, and go to state 107
    DOUBLE_T   shift, and go to state 108
    CONTINUE   shift, and go to state 158
    BREAK      shift, and go to state 159
    '-'        shift, and go to state 46
    NOT        shift, and go to state 47

    xtcc_type      go to state 160
    decl           go to state 161
    func_decl      go to state 114
    statement      go to state 205
    list_stmt      go to state 164
    if_stmt        go to state 165
    compound_stmt  go to state 166
    open_curly     go to state 152
    expression     go to state 167


state 204

   44 list_stmt: LISTA NAME '[' INUMBER ',' INUMBER ']' TEXT ';' .

    $default  reduce using rule 44 (list_stmt)


state 205

   33 statement: FOR '(' expression ';' expression ';' expression ')' @3 statement .

    $default  reduce using rule 33 (statement)
