Terminals which are not used

   CONVERT
   CODELIST


State 233 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog $end

    1 @1: /* empty */

    2 prog: DATA_STRUCT ';' REC_LEN '=' INUMBER ';' @1 ED_START top_level_item_list ED_END
    3     | AXSTART '{' ax_list '}'
    4     | TABSTART '{' tab_list '}'

    5 top_level_item_list: top_level_item
    6                    | top_level_item_list top_level_item

    7 top_level_item: decl
    8               | func_defn

    9 xtcc_type: VOID_T
   10          | INT8_T
   11          | INT16_T
   12          | INT32_T
   13          | FLOAT_T
   14          | DOUBLE_T

   15 @2: /* empty */

   16 func_defn: xtcc_type NAME '(' decl_comma_list ')' @2 compound_stmt

   17 decl: xtcc_type NAME ';'
   18     | xtcc_type NAME '=' expression ';'
   19     | xtcc_type NAME '[' INUMBER ']' ';'
   20     | DEFINELIST NAME '=' range_list ';'
   21     | func_decl

   22 func_decl: xtcc_type NAME '(' decl_comma_list ')' ';'

   23 decl_comma_list: var_decl
   24                | decl_comma_list ',' var_decl

   25 var_decl: xtcc_type NAME
   26         | xtcc_type NAME '[' INUMBER ']'
   27         | xtcc_type '&' NAME
   28         | /* empty */

   29 statement_list: statement
   30               | statement_list statement
   31               | attributes

   32 @3: /* empty */

   33 statement: FOR '(' expression ';' expression ';' expression ')' @3 statement
   34          | if_stmt
   35          | expression ';'
   36          | compound_stmt
   37          | decl
   38          | list_stmt
   39          | BREAK ';'
   40          | CONTINUE ';'
   41          | fld_stmt
   42          | error ';'

   43 list_stmt: LISTA NAME TEXT ';'
   44          | LISTA NAME '[' expression ']' TEXT ';'
   45          | LISTA NAME '[' expression ',' expression ']' TEXT ';'

   46 if_stmt: IF '(' expression ')' statement
   47        | IF '(' expression ')' statement ELSE statement

   48 fld_stmt: FLD NAME '=' NAME '(' expression ',' expression ')' ':' INUMBER ';'

   49 compound_stmt: open_curly statement_list '}'

   50 open_curly: '{'

   51 expr_list: expression
   52          | expr_list ',' expression

   53 expression: expression '+' expression
   54           | expression '-' expression
   55           | expression '*' expression
   56           | expression '/' expression
   57           | expression '%' expression
   58           | '-' expression
   59           | expression '<' expression
   60           | expression '>' expression
   61           | expression LEQ expression
   62           | expression GEQ expression
   63           | expression ISEQ expression
   64           | expression NOEQ expression
   65           | expression LOGOR expression
   66           | expression LOGAND expression
   67           | expression '=' expression
   68           | NOT expression
   69           | INUMBER
   70           | FNUMBER
   71           | NAME
   72           | NAME '[' expression ']'
   73           | NAME '[' expression ',' expression ']'
   74           | NAME '(' expr_list ')'
   75           | TEXT
   76           | '(' expression ')'
   77           | expression IN '(' range_list ')'

   78 range_list: range
   79           | range_list ',' range

   80 range: INUMBER '-' INUMBER
   81      | INUMBER

   82 tab_list: tab_defn
   83         | tab_list tab_defn

   84 tab_defn: TAB NAME NAME ';'
   85         | TAB NAME NAME ';' COND_START expression ';'
   86         | error ';'

   87 ax_list: ax_defn
   88        | ax_list ax_defn

   89 ax_defn: AX NAME ';' ttl_ax_stmt_list count_ax_stmt_list
   90        | AX NAME ';' COND_START expression ';' ttl_ax_stmt_list count_ax_stmt_list
   91        | error ';'

   92 @4: /* empty */

   93 attributes: ATTRIBUTE_LIST NAME '=' @4 text_list ';'

   94 text_list: TEXT ';'
   95          | text_list TEXT ';'

   96 stub_list: stub
   97          | stub_list stub

   98 stub: TEXT '=' INUMBER ';'

   99 ttl_ax_stmt_list: ttl_ax_stmt
  100                 | ttl_ax_stmt_list ttl_ax_stmt

  101 ttl_ax_stmt: TTL ';' TEXT ';'

  102 count_ax_stmt_list: count_ax_stmt
  103                   | count_ax_stmt_list count_ax_stmt

  104 count_ax_stmt: TOT ';' TEXT ';'
  105              | TOT ';' TEXT ';' COND_START expression ';'
  106              | CNT ';' TEXT ';' COND_START expression ';'
  107              | bit_list

  108 bit_list: BIT NAME ';' stub_list ';'


Terminals, with rules where they appear

$end (0) 0
'%' (37) 57
'&' (38) 27
'(' (40) 16 22 33 46 47 48 74 76 77
')' (41) 16 22 33 46 47 48 74 76 77
'*' (42) 55
'+' (43) 53
',' (44) 24 45 48 52 73 79
'-' (45) 54 58 80
'/' (47) 56
':' (58) 48
';' (59) 2 17 18 19 20 22 33 35 39 40 42 43 44 45 48 84 85 86 89 90
    91 93 94 95 98 101 104 105 106 108
'<' (60) 59
'=' (61) 2 18 20 48 67 93 98
'>' (62) 60
'[' (91) 19 26 44 45 72 73
']' (93) 19 26 44 45 72 73
'{' (123) 3 4 50
'}' (125) 3 4 49
error (256) 42 86 91
CONVERT (258)
TOT (259) 104 105
AX (260) 89 90
CNT (261) 106
TTL (262) 101
FOR (263) 33
FLD (264) 48
BIT (265) 108
TEXT (266) 43 44 45 75 94 95 98 101 104 105 106
NAME (267) 16 17 18 19 20 22 25 26 27 43 44 45 48 71 72 73 74 84 85
    89 90 93 108
DEFINELIST (268) 20
FNUMBER (269) 70
INUMBER (270) 2 19 26 48 69 80 81 98
CODELIST (271)
LISTA (272) 43 44 45
IF (273) 46 47
ELSE (274) 47
IN (275) 77
VOID_T (276) 9
INT8_T (277) 10
INT16_T (278) 11
INT32_T (279) 12
FLOAT_T (280) 13
DOUBLE_T (281) 14
ATTRIBUTE_LIST (282) 93
AXSTART (283) 3
TABSTART (284) 4
ED_START (285) 2
DATA_STRUCT (286) 2
REC_LEN (287) 2
ED_END (288) 2
TAB (289) 84 85
COND_START (290) 85 90 105 106
CONTINUE (291) 40
BREAK (292) 39
LOGOR (293) 65
LOGAND (294) 66
NOEQ (295) 64
ISEQ (296) 63
GEQ (297) 62
LEQ (298) 61
NOT (299) 68
UMINUS (300)
FUNC_CALL (301)


Nonterminals, with rules where they appear

$accept (65)
    on left: 0
prog (66)
    on left: 2 3 4, on right: 0
@1 (67)
    on left: 1, on right: 2
top_level_item_list (68)
    on left: 5 6, on right: 2 6
top_level_item (69)
    on left: 7 8, on right: 5 6
xtcc_type (70)
    on left: 9 10 11 12 13 14, on right: 16 17 18 19 22 25 26 27
func_defn (71)
    on left: 16, on right: 8
@2 (72)
    on left: 15, on right: 16
decl (73)
    on left: 17 18 19 20 21, on right: 7 37
func_decl (74)
    on left: 22, on right: 21
decl_comma_list (75)
    on left: 23 24, on right: 16 22 24
var_decl (76)
    on left: 25 26 27 28, on right: 23 24
statement_list (77)
    on left: 29 30 31, on right: 30 49
statement (78)
    on left: 33 34 35 36 37 38 39 40 41 42, on right: 29 30 33 46 47
@3 (79)
    on left: 32, on right: 33
list_stmt (80)
    on left: 43 44 45, on right: 38
if_stmt (81)
    on left: 46 47, on right: 34
fld_stmt (82)
    on left: 48, on right: 41
compound_stmt (83)
    on left: 49, on right: 16 36
open_curly (84)
    on left: 50, on right: 49
expr_list (85)
    on left: 51 52, on right: 52 74
expression (86)
    on left: 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
    71 72 73 74 75 76 77, on right: 18 33 35 44 45 46 47 48 51 52 53
    54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 72 73 76 77 85 90
    105 106
range_list (87)
    on left: 78 79, on right: 20 77 79
range (88)
    on left: 80 81, on right: 78 79
tab_list (89)
    on left: 82 83, on right: 4 83
tab_defn (90)
    on left: 84 85 86, on right: 82 83
ax_list (91)
    on left: 87 88, on right: 3 88
ax_defn (92)
    on left: 89 90 91, on right: 87 88
attributes (93)
    on left: 93, on right: 31
@4 (94)
    on left: 92, on right: 93
text_list (95)
    on left: 94 95, on right: 93 95
stub_list (96)
    on left: 96 97, on right: 97 108
stub (97)
    on left: 98, on right: 96 97
ttl_ax_stmt_list (98)
    on left: 99 100, on right: 89 90 100
ttl_ax_stmt (99)
    on left: 101, on right: 99 100
count_ax_stmt_list (100)
    on left: 102 103, on right: 89 90 103
count_ax_stmt (101)
    on left: 104 105 106 107, on right: 102 103
bit_list (102)
    on left: 108, on right: 107


state 0

    0 $accept: . prog $end

    AXSTART      shift, and go to state 1
    TABSTART     shift, and go to state 2
    DATA_STRUCT  shift, and go to state 3

    prog  go to state 4


state 1

    3 prog: AXSTART . '{' ax_list '}'

    '{'  shift, and go to state 5


state 2

    4 prog: TABSTART . '{' tab_list '}'

    '{'  shift, and go to state 6


state 3

    2 prog: DATA_STRUCT . ';' REC_LEN '=' INUMBER ';' @1 ED_START top_level_item_list ED_END

    ';'  shift, and go to state 7


state 4

    0 $accept: prog . $end

    $end  shift, and go to state 8


state 5

    3 prog: AXSTART '{' . ax_list '}'

    error  shift, and go to state 9
    AX     shift, and go to state 10

    ax_list  go to state 11
    ax_defn  go to state 12


state 6

    4 prog: TABSTART '{' . tab_list '}'

    error  shift, and go to state 13
    TAB    shift, and go to state 14

    tab_list  go to state 15
    tab_defn  go to state 16


state 7

    2 prog: DATA_STRUCT ';' . REC_LEN '=' INUMBER ';' @1 ED_START top_level_item_list ED_END

    REC_LEN  shift, and go to state 17


state 8

    0 $accept: prog $end .

    $default  accept


state 9

   91 ax_defn: error . ';'

    ';'  shift, and go to state 18


state 10

   89 ax_defn: AX . NAME ';' ttl_ax_stmt_list count_ax_stmt_list
   90        | AX . NAME ';' COND_START expression ';' ttl_ax_stmt_list count_ax_stmt_list

    NAME  shift, and go to state 19


state 11

    3 prog: AXSTART '{' ax_list . '}'
   88 ax_list: ax_list . ax_defn

    error  shift, and go to state 9
    AX     shift, and go to state 10
    '}'    shift, and go to state 20

    ax_defn  go to state 21


state 12

   87 ax_list: ax_defn .

    $default  reduce using rule 87 (ax_list)


state 13

   86 tab_defn: error . ';'

    ';'  shift, and go to state 22


state 14

   84 tab_defn: TAB . NAME NAME ';'
   85         | TAB . NAME NAME ';' COND_START expression ';'

    NAME  shift, and go to state 23


state 15

    4 prog: TABSTART '{' tab_list . '}'
   83 tab_list: tab_list . tab_defn

    error  shift, and go to state 13
    '}'    shift, and go to state 24
    TAB    shift, and go to state 14

    tab_defn  go to state 25


state 16

   82 tab_list: tab_defn .

    $default  reduce using rule 82 (tab_list)


state 17

    2 prog: DATA_STRUCT ';' REC_LEN . '=' INUMBER ';' @1 ED_START top_level_item_list ED_END

    '='  shift, and go to state 26


state 18

   91 ax_defn: error ';' .

    $default  reduce using rule 91 (ax_defn)


state 19

   89 ax_defn: AX NAME . ';' ttl_ax_stmt_list count_ax_stmt_list
   90        | AX NAME . ';' COND_START expression ';' ttl_ax_stmt_list count_ax_stmt_list

    ';'  shift, and go to state 27


state 20

    3 prog: AXSTART '{' ax_list '}' .

    $default  reduce using rule 3 (prog)


state 21

   88 ax_list: ax_list ax_defn .

    $default  reduce using rule 88 (ax_list)


state 22

   86 tab_defn: error ';' .

    $default  reduce using rule 86 (tab_defn)


state 23

   84 tab_defn: TAB NAME . NAME ';'
   85         | TAB NAME . NAME ';' COND_START expression ';'

    NAME  shift, and go to state 28


state 24

    4 prog: TABSTART '{' tab_list '}' .

    $default  reduce using rule 4 (prog)


state 25

   83 tab_list: tab_list tab_defn .

    $default  reduce using rule 83 (tab_list)


state 26

    2 prog: DATA_STRUCT ';' REC_LEN '=' . INUMBER ';' @1 ED_START top_level_item_list ED_END

    INUMBER  shift, and go to state 29


state 27

   89 ax_defn: AX NAME ';' . ttl_ax_stmt_list count_ax_stmt_list
   90        | AX NAME ';' . COND_START expression ';' ttl_ax_stmt_list count_ax_stmt_list

    TTL         shift, and go to state 30
    COND_START  shift, and go to state 31

    ttl_ax_stmt_list  go to state 32
    ttl_ax_stmt       go to state 33


state 28

   84 tab_defn: TAB NAME NAME . ';'
   85         | TAB NAME NAME . ';' COND_START expression ';'

    ';'  shift, and go to state 34


state 29

    2 prog: DATA_STRUCT ';' REC_LEN '=' INUMBER . ';' @1 ED_START top_level_item_list ED_END

    ';'  shift, and go to state 35


state 30

  101 ttl_ax_stmt: TTL . ';' TEXT ';'

    ';'  shift, and go to state 36


state 31

   90 ax_defn: AX NAME ';' COND_START . expression ';' ttl_ax_stmt_list count_ax_stmt_list

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 44


state 32

   89 ax_defn: AX NAME ';' ttl_ax_stmt_list . count_ax_stmt_list
  100 ttl_ax_stmt_list: ttl_ax_stmt_list . ttl_ax_stmt

    TOT  shift, and go to state 45
    CNT  shift, and go to state 46
    TTL  shift, and go to state 30
    BIT  shift, and go to state 47

    ttl_ax_stmt         go to state 48
    count_ax_stmt_list  go to state 49
    count_ax_stmt       go to state 50
    bit_list            go to state 51


state 33

   99 ttl_ax_stmt_list: ttl_ax_stmt .

    $default  reduce using rule 99 (ttl_ax_stmt_list)


state 34

   84 tab_defn: TAB NAME NAME ';' .
   85         | TAB NAME NAME ';' . COND_START expression ';'

    COND_START  shift, and go to state 52

    $default  reduce using rule 84 (tab_defn)


state 35

    2 prog: DATA_STRUCT ';' REC_LEN '=' INUMBER ';' . @1 ED_START top_level_item_list ED_END

    $default  reduce using rule 1 (@1)

    @1  go to state 53


state 36

  101 ttl_ax_stmt: TTL ';' . TEXT ';'

    TEXT  shift, and go to state 54


state 37

   75 expression: TEXT .

    $default  reduce using rule 75 (expression)


state 38

   71 expression: NAME .
   72           | NAME . '[' expression ']'
   73           | NAME . '[' expression ',' expression ']'
   74           | NAME . '(' expr_list ')'

    '['  shift, and go to state 55
    '('  shift, and go to state 56

    $default  reduce using rule 71 (expression)


state 39

   70 expression: FNUMBER .

    $default  reduce using rule 70 (expression)


state 40

   69 expression: INUMBER .

    $default  reduce using rule 69 (expression)


state 41

   76 expression: '(' . expression ')'

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 57


state 42

   58 expression: '-' . expression

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 58


state 43

   68 expression: NOT . expression

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 59


state 44

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'
   90 ax_defn: AX NAME ';' COND_START expression . ';' ttl_ax_stmt_list count_ax_stmt_list

    ';'     shift, and go to state 60
    IN      shift, and go to state 61
    '='     shift, and go to state 62
    LOGOR   shift, and go to state 63
    LOGAND  shift, and go to state 64
    NOEQ    shift, and go to state 65
    ISEQ    shift, and go to state 66
    '<'     shift, and go to state 67
    '>'     shift, and go to state 68
    GEQ     shift, and go to state 69
    LEQ     shift, and go to state 70
    '-'     shift, and go to state 71
    '+'     shift, and go to state 72
    '*'     shift, and go to state 73
    '/'     shift, and go to state 74
    '%'     shift, and go to state 75


state 45

  104 count_ax_stmt: TOT . ';' TEXT ';'
  105              | TOT . ';' TEXT ';' COND_START expression ';'

    ';'  shift, and go to state 76


state 46

  106 count_ax_stmt: CNT . ';' TEXT ';' COND_START expression ';'

    ';'  shift, and go to state 77


state 47

  108 bit_list: BIT . NAME ';' stub_list ';'

    NAME  shift, and go to state 78


state 48

  100 ttl_ax_stmt_list: ttl_ax_stmt_list ttl_ax_stmt .

    $default  reduce using rule 100 (ttl_ax_stmt_list)


state 49

   89 ax_defn: AX NAME ';' ttl_ax_stmt_list count_ax_stmt_list .
  103 count_ax_stmt_list: count_ax_stmt_list . count_ax_stmt

    TOT  shift, and go to state 45
    CNT  shift, and go to state 46
    BIT  shift, and go to state 47

    $default  reduce using rule 89 (ax_defn)

    count_ax_stmt  go to state 79
    bit_list       go to state 51


state 50

  102 count_ax_stmt_list: count_ax_stmt .

    $default  reduce using rule 102 (count_ax_stmt_list)


state 51

  107 count_ax_stmt: bit_list .

    $default  reduce using rule 107 (count_ax_stmt)


state 52

   85 tab_defn: TAB NAME NAME ';' COND_START . expression ';'

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 80


state 53

    2 prog: DATA_STRUCT ';' REC_LEN '=' INUMBER ';' @1 . ED_START top_level_item_list ED_END

    ED_START  shift, and go to state 81


state 54

  101 ttl_ax_stmt: TTL ';' TEXT . ';'

    ';'  shift, and go to state 82


state 55

   72 expression: NAME '[' . expression ']'
   73           | NAME '[' . expression ',' expression ']'

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 83


state 56

   74 expression: NAME '(' . expr_list ')'

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expr_list   go to state 84
    expression  go to state 85


state 57

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   76           | '(' expression . ')'
   77           | expression . IN '(' range_list ')'

    IN      shift, and go to state 61
    ')'     shift, and go to state 86
    '='     shift, and go to state 62
    LOGOR   shift, and go to state 63
    LOGAND  shift, and go to state 64
    NOEQ    shift, and go to state 65
    ISEQ    shift, and go to state 66
    '<'     shift, and go to state 67
    '>'     shift, and go to state 68
    GEQ     shift, and go to state 69
    LEQ     shift, and go to state 70
    '-'     shift, and go to state 71
    '+'     shift, and go to state 72
    '*'     shift, and go to state 73
    '/'     shift, and go to state 74
    '%'     shift, and go to state 75


state 58

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   58           | '-' expression .
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    $default  reduce using rule 58 (expression)


state 59

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   68           | NOT expression .
   77           | expression . IN '(' range_list ')'

    $default  reduce using rule 68 (expression)


state 60

   90 ax_defn: AX NAME ';' COND_START expression ';' . ttl_ax_stmt_list count_ax_stmt_list

    TTL  shift, and go to state 30

    ttl_ax_stmt_list  go to state 87
    ttl_ax_stmt       go to state 33


state 61

   77 expression: expression IN . '(' range_list ')'

    '('  shift, and go to state 88


state 62

   67 expression: expression '=' . expression

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 89


state 63

   65 expression: expression LOGOR . expression

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 90


state 64

   66 expression: expression LOGAND . expression

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 91


state 65

   64 expression: expression NOEQ . expression

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 92


state 66

   63 expression: expression ISEQ . expression

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 93


state 67

   59 expression: expression '<' . expression

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 94


state 68

   60 expression: expression '>' . expression

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 95


state 69

   62 expression: expression GEQ . expression

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 96


state 70

   61 expression: expression LEQ . expression

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 97


state 71

   54 expression: expression '-' . expression

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 98


state 72

   53 expression: expression '+' . expression

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 99


state 73

   55 expression: expression '*' . expression

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 100


state 74

   56 expression: expression '/' . expression

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 101


state 75

   57 expression: expression '%' . expression

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 102


state 76

  104 count_ax_stmt: TOT ';' . TEXT ';'
  105              | TOT ';' . TEXT ';' COND_START expression ';'

    TEXT  shift, and go to state 103


state 77

  106 count_ax_stmt: CNT ';' . TEXT ';' COND_START expression ';'

    TEXT  shift, and go to state 104


state 78

  108 bit_list: BIT NAME . ';' stub_list ';'

    ';'  shift, and go to state 105


state 79

  103 count_ax_stmt_list: count_ax_stmt_list count_ax_stmt .

    $default  reduce using rule 103 (count_ax_stmt_list)


state 80

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'
   85 tab_defn: TAB NAME NAME ';' COND_START expression . ';'

    ';'     shift, and go to state 106
    IN      shift, and go to state 61
    '='     shift, and go to state 62
    LOGOR   shift, and go to state 63
    LOGAND  shift, and go to state 64
    NOEQ    shift, and go to state 65
    ISEQ    shift, and go to state 66
    '<'     shift, and go to state 67
    '>'     shift, and go to state 68
    GEQ     shift, and go to state 69
    LEQ     shift, and go to state 70
    '-'     shift, and go to state 71
    '+'     shift, and go to state 72
    '*'     shift, and go to state 73
    '/'     shift, and go to state 74
    '%'     shift, and go to state 75


state 81

    2 prog: DATA_STRUCT ';' REC_LEN '=' INUMBER ';' @1 ED_START . top_level_item_list ED_END

    DEFINELIST  shift, and go to state 107
    VOID_T      shift, and go to state 108
    INT8_T      shift, and go to state 109
    INT16_T     shift, and go to state 110
    INT32_T     shift, and go to state 111
    FLOAT_T     shift, and go to state 112
    DOUBLE_T    shift, and go to state 113

    top_level_item_list  go to state 114
    top_level_item       go to state 115
    xtcc_type            go to state 116
    func_defn            go to state 117
    decl                 go to state 118
    func_decl            go to state 119


state 82

  101 ttl_ax_stmt: TTL ';' TEXT ';' .

    $default  reduce using rule 101 (ttl_ax_stmt)


state 83

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   72           | NAME '[' expression . ']'
   73           | NAME '[' expression . ',' expression ']'
   77           | expression . IN '(' range_list ')'

    IN      shift, and go to state 61
    ']'     shift, and go to state 120
    '='     shift, and go to state 62
    ','     shift, and go to state 121
    LOGOR   shift, and go to state 63
    LOGAND  shift, and go to state 64
    NOEQ    shift, and go to state 65
    ISEQ    shift, and go to state 66
    '<'     shift, and go to state 67
    '>'     shift, and go to state 68
    GEQ     shift, and go to state 69
    LEQ     shift, and go to state 70
    '-'     shift, and go to state 71
    '+'     shift, and go to state 72
    '*'     shift, and go to state 73
    '/'     shift, and go to state 74
    '%'     shift, and go to state 75


state 84

   52 expr_list: expr_list . ',' expression
   74 expression: NAME '(' expr_list . ')'

    ')'  shift, and go to state 122
    ','  shift, and go to state 123


state 85

   51 expr_list: expression .
   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    IN      shift, and go to state 61
    '='     shift, and go to state 62
    LOGOR   shift, and go to state 63
    LOGAND  shift, and go to state 64
    NOEQ    shift, and go to state 65
    ISEQ    shift, and go to state 66
    '<'     shift, and go to state 67
    '>'     shift, and go to state 68
    GEQ     shift, and go to state 69
    LEQ     shift, and go to state 70
    '-'     shift, and go to state 71
    '+'     shift, and go to state 72
    '*'     shift, and go to state 73
    '/'     shift, and go to state 74
    '%'     shift, and go to state 75

    $default  reduce using rule 51 (expr_list)


state 86

   76 expression: '(' expression ')' .

    $default  reduce using rule 76 (expression)


state 87

   90 ax_defn: AX NAME ';' COND_START expression ';' ttl_ax_stmt_list . count_ax_stmt_list
  100 ttl_ax_stmt_list: ttl_ax_stmt_list . ttl_ax_stmt

    TOT  shift, and go to state 45
    CNT  shift, and go to state 46
    TTL  shift, and go to state 30
    BIT  shift, and go to state 47

    ttl_ax_stmt         go to state 48
    count_ax_stmt_list  go to state 124
    count_ax_stmt       go to state 50
    bit_list            go to state 51


state 88

   77 expression: expression IN '(' . range_list ')'

    INUMBER  shift, and go to state 125

    range_list  go to state 126
    range       go to state 127


state 89

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   67           | expression '=' expression .
   77           | expression . IN '(' range_list ')'

    IN      shift, and go to state 61
    '='     shift, and go to state 62
    LOGOR   shift, and go to state 63
    LOGAND  shift, and go to state 64
    NOEQ    shift, and go to state 65
    ISEQ    shift, and go to state 66
    '<'     shift, and go to state 67
    '>'     shift, and go to state 68
    GEQ     shift, and go to state 69
    LEQ     shift, and go to state 70
    '-'     shift, and go to state 71
    '+'     shift, and go to state 72
    '*'     shift, and go to state 73
    '/'     shift, and go to state 74
    '%'     shift, and go to state 75

    $default  reduce using rule 67 (expression)


state 90

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   65           | expression LOGOR expression .
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    IN      shift, and go to state 61
    LOGAND  shift, and go to state 64
    NOEQ    shift, and go to state 65
    ISEQ    shift, and go to state 66
    '<'     shift, and go to state 67
    '>'     shift, and go to state 68
    GEQ     shift, and go to state 69
    LEQ     shift, and go to state 70
    '-'     shift, and go to state 71
    '+'     shift, and go to state 72
    '*'     shift, and go to state 73
    '/'     shift, and go to state 74
    '%'     shift, and go to state 75

    $default  reduce using rule 65 (expression)


state 91

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   66           | expression LOGAND expression .
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    IN    shift, and go to state 61
    NOEQ  shift, and go to state 65
    ISEQ  shift, and go to state 66
    '<'   shift, and go to state 67
    '>'   shift, and go to state 68
    GEQ   shift, and go to state 69
    LEQ   shift, and go to state 70
    '-'   shift, and go to state 71
    '+'   shift, and go to state 72
    '*'   shift, and go to state 73
    '/'   shift, and go to state 74
    '%'   shift, and go to state 75

    $default  reduce using rule 66 (expression)


state 92

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   64           | expression NOEQ expression .
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    IN   shift, and go to state 61
    '<'  shift, and go to state 67
    '>'  shift, and go to state 68
    GEQ  shift, and go to state 69
    LEQ  shift, and go to state 70
    '-'  shift, and go to state 71
    '+'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '%'  shift, and go to state 75

    $default  reduce using rule 64 (expression)


state 93

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   63           | expression ISEQ expression .
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    IN   shift, and go to state 61
    '<'  shift, and go to state 67
    '>'  shift, and go to state 68
    GEQ  shift, and go to state 69
    LEQ  shift, and go to state 70
    '-'  shift, and go to state 71
    '+'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '%'  shift, and go to state 75

    $default  reduce using rule 63 (expression)


state 94

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   59           | expression '<' expression .
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    IN   shift, and go to state 61
    '-'  shift, and go to state 71
    '+'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '%'  shift, and go to state 75

    $default  reduce using rule 59 (expression)


state 95

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   60           | expression '>' expression .
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    IN   shift, and go to state 61
    '-'  shift, and go to state 71
    '+'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '%'  shift, and go to state 75

    $default  reduce using rule 60 (expression)


state 96

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   62           | expression GEQ expression .
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    IN   shift, and go to state 61
    '-'  shift, and go to state 71
    '+'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '%'  shift, and go to state 75

    $default  reduce using rule 62 (expression)


state 97

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   61           | expression LEQ expression .
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    IN   shift, and go to state 61
    '-'  shift, and go to state 71
    '+'  shift, and go to state 72
    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '%'  shift, and go to state 75

    $default  reduce using rule 61 (expression)


state 98

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   54           | expression '-' expression .
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '%'  shift, and go to state 75

    $default  reduce using rule 54 (expression)


state 99

   53 expression: expression . '+' expression
   53           | expression '+' expression .
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '%'  shift, and go to state 75

    $default  reduce using rule 53 (expression)


state 100

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   55           | expression '*' expression .
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    $default  reduce using rule 55 (expression)


state 101

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   56           | expression '/' expression .
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    $default  reduce using rule 56 (expression)


state 102

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   57           | expression '%' expression .
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    $default  reduce using rule 57 (expression)


state 103

  104 count_ax_stmt: TOT ';' TEXT . ';'
  105              | TOT ';' TEXT . ';' COND_START expression ';'

    ';'  shift, and go to state 128


state 104

  106 count_ax_stmt: CNT ';' TEXT . ';' COND_START expression ';'

    ';'  shift, and go to state 129


state 105

  108 bit_list: BIT NAME ';' . stub_list ';'

    TEXT  shift, and go to state 130

    stub_list  go to state 131
    stub       go to state 132


state 106

   85 tab_defn: TAB NAME NAME ';' COND_START expression ';' .

    $default  reduce using rule 85 (tab_defn)


state 107

   20 decl: DEFINELIST . NAME '=' range_list ';'

    NAME  shift, and go to state 133


state 108

    9 xtcc_type: VOID_T .

    $default  reduce using rule 9 (xtcc_type)


state 109

   10 xtcc_type: INT8_T .

    $default  reduce using rule 10 (xtcc_type)


state 110

   11 xtcc_type: INT16_T .

    $default  reduce using rule 11 (xtcc_type)


state 111

   12 xtcc_type: INT32_T .

    $default  reduce using rule 12 (xtcc_type)


state 112

   13 xtcc_type: FLOAT_T .

    $default  reduce using rule 13 (xtcc_type)


state 113

   14 xtcc_type: DOUBLE_T .

    $default  reduce using rule 14 (xtcc_type)


state 114

    2 prog: DATA_STRUCT ';' REC_LEN '=' INUMBER ';' @1 ED_START top_level_item_list . ED_END
    6 top_level_item_list: top_level_item_list . top_level_item

    DEFINELIST  shift, and go to state 107
    VOID_T      shift, and go to state 108
    INT8_T      shift, and go to state 109
    INT16_T     shift, and go to state 110
    INT32_T     shift, and go to state 111
    FLOAT_T     shift, and go to state 112
    DOUBLE_T    shift, and go to state 113
    ED_END      shift, and go to state 134

    top_level_item  go to state 135
    xtcc_type       go to state 116
    func_defn       go to state 117
    decl            go to state 118
    func_decl       go to state 119


state 115

    5 top_level_item_list: top_level_item .

    $default  reduce using rule 5 (top_level_item_list)


state 116

   16 func_defn: xtcc_type . NAME '(' decl_comma_list ')' @2 compound_stmt
   17 decl: xtcc_type . NAME ';'
   18     | xtcc_type . NAME '=' expression ';'
   19     | xtcc_type . NAME '[' INUMBER ']' ';'
   22 func_decl: xtcc_type . NAME '(' decl_comma_list ')' ';'

    NAME  shift, and go to state 136


state 117

    8 top_level_item: func_defn .

    $default  reduce using rule 8 (top_level_item)


state 118

    7 top_level_item: decl .

    $default  reduce using rule 7 (top_level_item)


state 119

   21 decl: func_decl .

    $default  reduce using rule 21 (decl)


state 120

   72 expression: NAME '[' expression ']' .

    $default  reduce using rule 72 (expression)


state 121

   73 expression: NAME '[' expression ',' . expression ']'

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 137


state 122

   74 expression: NAME '(' expr_list ')' .

    $default  reduce using rule 74 (expression)


state 123

   52 expr_list: expr_list ',' . expression

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 138


state 124

   90 ax_defn: AX NAME ';' COND_START expression ';' ttl_ax_stmt_list count_ax_stmt_list .
  103 count_ax_stmt_list: count_ax_stmt_list . count_ax_stmt

    TOT  shift, and go to state 45
    CNT  shift, and go to state 46
    BIT  shift, and go to state 47

    $default  reduce using rule 90 (ax_defn)

    count_ax_stmt  go to state 79
    bit_list       go to state 51


state 125

   80 range: INUMBER . '-' INUMBER
   81      | INUMBER .

    '-'  shift, and go to state 139

    $default  reduce using rule 81 (range)


state 126

   77 expression: expression IN '(' range_list . ')'
   79 range_list: range_list . ',' range

    ')'  shift, and go to state 140
    ','  shift, and go to state 141


state 127

   78 range_list: range .

    $default  reduce using rule 78 (range_list)


state 128

  104 count_ax_stmt: TOT ';' TEXT ';' .
  105              | TOT ';' TEXT ';' . COND_START expression ';'

    COND_START  shift, and go to state 142

    $default  reduce using rule 104 (count_ax_stmt)


state 129

  106 count_ax_stmt: CNT ';' TEXT ';' . COND_START expression ';'

    COND_START  shift, and go to state 143


state 130

   98 stub: TEXT . '=' INUMBER ';'

    '='  shift, and go to state 144


state 131

   97 stub_list: stub_list . stub
  108 bit_list: BIT NAME ';' stub_list . ';'

    ';'   shift, and go to state 145
    TEXT  shift, and go to state 130

    stub  go to state 146


state 132

   96 stub_list: stub .

    $default  reduce using rule 96 (stub_list)


state 133

   20 decl: DEFINELIST NAME . '=' range_list ';'

    '='  shift, and go to state 147


state 134

    2 prog: DATA_STRUCT ';' REC_LEN '=' INUMBER ';' @1 ED_START top_level_item_list ED_END .

    $default  reduce using rule 2 (prog)


state 135

    6 top_level_item_list: top_level_item_list top_level_item .

    $default  reduce using rule 6 (top_level_item_list)


state 136

   16 func_defn: xtcc_type NAME . '(' decl_comma_list ')' @2 compound_stmt
   17 decl: xtcc_type NAME . ';'
   18     | xtcc_type NAME . '=' expression ';'
   19     | xtcc_type NAME . '[' INUMBER ']' ';'
   22 func_decl: xtcc_type NAME . '(' decl_comma_list ')' ';'

    ';'  shift, and go to state 148
    '['  shift, and go to state 149
    '('  shift, and go to state 150
    '='  shift, and go to state 151


state 137

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   73           | NAME '[' expression ',' expression . ']'
   77           | expression . IN '(' range_list ')'

    IN      shift, and go to state 61
    ']'     shift, and go to state 152
    '='     shift, and go to state 62
    LOGOR   shift, and go to state 63
    LOGAND  shift, and go to state 64
    NOEQ    shift, and go to state 65
    ISEQ    shift, and go to state 66
    '<'     shift, and go to state 67
    '>'     shift, and go to state 68
    GEQ     shift, and go to state 69
    LEQ     shift, and go to state 70
    '-'     shift, and go to state 71
    '+'     shift, and go to state 72
    '*'     shift, and go to state 73
    '/'     shift, and go to state 74
    '%'     shift, and go to state 75


state 138

   52 expr_list: expr_list ',' expression .
   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    IN      shift, and go to state 61
    '='     shift, and go to state 62
    LOGOR   shift, and go to state 63
    LOGAND  shift, and go to state 64
    NOEQ    shift, and go to state 65
    ISEQ    shift, and go to state 66
    '<'     shift, and go to state 67
    '>'     shift, and go to state 68
    GEQ     shift, and go to state 69
    LEQ     shift, and go to state 70
    '-'     shift, and go to state 71
    '+'     shift, and go to state 72
    '*'     shift, and go to state 73
    '/'     shift, and go to state 74
    '%'     shift, and go to state 75

    $default  reduce using rule 52 (expr_list)


state 139

   80 range: INUMBER '-' . INUMBER

    INUMBER  shift, and go to state 153


state 140

   77 expression: expression IN '(' range_list ')' .

    $default  reduce using rule 77 (expression)


state 141

   79 range_list: range_list ',' . range

    INUMBER  shift, and go to state 125

    range  go to state 154


state 142

  105 count_ax_stmt: TOT ';' TEXT ';' COND_START . expression ';'

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 155


state 143

  106 count_ax_stmt: CNT ';' TEXT ';' COND_START . expression ';'

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 156


state 144

   98 stub: TEXT '=' . INUMBER ';'

    INUMBER  shift, and go to state 157


state 145

  108 bit_list: BIT NAME ';' stub_list ';' .

    $default  reduce using rule 108 (bit_list)


state 146

   97 stub_list: stub_list stub .

    $default  reduce using rule 97 (stub_list)


state 147

   20 decl: DEFINELIST NAME '=' . range_list ';'

    INUMBER  shift, and go to state 125

    range_list  go to state 158
    range       go to state 127


state 148

   17 decl: xtcc_type NAME ';' .

    $default  reduce using rule 17 (decl)


state 149

   19 decl: xtcc_type NAME '[' . INUMBER ']' ';'

    INUMBER  shift, and go to state 159


state 150

   16 func_defn: xtcc_type NAME '(' . decl_comma_list ')' @2 compound_stmt
   22 func_decl: xtcc_type NAME '(' . decl_comma_list ')' ';'

    VOID_T    shift, and go to state 108
    INT8_T    shift, and go to state 109
    INT16_T   shift, and go to state 110
    INT32_T   shift, and go to state 111
    FLOAT_T   shift, and go to state 112
    DOUBLE_T  shift, and go to state 113

    $default  reduce using rule 28 (var_decl)

    xtcc_type        go to state 160
    decl_comma_list  go to state 161
    var_decl         go to state 162


state 151

   18 decl: xtcc_type NAME '=' . expression ';'

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 163


state 152

   73 expression: NAME '[' expression ',' expression ']' .

    $default  reduce using rule 73 (expression)


state 153

   80 range: INUMBER '-' INUMBER .

    $default  reduce using rule 80 (range)


state 154

   79 range_list: range_list ',' range .

    $default  reduce using rule 79 (range_list)


state 155

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'
  105 count_ax_stmt: TOT ';' TEXT ';' COND_START expression . ';'

    ';'     shift, and go to state 164
    IN      shift, and go to state 61
    '='     shift, and go to state 62
    LOGOR   shift, and go to state 63
    LOGAND  shift, and go to state 64
    NOEQ    shift, and go to state 65
    ISEQ    shift, and go to state 66
    '<'     shift, and go to state 67
    '>'     shift, and go to state 68
    GEQ     shift, and go to state 69
    LEQ     shift, and go to state 70
    '-'     shift, and go to state 71
    '+'     shift, and go to state 72
    '*'     shift, and go to state 73
    '/'     shift, and go to state 74
    '%'     shift, and go to state 75


state 156

   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'
  106 count_ax_stmt: CNT ';' TEXT ';' COND_START expression . ';'

    ';'     shift, and go to state 165
    IN      shift, and go to state 61
    '='     shift, and go to state 62
    LOGOR   shift, and go to state 63
    LOGAND  shift, and go to state 64
    NOEQ    shift, and go to state 65
    ISEQ    shift, and go to state 66
    '<'     shift, and go to state 67
    '>'     shift, and go to state 68
    GEQ     shift, and go to state 69
    LEQ     shift, and go to state 70
    '-'     shift, and go to state 71
    '+'     shift, and go to state 72
    '*'     shift, and go to state 73
    '/'     shift, and go to state 74
    '%'     shift, and go to state 75


state 157

   98 stub: TEXT '=' INUMBER . ';'

    ';'  shift, and go to state 166


state 158

   20 decl: DEFINELIST NAME '=' range_list . ';'
   79 range_list: range_list . ',' range

    ';'  shift, and go to state 167
    ','  shift, and go to state 141


state 159

   19 decl: xtcc_type NAME '[' INUMBER . ']' ';'

    ']'  shift, and go to state 168


state 160

   25 var_decl: xtcc_type . NAME
   26         | xtcc_type . NAME '[' INUMBER ']'
   27         | xtcc_type . '&' NAME

    NAME  shift, and go to state 169
    '&'   shift, and go to state 170


state 161

   16 func_defn: xtcc_type NAME '(' decl_comma_list . ')' @2 compound_stmt
   22 func_decl: xtcc_type NAME '(' decl_comma_list . ')' ';'
   24 decl_comma_list: decl_comma_list . ',' var_decl

    ')'  shift, and go to state 171
    ','  shift, and go to state 172


state 162

   23 decl_comma_list: var_decl .

    $default  reduce using rule 23 (decl_comma_list)


state 163

   18 decl: xtcc_type NAME '=' expression . ';'
   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    ';'     shift, and go to state 173
    IN      shift, and go to state 61
    '='     shift, and go to state 62
    LOGOR   shift, and go to state 63
    LOGAND  shift, and go to state 64
    NOEQ    shift, and go to state 65
    ISEQ    shift, and go to state 66
    '<'     shift, and go to state 67
    '>'     shift, and go to state 68
    GEQ     shift, and go to state 69
    LEQ     shift, and go to state 70
    '-'     shift, and go to state 71
    '+'     shift, and go to state 72
    '*'     shift, and go to state 73
    '/'     shift, and go to state 74
    '%'     shift, and go to state 75


state 164

  105 count_ax_stmt: TOT ';' TEXT ';' COND_START expression ';' .

    $default  reduce using rule 105 (count_ax_stmt)


state 165

  106 count_ax_stmt: CNT ';' TEXT ';' COND_START expression ';' .

    $default  reduce using rule 106 (count_ax_stmt)


state 166

   98 stub: TEXT '=' INUMBER ';' .

    $default  reduce using rule 98 (stub)


state 167

   20 decl: DEFINELIST NAME '=' range_list ';' .

    $default  reduce using rule 20 (decl)


state 168

   19 decl: xtcc_type NAME '[' INUMBER ']' . ';'

    ';'  shift, and go to state 174


state 169

   25 var_decl: xtcc_type NAME .
   26         | xtcc_type NAME . '[' INUMBER ']'

    '['  shift, and go to state 175

    $default  reduce using rule 25 (var_decl)


state 170

   27 var_decl: xtcc_type '&' . NAME

    NAME  shift, and go to state 176


state 171

   16 func_defn: xtcc_type NAME '(' decl_comma_list ')' . @2 compound_stmt
   22 func_decl: xtcc_type NAME '(' decl_comma_list ')' . ';'

    ';'  shift, and go to state 177

    $default  reduce using rule 15 (@2)

    @2  go to state 178


state 172

   24 decl_comma_list: decl_comma_list ',' . var_decl

    VOID_T    shift, and go to state 108
    INT8_T    shift, and go to state 109
    INT16_T   shift, and go to state 110
    INT32_T   shift, and go to state 111
    FLOAT_T   shift, and go to state 112
    DOUBLE_T  shift, and go to state 113

    $default  reduce using rule 28 (var_decl)

    xtcc_type  go to state 160
    var_decl   go to state 179


state 173

   18 decl: xtcc_type NAME '=' expression ';' .

    $default  reduce using rule 18 (decl)


state 174

   19 decl: xtcc_type NAME '[' INUMBER ']' ';' .

    $default  reduce using rule 19 (decl)


state 175

   26 var_decl: xtcc_type NAME '[' . INUMBER ']'

    INUMBER  shift, and go to state 180


state 176

   27 var_decl: xtcc_type '&' NAME .

    $default  reduce using rule 27 (var_decl)


state 177

   22 func_decl: xtcc_type NAME '(' decl_comma_list ')' ';' .

    $default  reduce using rule 22 (func_decl)


state 178

   16 func_defn: xtcc_type NAME '(' decl_comma_list ')' @2 . compound_stmt

    '{'  shift, and go to state 181

    compound_stmt  go to state 182
    open_curly     go to state 183


state 179

   24 decl_comma_list: decl_comma_list ',' var_decl .

    $default  reduce using rule 24 (decl_comma_list)


state 180

   26 var_decl: xtcc_type NAME '[' INUMBER . ']'

    ']'  shift, and go to state 184


state 181

   50 open_curly: '{' .

    $default  reduce using rule 50 (open_curly)


state 182

   16 func_defn: xtcc_type NAME '(' decl_comma_list ')' @2 compound_stmt .

    $default  reduce using rule 16 (func_defn)


state 183

   49 compound_stmt: open_curly . statement_list '}'

    error           shift, and go to state 185
    '{'             shift, and go to state 181
    FOR             shift, and go to state 186
    FLD             shift, and go to state 187
    TEXT            shift, and go to state 37
    NAME            shift, and go to state 38
    DEFINELIST      shift, and go to state 107
    FNUMBER         shift, and go to state 39
    INUMBER         shift, and go to state 40
    LISTA           shift, and go to state 188
    IF              shift, and go to state 189
    '('             shift, and go to state 41
    VOID_T          shift, and go to state 108
    INT8_T          shift, and go to state 109
    INT16_T         shift, and go to state 110
    INT32_T         shift, and go to state 111
    FLOAT_T         shift, and go to state 112
    DOUBLE_T        shift, and go to state 113
    ATTRIBUTE_LIST  shift, and go to state 190
    CONTINUE        shift, and go to state 191
    BREAK           shift, and go to state 192
    '-'             shift, and go to state 42
    NOT             shift, and go to state 43

    xtcc_type       go to state 193
    decl            go to state 194
    func_decl       go to state 119
    statement_list  go to state 195
    statement       go to state 196
    list_stmt       go to state 197
    if_stmt         go to state 198
    fld_stmt        go to state 199
    compound_stmt   go to state 200
    open_curly      go to state 183
    expression      go to state 201
    attributes      go to state 202


state 184

   26 var_decl: xtcc_type NAME '[' INUMBER ']' .

    $default  reduce using rule 26 (var_decl)


state 185

   42 statement: error . ';'

    ';'  shift, and go to state 203


state 186

   33 statement: FOR . '(' expression ';' expression ';' expression ')' @3 statement

    '('  shift, and go to state 204


state 187

   48 fld_stmt: FLD . NAME '=' NAME '(' expression ',' expression ')' ':' INUMBER ';'

    NAME  shift, and go to state 205


state 188

   43 list_stmt: LISTA . NAME TEXT ';'
   44          | LISTA . NAME '[' expression ']' TEXT ';'
   45          | LISTA . NAME '[' expression ',' expression ']' TEXT ';'

    NAME  shift, and go to state 206


state 189

   46 if_stmt: IF . '(' expression ')' statement
   47        | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 207


state 190

   93 attributes: ATTRIBUTE_LIST . NAME '=' @4 text_list ';'

    NAME  shift, and go to state 208


state 191

   40 statement: CONTINUE . ';'

    ';'  shift, and go to state 209


state 192

   39 statement: BREAK . ';'

    ';'  shift, and go to state 210


state 193

   17 decl: xtcc_type . NAME ';'
   18     | xtcc_type . NAME '=' expression ';'
   19     | xtcc_type . NAME '[' INUMBER ']' ';'
   22 func_decl: xtcc_type . NAME '(' decl_comma_list ')' ';'

    NAME  shift, and go to state 211


state 194

   37 statement: decl .

    $default  reduce using rule 37 (statement)


state 195

   30 statement_list: statement_list . statement
   49 compound_stmt: open_curly statement_list . '}'

    error       shift, and go to state 185
    '{'         shift, and go to state 181
    '}'         shift, and go to state 212
    FOR         shift, and go to state 186
    FLD         shift, and go to state 187
    TEXT        shift, and go to state 37
    NAME        shift, and go to state 38
    DEFINELIST  shift, and go to state 107
    FNUMBER     shift, and go to state 39
    INUMBER     shift, and go to state 40
    LISTA       shift, and go to state 188
    IF          shift, and go to state 189
    '('         shift, and go to state 41
    VOID_T      shift, and go to state 108
    INT8_T      shift, and go to state 109
    INT16_T     shift, and go to state 110
    INT32_T     shift, and go to state 111
    FLOAT_T     shift, and go to state 112
    DOUBLE_T    shift, and go to state 113
    CONTINUE    shift, and go to state 191
    BREAK       shift, and go to state 192
    '-'         shift, and go to state 42
    NOT         shift, and go to state 43

    xtcc_type      go to state 193
    decl           go to state 194
    func_decl      go to state 119
    statement      go to state 213
    list_stmt      go to state 197
    if_stmt        go to state 198
    fld_stmt       go to state 199
    compound_stmt  go to state 200
    open_curly     go to state 183
    expression     go to state 201


state 196

   29 statement_list: statement .

    $default  reduce using rule 29 (statement_list)


state 197

   38 statement: list_stmt .

    $default  reduce using rule 38 (statement)


state 198

   34 statement: if_stmt .

    $default  reduce using rule 34 (statement)


state 199

   41 statement: fld_stmt .

    $default  reduce using rule 41 (statement)


state 200

   36 statement: compound_stmt .

    $default  reduce using rule 36 (statement)


state 201

   35 statement: expression . ';'
   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    ';'     shift, and go to state 214
    IN      shift, and go to state 61
    '='     shift, and go to state 62
    LOGOR   shift, and go to state 63
    LOGAND  shift, and go to state 64
    NOEQ    shift, and go to state 65
    ISEQ    shift, and go to state 66
    '<'     shift, and go to state 67
    '>'     shift, and go to state 68
    GEQ     shift, and go to state 69
    LEQ     shift, and go to state 70
    '-'     shift, and go to state 71
    '+'     shift, and go to state 72
    '*'     shift, and go to state 73
    '/'     shift, and go to state 74
    '%'     shift, and go to state 75


state 202

   31 statement_list: attributes .

    $default  reduce using rule 31 (statement_list)


state 203

   42 statement: error ';' .

    $default  reduce using rule 42 (statement)


state 204

   33 statement: FOR '(' . expression ';' expression ';' expression ')' @3 statement

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 215


state 205

   48 fld_stmt: FLD NAME . '=' NAME '(' expression ',' expression ')' ':' INUMBER ';'

    '='  shift, and go to state 216


state 206

   43 list_stmt: LISTA NAME . TEXT ';'
   44          | LISTA NAME . '[' expression ']' TEXT ';'
   45          | LISTA NAME . '[' expression ',' expression ']' TEXT ';'

    TEXT  shift, and go to state 217
    '['   shift, and go to state 218


state 207

   46 if_stmt: IF '(' . expression ')' statement
   47        | IF '(' . expression ')' statement ELSE statement

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 219


state 208

   93 attributes: ATTRIBUTE_LIST NAME . '=' @4 text_list ';'

    '='  shift, and go to state 220


state 209

   40 statement: CONTINUE ';' .

    $default  reduce using rule 40 (statement)


state 210

   39 statement: BREAK ';' .

    $default  reduce using rule 39 (statement)


state 211

   17 decl: xtcc_type NAME . ';'
   18     | xtcc_type NAME . '=' expression ';'
   19     | xtcc_type NAME . '[' INUMBER ']' ';'
   22 func_decl: xtcc_type NAME . '(' decl_comma_list ')' ';'

    ';'  shift, and go to state 148
    '['  shift, and go to state 149
    '('  shift, and go to state 221
    '='  shift, and go to state 151


state 212

   49 compound_stmt: open_curly statement_list '}' .

    $default  reduce using rule 49 (compound_stmt)


state 213

   30 statement_list: statement_list statement .

    $default  reduce using rule 30 (statement_list)


state 214

   35 statement: expression ';' .

    $default  reduce using rule 35 (statement)


state 215

   33 statement: FOR '(' expression . ';' expression ';' expression ')' @3 statement
   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    ';'     shift, and go to state 222
    IN      shift, and go to state 61
    '='     shift, and go to state 62
    LOGOR   shift, and go to state 63
    LOGAND  shift, and go to state 64
    NOEQ    shift, and go to state 65
    ISEQ    shift, and go to state 66
    '<'     shift, and go to state 67
    '>'     shift, and go to state 68
    GEQ     shift, and go to state 69
    LEQ     shift, and go to state 70
    '-'     shift, and go to state 71
    '+'     shift, and go to state 72
    '*'     shift, and go to state 73
    '/'     shift, and go to state 74
    '%'     shift, and go to state 75


state 216

   48 fld_stmt: FLD NAME '=' . NAME '(' expression ',' expression ')' ':' INUMBER ';'

    NAME  shift, and go to state 223


state 217

   43 list_stmt: LISTA NAME TEXT . ';'

    ';'  shift, and go to state 224


state 218

   44 list_stmt: LISTA NAME '[' . expression ']' TEXT ';'
   45          | LISTA NAME '[' . expression ',' expression ']' TEXT ';'

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 225


state 219

   46 if_stmt: IF '(' expression . ')' statement
   47        | IF '(' expression . ')' statement ELSE statement
   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    IN      shift, and go to state 61
    ')'     shift, and go to state 226
    '='     shift, and go to state 62
    LOGOR   shift, and go to state 63
    LOGAND  shift, and go to state 64
    NOEQ    shift, and go to state 65
    ISEQ    shift, and go to state 66
    '<'     shift, and go to state 67
    '>'     shift, and go to state 68
    GEQ     shift, and go to state 69
    LEQ     shift, and go to state 70
    '-'     shift, and go to state 71
    '+'     shift, and go to state 72
    '*'     shift, and go to state 73
    '/'     shift, and go to state 74
    '%'     shift, and go to state 75


state 220

   93 attributes: ATTRIBUTE_LIST NAME '=' . @4 text_list ';'

    $default  reduce using rule 92 (@4)

    @4  go to state 227


state 221

   22 func_decl: xtcc_type NAME '(' . decl_comma_list ')' ';'

    VOID_T    shift, and go to state 108
    INT8_T    shift, and go to state 109
    INT16_T   shift, and go to state 110
    INT32_T   shift, and go to state 111
    FLOAT_T   shift, and go to state 112
    DOUBLE_T  shift, and go to state 113

    $default  reduce using rule 28 (var_decl)

    xtcc_type        go to state 160
    decl_comma_list  go to state 228
    var_decl         go to state 162


state 222

   33 statement: FOR '(' expression ';' . expression ';' expression ')' @3 statement

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 229


state 223

   48 fld_stmt: FLD NAME '=' NAME . '(' expression ',' expression ')' ':' INUMBER ';'

    '('  shift, and go to state 230


state 224

   43 list_stmt: LISTA NAME TEXT ';' .

    $default  reduce using rule 43 (list_stmt)


state 225

   44 list_stmt: LISTA NAME '[' expression . ']' TEXT ';'
   45          | LISTA NAME '[' expression . ',' expression ']' TEXT ';'
   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    IN      shift, and go to state 61
    ']'     shift, and go to state 231
    '='     shift, and go to state 62
    ','     shift, and go to state 232
    LOGOR   shift, and go to state 63
    LOGAND  shift, and go to state 64
    NOEQ    shift, and go to state 65
    ISEQ    shift, and go to state 66
    '<'     shift, and go to state 67
    '>'     shift, and go to state 68
    GEQ     shift, and go to state 69
    LEQ     shift, and go to state 70
    '-'     shift, and go to state 71
    '+'     shift, and go to state 72
    '*'     shift, and go to state 73
    '/'     shift, and go to state 74
    '%'     shift, and go to state 75


state 226

   46 if_stmt: IF '(' expression ')' . statement
   47        | IF '(' expression ')' . statement ELSE statement

    error       shift, and go to state 185
    '{'         shift, and go to state 181
    FOR         shift, and go to state 186
    FLD         shift, and go to state 187
    TEXT        shift, and go to state 37
    NAME        shift, and go to state 38
    DEFINELIST  shift, and go to state 107
    FNUMBER     shift, and go to state 39
    INUMBER     shift, and go to state 40
    LISTA       shift, and go to state 188
    IF          shift, and go to state 189
    '('         shift, and go to state 41
    VOID_T      shift, and go to state 108
    INT8_T      shift, and go to state 109
    INT16_T     shift, and go to state 110
    INT32_T     shift, and go to state 111
    FLOAT_T     shift, and go to state 112
    DOUBLE_T    shift, and go to state 113
    CONTINUE    shift, and go to state 191
    BREAK       shift, and go to state 192
    '-'         shift, and go to state 42
    NOT         shift, and go to state 43

    xtcc_type      go to state 193
    decl           go to state 194
    func_decl      go to state 119
    statement      go to state 233
    list_stmt      go to state 197
    if_stmt        go to state 198
    fld_stmt       go to state 199
    compound_stmt  go to state 200
    open_curly     go to state 183
    expression     go to state 201


state 227

   93 attributes: ATTRIBUTE_LIST NAME '=' @4 . text_list ';'

    TEXT  shift, and go to state 234

    text_list  go to state 235


state 228

   22 func_decl: xtcc_type NAME '(' decl_comma_list . ')' ';'
   24 decl_comma_list: decl_comma_list . ',' var_decl

    ')'  shift, and go to state 236
    ','  shift, and go to state 172


state 229

   33 statement: FOR '(' expression ';' expression . ';' expression ')' @3 statement
   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    ';'     shift, and go to state 237
    IN      shift, and go to state 61
    '='     shift, and go to state 62
    LOGOR   shift, and go to state 63
    LOGAND  shift, and go to state 64
    NOEQ    shift, and go to state 65
    ISEQ    shift, and go to state 66
    '<'     shift, and go to state 67
    '>'     shift, and go to state 68
    GEQ     shift, and go to state 69
    LEQ     shift, and go to state 70
    '-'     shift, and go to state 71
    '+'     shift, and go to state 72
    '*'     shift, and go to state 73
    '/'     shift, and go to state 74
    '%'     shift, and go to state 75


state 230

   48 fld_stmt: FLD NAME '=' NAME '(' . expression ',' expression ')' ':' INUMBER ';'

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 238


state 231

   44 list_stmt: LISTA NAME '[' expression ']' . TEXT ';'

    TEXT  shift, and go to state 239


state 232

   45 list_stmt: LISTA NAME '[' expression ',' . expression ']' TEXT ';'

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 240


state 233

   46 if_stmt: IF '(' expression ')' statement .
   47        | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 241

    ELSE      [reduce using rule 46 (if_stmt)]
    $default  reduce using rule 46 (if_stmt)


state 234

   94 text_list: TEXT . ';'

    ';'  shift, and go to state 242


state 235

   93 attributes: ATTRIBUTE_LIST NAME '=' @4 text_list . ';'
   95 text_list: text_list . TEXT ';'

    ';'   shift, and go to state 243
    TEXT  shift, and go to state 244


state 236

   22 func_decl: xtcc_type NAME '(' decl_comma_list ')' . ';'

    ';'  shift, and go to state 177


state 237

   33 statement: FOR '(' expression ';' expression ';' . expression ')' @3 statement

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 245


state 238

   48 fld_stmt: FLD NAME '=' NAME '(' expression . ',' expression ')' ':' INUMBER ';'
   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    IN      shift, and go to state 61
    '='     shift, and go to state 62
    ','     shift, and go to state 246
    LOGOR   shift, and go to state 63
    LOGAND  shift, and go to state 64
    NOEQ    shift, and go to state 65
    ISEQ    shift, and go to state 66
    '<'     shift, and go to state 67
    '>'     shift, and go to state 68
    GEQ     shift, and go to state 69
    LEQ     shift, and go to state 70
    '-'     shift, and go to state 71
    '+'     shift, and go to state 72
    '*'     shift, and go to state 73
    '/'     shift, and go to state 74
    '%'     shift, and go to state 75


state 239

   44 list_stmt: LISTA NAME '[' expression ']' TEXT . ';'

    ';'  shift, and go to state 247


state 240

   45 list_stmt: LISTA NAME '[' expression ',' expression . ']' TEXT ';'
   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    IN      shift, and go to state 61
    ']'     shift, and go to state 248
    '='     shift, and go to state 62
    LOGOR   shift, and go to state 63
    LOGAND  shift, and go to state 64
    NOEQ    shift, and go to state 65
    ISEQ    shift, and go to state 66
    '<'     shift, and go to state 67
    '>'     shift, and go to state 68
    GEQ     shift, and go to state 69
    LEQ     shift, and go to state 70
    '-'     shift, and go to state 71
    '+'     shift, and go to state 72
    '*'     shift, and go to state 73
    '/'     shift, and go to state 74
    '%'     shift, and go to state 75


state 241

   47 if_stmt: IF '(' expression ')' statement ELSE . statement

    error       shift, and go to state 185
    '{'         shift, and go to state 181
    FOR         shift, and go to state 186
    FLD         shift, and go to state 187
    TEXT        shift, and go to state 37
    NAME        shift, and go to state 38
    DEFINELIST  shift, and go to state 107
    FNUMBER     shift, and go to state 39
    INUMBER     shift, and go to state 40
    LISTA       shift, and go to state 188
    IF          shift, and go to state 189
    '('         shift, and go to state 41
    VOID_T      shift, and go to state 108
    INT8_T      shift, and go to state 109
    INT16_T     shift, and go to state 110
    INT32_T     shift, and go to state 111
    FLOAT_T     shift, and go to state 112
    DOUBLE_T    shift, and go to state 113
    CONTINUE    shift, and go to state 191
    BREAK       shift, and go to state 192
    '-'         shift, and go to state 42
    NOT         shift, and go to state 43

    xtcc_type      go to state 193
    decl           go to state 194
    func_decl      go to state 119
    statement      go to state 249
    list_stmt      go to state 197
    if_stmt        go to state 198
    fld_stmt       go to state 199
    compound_stmt  go to state 200
    open_curly     go to state 183
    expression     go to state 201


state 242

   94 text_list: TEXT ';' .

    $default  reduce using rule 94 (text_list)


state 243

   93 attributes: ATTRIBUTE_LIST NAME '=' @4 text_list ';' .

    $default  reduce using rule 93 (attributes)


state 244

   95 text_list: text_list TEXT . ';'

    ';'  shift, and go to state 250


state 245

   33 statement: FOR '(' expression ';' expression ';' expression . ')' @3 statement
   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    IN      shift, and go to state 61
    ')'     shift, and go to state 251
    '='     shift, and go to state 62
    LOGOR   shift, and go to state 63
    LOGAND  shift, and go to state 64
    NOEQ    shift, and go to state 65
    ISEQ    shift, and go to state 66
    '<'     shift, and go to state 67
    '>'     shift, and go to state 68
    GEQ     shift, and go to state 69
    LEQ     shift, and go to state 70
    '-'     shift, and go to state 71
    '+'     shift, and go to state 72
    '*'     shift, and go to state 73
    '/'     shift, and go to state 74
    '%'     shift, and go to state 75


state 246

   48 fld_stmt: FLD NAME '=' NAME '(' expression ',' . expression ')' ':' INUMBER ';'

    TEXT     shift, and go to state 37
    NAME     shift, and go to state 38
    FNUMBER  shift, and go to state 39
    INUMBER  shift, and go to state 40
    '('      shift, and go to state 41
    '-'      shift, and go to state 42
    NOT      shift, and go to state 43

    expression  go to state 252


state 247

   44 list_stmt: LISTA NAME '[' expression ']' TEXT ';' .

    $default  reduce using rule 44 (list_stmt)


state 248

   45 list_stmt: LISTA NAME '[' expression ',' expression ']' . TEXT ';'

    TEXT  shift, and go to state 253


state 249

   47 if_stmt: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 47 (if_stmt)


state 250

   95 text_list: text_list TEXT ';' .

    $default  reduce using rule 95 (text_list)


state 251

   33 statement: FOR '(' expression ';' expression ';' expression ')' . @3 statement

    $default  reduce using rule 32 (@3)

    @3  go to state 254


state 252

   48 fld_stmt: FLD NAME '=' NAME '(' expression ',' expression . ')' ':' INUMBER ';'
   53 expression: expression . '+' expression
   54           | expression . '-' expression
   55           | expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '%' expression
   59           | expression . '<' expression
   60           | expression . '>' expression
   61           | expression . LEQ expression
   62           | expression . GEQ expression
   63           | expression . ISEQ expression
   64           | expression . NOEQ expression
   65           | expression . LOGOR expression
   66           | expression . LOGAND expression
   67           | expression . '=' expression
   77           | expression . IN '(' range_list ')'

    IN      shift, and go to state 61
    ')'     shift, and go to state 255
    '='     shift, and go to state 62
    LOGOR   shift, and go to state 63
    LOGAND  shift, and go to state 64
    NOEQ    shift, and go to state 65
    ISEQ    shift, and go to state 66
    '<'     shift, and go to state 67
    '>'     shift, and go to state 68
    GEQ     shift, and go to state 69
    LEQ     shift, and go to state 70
    '-'     shift, and go to state 71
    '+'     shift, and go to state 72
    '*'     shift, and go to state 73
    '/'     shift, and go to state 74
    '%'     shift, and go to state 75


state 253

   45 list_stmt: LISTA NAME '[' expression ',' expression ']' TEXT . ';'

    ';'  shift, and go to state 256


state 254

   33 statement: FOR '(' expression ';' expression ';' expression ')' @3 . statement

    error       shift, and go to state 185
    '{'         shift, and go to state 181
    FOR         shift, and go to state 186
    FLD         shift, and go to state 187
    TEXT        shift, and go to state 37
    NAME        shift, and go to state 38
    DEFINELIST  shift, and go to state 107
    FNUMBER     shift, and go to state 39
    INUMBER     shift, and go to state 40
    LISTA       shift, and go to state 188
    IF          shift, and go to state 189
    '('         shift, and go to state 41
    VOID_T      shift, and go to state 108
    INT8_T      shift, and go to state 109
    INT16_T     shift, and go to state 110
    INT32_T     shift, and go to state 111
    FLOAT_T     shift, and go to state 112
    DOUBLE_T    shift, and go to state 113
    CONTINUE    shift, and go to state 191
    BREAK       shift, and go to state 192
    '-'         shift, and go to state 42
    NOT         shift, and go to state 43

    xtcc_type      go to state 193
    decl           go to state 194
    func_decl      go to state 119
    statement      go to state 257
    list_stmt      go to state 197
    if_stmt        go to state 198
    fld_stmt       go to state 199
    compound_stmt  go to state 200
    open_curly     go to state 183
    expression     go to state 201


state 255

   48 fld_stmt: FLD NAME '=' NAME '(' expression ',' expression ')' . ':' INUMBER ';'

    ':'  shift, and go to state 258


state 256

   45 list_stmt: LISTA NAME '[' expression ',' expression ']' TEXT ';' .

    $default  reduce using rule 45 (list_stmt)


state 257

   33 statement: FOR '(' expression ';' expression ';' expression ')' @3 statement .

    $default  reduce using rule 33 (statement)


state 258

   48 fld_stmt: FLD NAME '=' NAME '(' expression ',' expression ')' ':' . INUMBER ';'

    INUMBER  shift, and go to state 259


state 259

   48 fld_stmt: FLD NAME '=' NAME '(' expression ',' expression ')' ':' INUMBER . ';'

    ';'  shift, and go to state 260


state 260

   48 fld_stmt: FLD NAME '=' NAME '(' expression ',' expression ')' ':' INUMBER ';' .

    $default  reduce using rule 48 (fld_stmt)
